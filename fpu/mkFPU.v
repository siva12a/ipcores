//
// Generated by Bluespec Compiler
//
//
// Ports:
// Name                         I/O  size props
// RDY_server_core_request_put    O     1 reg
// server_core_response_get       O    70 reg
// RDY_server_core_response_get   O     1 reg
// RDY_server_reset_request_put   O     1 reg
// RDY_server_reset_response_get  O     1 reg
// CLK                            I     1 clock
// RST_N                          I     1 reset
// server_core_request_put        I   202 reg
// EN_server_core_request_put     I     1
// EN_server_reset_request_put    I     1
// EN_server_reset_response_get   I     1
// EN_server_core_response_get    I     1
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkFPU(CLK,
	     RST_N,

	     server_core_request_put,
	     EN_server_core_request_put,
	     RDY_server_core_request_put,

	     EN_server_core_response_get,
	     server_core_response_get,
	     RDY_server_core_response_get,

	     EN_server_reset_request_put,
	     RDY_server_reset_request_put,

	     EN_server_reset_response_get,
	     RDY_server_reset_response_get);
  input  CLK;
  input  RST_N;

  // action method server_core_request_put
  input  [201 : 0] server_core_request_put;
  input  EN_server_core_request_put;
  output RDY_server_core_request_put;

  // actionvalue method server_core_response_get
  input  EN_server_core_response_get;
  output [69 : 0] server_core_response_get;
  output RDY_server_core_response_get;

  // action method server_reset_request_put
  input  EN_server_reset_request_put;
  output RDY_server_reset_request_put;

  // action method server_reset_response_get
  input  EN_server_reset_response_get;
  output RDY_server_reset_response_get;

  // signals for module outputs
  wire [69 : 0] server_core_response_get;
  wire RDY_server_core_request_put,
       RDY_server_core_response_get,
       RDY_server_reset_request_put,
       RDY_server_reset_response_get;

  // inlined wires
  reg [36 : 0] resWire_wget;
  wire crg_done_EN_port0__write,
       crg_done_EN_port1__write,
       crg_done_port1__read,
       crg_done_port2__read,
       resWire_whas;

  // register crg_done
  reg crg_done;
  wire crg_done_D_IN, crg_done_EN;

  // register rg_b
  reg [59 : 0] rg_b;
  wire [59 : 0] rg_b_D_IN;
  wire rg_b_EN;

  // register rg_busy
  reg rg_busy;
  wire rg_busy_D_IN, rg_busy_EN;

  // register rg_index
  reg [4 : 0] rg_index;
  wire [4 : 0] rg_index_D_IN;
  wire rg_index_EN;

  // register rg_r
  reg [59 : 0] rg_r;
  wire [59 : 0] rg_r_D_IN;
  wire rg_r_EN;

  // register rg_res
  reg [60 : 0] rg_res;
  wire [60 : 0] rg_res_D_IN;
  wire rg_res_EN;

  // register rg_s
  reg [59 : 0] rg_s;
  wire [59 : 0] rg_s_D_IN;
  wire rg_s_EN;

  // ports of submodule fFirst
  wire [115 : 0] fFirst_D_IN, fFirst_D_OUT;
  wire fFirst_CLR, fFirst_DEQ, fFirst_EMPTY_N, fFirst_ENQ, fFirst_FULL_N;

  // ports of submodule fNext_0
  wire [115 : 0] fNext_0_D_IN, fNext_0_D_OUT;
  wire fNext_0_CLR, fNext_0_DEQ, fNext_0_EMPTY_N, fNext_0_ENQ, fNext_0_FULL_N;

  // ports of submodule fNext_1
  wire [115 : 0] fNext_1_D_IN, fNext_1_D_OUT;
  wire fNext_1_CLR, fNext_1_DEQ, fNext_1_EMPTY_N, fNext_1_ENQ, fNext_1_FULL_N;

  // ports of submodule fNext_10
  wire [115 : 0] fNext_10_D_IN, fNext_10_D_OUT;
  wire fNext_10_CLR,
       fNext_10_DEQ,
       fNext_10_EMPTY_N,
       fNext_10_ENQ,
       fNext_10_FULL_N;

  // ports of submodule fNext_11
  wire [115 : 0] fNext_11_D_IN, fNext_11_D_OUT;
  wire fNext_11_CLR,
       fNext_11_DEQ,
       fNext_11_EMPTY_N,
       fNext_11_ENQ,
       fNext_11_FULL_N;

  // ports of submodule fNext_12
  wire [115 : 0] fNext_12_D_IN, fNext_12_D_OUT;
  wire fNext_12_CLR,
       fNext_12_DEQ,
       fNext_12_EMPTY_N,
       fNext_12_ENQ,
       fNext_12_FULL_N;

  // ports of submodule fNext_13
  wire [115 : 0] fNext_13_D_IN, fNext_13_D_OUT;
  wire fNext_13_CLR,
       fNext_13_DEQ,
       fNext_13_EMPTY_N,
       fNext_13_ENQ,
       fNext_13_FULL_N;

  // ports of submodule fNext_14
  wire [115 : 0] fNext_14_D_IN, fNext_14_D_OUT;
  wire fNext_14_CLR,
       fNext_14_DEQ,
       fNext_14_EMPTY_N,
       fNext_14_ENQ,
       fNext_14_FULL_N;

  // ports of submodule fNext_15
  wire [115 : 0] fNext_15_D_IN, fNext_15_D_OUT;
  wire fNext_15_CLR,
       fNext_15_DEQ,
       fNext_15_EMPTY_N,
       fNext_15_ENQ,
       fNext_15_FULL_N;

  // ports of submodule fNext_16
  wire [115 : 0] fNext_16_D_IN, fNext_16_D_OUT;
  wire fNext_16_CLR,
       fNext_16_DEQ,
       fNext_16_EMPTY_N,
       fNext_16_ENQ,
       fNext_16_FULL_N;

  // ports of submodule fNext_17
  wire [115 : 0] fNext_17_D_IN, fNext_17_D_OUT;
  wire fNext_17_CLR,
       fNext_17_DEQ,
       fNext_17_EMPTY_N,
       fNext_17_ENQ,
       fNext_17_FULL_N;

  // ports of submodule fNext_18
  wire [115 : 0] fNext_18_D_IN, fNext_18_D_OUT;
  wire fNext_18_CLR,
       fNext_18_DEQ,
       fNext_18_EMPTY_N,
       fNext_18_ENQ,
       fNext_18_FULL_N;

  // ports of submodule fNext_19
  wire [115 : 0] fNext_19_D_IN, fNext_19_D_OUT;
  wire fNext_19_CLR,
       fNext_19_DEQ,
       fNext_19_EMPTY_N,
       fNext_19_ENQ,
       fNext_19_FULL_N;

  // ports of submodule fNext_2
  wire [115 : 0] fNext_2_D_IN, fNext_2_D_OUT;
  wire fNext_2_CLR, fNext_2_DEQ, fNext_2_EMPTY_N, fNext_2_ENQ, fNext_2_FULL_N;

  // ports of submodule fNext_20
  wire [115 : 0] fNext_20_D_IN, fNext_20_D_OUT;
  wire fNext_20_CLR,
       fNext_20_DEQ,
       fNext_20_EMPTY_N,
       fNext_20_ENQ,
       fNext_20_FULL_N;

  // ports of submodule fNext_21
  wire [115 : 0] fNext_21_D_IN, fNext_21_D_OUT;
  wire fNext_21_CLR,
       fNext_21_DEQ,
       fNext_21_EMPTY_N,
       fNext_21_ENQ,
       fNext_21_FULL_N;

  // ports of submodule fNext_22
  wire [115 : 0] fNext_22_D_IN, fNext_22_D_OUT;
  wire fNext_22_CLR,
       fNext_22_DEQ,
       fNext_22_EMPTY_N,
       fNext_22_ENQ,
       fNext_22_FULL_N;

  // ports of submodule fNext_23
  wire [115 : 0] fNext_23_D_IN, fNext_23_D_OUT;
  wire fNext_23_CLR,
       fNext_23_DEQ,
       fNext_23_EMPTY_N,
       fNext_23_ENQ,
       fNext_23_FULL_N;

  // ports of submodule fNext_24
  wire [115 : 0] fNext_24_D_IN, fNext_24_D_OUT;
  wire fNext_24_CLR,
       fNext_24_DEQ,
       fNext_24_EMPTY_N,
       fNext_24_ENQ,
       fNext_24_FULL_N;

  // ports of submodule fNext_25
  wire [115 : 0] fNext_25_D_IN, fNext_25_D_OUT;
  wire fNext_25_CLR,
       fNext_25_DEQ,
       fNext_25_EMPTY_N,
       fNext_25_ENQ,
       fNext_25_FULL_N;

  // ports of submodule fNext_26
  wire [115 : 0] fNext_26_D_IN, fNext_26_D_OUT;
  wire fNext_26_CLR,
       fNext_26_DEQ,
       fNext_26_EMPTY_N,
       fNext_26_ENQ,
       fNext_26_FULL_N;

  // ports of submodule fNext_27
  wire [115 : 0] fNext_27_D_IN, fNext_27_D_OUT;
  wire fNext_27_CLR,
       fNext_27_DEQ,
       fNext_27_EMPTY_N,
       fNext_27_ENQ,
       fNext_27_FULL_N;

  // ports of submodule fNext_28
  wire [115 : 0] fNext_28_D_IN, fNext_28_D_OUT;
  wire fNext_28_CLR,
       fNext_28_DEQ,
       fNext_28_EMPTY_N,
       fNext_28_ENQ,
       fNext_28_FULL_N;

  // ports of submodule fNext_3
  wire [115 : 0] fNext_3_D_IN, fNext_3_D_OUT;
  wire fNext_3_CLR, fNext_3_DEQ, fNext_3_EMPTY_N, fNext_3_ENQ, fNext_3_FULL_N;

  // ports of submodule fNext_4
  wire [115 : 0] fNext_4_D_IN, fNext_4_D_OUT;
  wire fNext_4_CLR, fNext_4_DEQ, fNext_4_EMPTY_N, fNext_4_ENQ, fNext_4_FULL_N;

  // ports of submodule fNext_5
  wire [115 : 0] fNext_5_D_IN, fNext_5_D_OUT;
  wire fNext_5_CLR, fNext_5_DEQ, fNext_5_EMPTY_N, fNext_5_ENQ, fNext_5_FULL_N;

  // ports of submodule fNext_6
  wire [115 : 0] fNext_6_D_IN, fNext_6_D_OUT;
  wire fNext_6_CLR, fNext_6_DEQ, fNext_6_EMPTY_N, fNext_6_ENQ, fNext_6_FULL_N;

  // ports of submodule fNext_7
  wire [115 : 0] fNext_7_D_IN, fNext_7_D_OUT;
  wire fNext_7_CLR, fNext_7_DEQ, fNext_7_EMPTY_N, fNext_7_ENQ, fNext_7_FULL_N;

  // ports of submodule fNext_8
  wire [115 : 0] fNext_8_D_IN, fNext_8_D_OUT;
  wire fNext_8_CLR, fNext_8_DEQ, fNext_8_EMPTY_N, fNext_8_ENQ, fNext_8_FULL_N;

  // ports of submodule fNext_9
  wire [115 : 0] fNext_9_D_IN, fNext_9_D_OUT;
  wire fNext_9_CLR, fNext_9_DEQ, fNext_9_EMPTY_N, fNext_9_ENQ, fNext_9_FULL_N;

  // ports of submodule fRequest
  wire [83 : 0] fRequest_D_IN, fRequest_D_OUT;
  wire fRequest_CLR,
       fRequest_DEQ,
       fRequest_EMPTY_N,
       fRequest_ENQ,
       fRequest_FULL_N;

  // ports of submodule fResponse
  wire [55 : 0] fResponse_D_IN, fResponse_D_OUT;
  wire fResponse_CLR,
       fResponse_DEQ,
       fResponse_EMPTY_N,
       fResponse_ENQ,
       fResponse_FULL_N;

  // ports of submodule fpu_div_fOperands_S0
  wire [66 : 0] fpu_div_fOperands_S0_D_IN, fpu_div_fOperands_S0_D_OUT;
  wire fpu_div_fOperands_S0_CLR,
       fpu_div_fOperands_S0_DEQ,
       fpu_div_fOperands_S0_EMPTY_N,
       fpu_div_fOperands_S0_ENQ,
       fpu_div_fOperands_S0_FULL_N;

  // ports of submodule fpu_div_fResult_S5
  wire [36 : 0] fpu_div_fResult_S5_D_IN, fpu_div_fResult_S5_D_OUT;
  wire fpu_div_fResult_S5_CLR,
       fpu_div_fResult_S5_DEQ,
       fpu_div_fResult_S5_EMPTY_N,
       fpu_div_fResult_S5_ENQ,
       fpu_div_fResult_S5_FULL_N;

  // ports of submodule fpu_div_fState_S1
  wire [164 : 0] fpu_div_fState_S1_D_IN, fpu_div_fState_S1_D_OUT;
  wire fpu_div_fState_S1_CLR,
       fpu_div_fState_S1_DEQ,
       fpu_div_fState_S1_EMPTY_N,
       fpu_div_fState_S1_ENQ,
       fpu_div_fState_S1_FULL_N;

  // ports of submodule fpu_div_fState_S2
  wire [80 : 0] fpu_div_fState_S2_D_IN, fpu_div_fState_S2_D_OUT;
  wire fpu_div_fState_S2_CLR,
       fpu_div_fState_S2_DEQ,
       fpu_div_fState_S2_EMPTY_N,
       fpu_div_fState_S2_ENQ,
       fpu_div_fState_S2_FULL_N;

  // ports of submodule fpu_div_fState_S3
  wire [101 : 0] fpu_div_fState_S3_D_IN, fpu_div_fState_S3_D_OUT;
  wire fpu_div_fState_S3_CLR,
       fpu_div_fState_S3_DEQ,
       fpu_div_fState_S3_EMPTY_N,
       fpu_div_fState_S3_ENQ,
       fpu_div_fState_S3_FULL_N;

  // ports of submodule fpu_div_fState_S4
  wire [74 : 0] fpu_div_fState_S4_D_IN, fpu_div_fState_S4_D_OUT;
  wire fpu_div_fState_S4_CLR,
       fpu_div_fState_S4_DEQ,
       fpu_div_fState_S4_EMPTY_N,
       fpu_div_fState_S4_ENQ,
       fpu_div_fState_S4_FULL_N;

  // ports of submodule fpu_madd_fOperand_S0
  wire [99 : 0] fpu_madd_fOperand_S0_D_IN, fpu_madd_fOperand_S0_D_OUT;
  wire fpu_madd_fOperand_S0_CLR,
       fpu_madd_fOperand_S0_DEQ,
       fpu_madd_fOperand_S0_EMPTY_N,
       fpu_madd_fOperand_S0_ENQ,
       fpu_madd_fOperand_S0_FULL_N;

  // ports of submodule fpu_madd_fProd_S2
  wire [47 : 0] fpu_madd_fProd_S2_D_IN, fpu_madd_fProd_S2_D_OUT;
  wire fpu_madd_fProd_S2_CLR,
       fpu_madd_fProd_S2_DEQ,
       fpu_madd_fProd_S2_EMPTY_N,
       fpu_madd_fProd_S2_ENQ,
       fpu_madd_fProd_S2_FULL_N;

  // ports of submodule fpu_madd_fProd_S3
  wire [47 : 0] fpu_madd_fProd_S3_D_IN, fpu_madd_fProd_S3_D_OUT;
  wire fpu_madd_fProd_S3_CLR,
       fpu_madd_fProd_S3_DEQ,
       fpu_madd_fProd_S3_EMPTY_N,
       fpu_madd_fProd_S3_ENQ,
       fpu_madd_fProd_S3_FULL_N;

  // ports of submodule fpu_madd_fResult_S9
  wire [36 : 0] fpu_madd_fResult_S9_D_IN, fpu_madd_fResult_S9_D_OUT;
  wire fpu_madd_fResult_S9_CLR,
       fpu_madd_fResult_S9_DEQ,
       fpu_madd_fResult_S9_EMPTY_N,
       fpu_madd_fResult_S9_ENQ,
       fpu_madd_fResult_S9_FULL_N;

  // ports of submodule fpu_madd_fState_S1
  wire [132 : 0] fpu_madd_fState_S1_D_IN, fpu_madd_fState_S1_D_OUT;
  wire fpu_madd_fState_S1_CLR,
       fpu_madd_fState_S1_DEQ,
       fpu_madd_fState_S1_EMPTY_N,
       fpu_madd_fState_S1_ENQ,
       fpu_madd_fState_S1_FULL_N;

  // ports of submodule fpu_madd_fState_S2
  wire [84 : 0] fpu_madd_fState_S2_D_IN, fpu_madd_fState_S2_D_OUT;
  wire fpu_madd_fState_S2_CLR,
       fpu_madd_fState_S2_DEQ,
       fpu_madd_fState_S2_EMPTY_N,
       fpu_madd_fState_S2_ENQ,
       fpu_madd_fState_S2_FULL_N;

  // ports of submodule fpu_madd_fState_S3
  wire [84 : 0] fpu_madd_fState_S3_D_IN, fpu_madd_fState_S3_D_OUT;
  wire fpu_madd_fState_S3_CLR,
       fpu_madd_fState_S3_DEQ,
       fpu_madd_fState_S3_EMPTY_N,
       fpu_madd_fState_S3_ENQ,
       fpu_madd_fState_S3_FULL_N;

  // ports of submodule fpu_madd_fState_S4
  wire [107 : 0] fpu_madd_fState_S4_D_IN, fpu_madd_fState_S4_D_OUT;
  wire fpu_madd_fState_S4_CLR,
       fpu_madd_fState_S4_DEQ,
       fpu_madd_fState_S4_EMPTY_N,
       fpu_madd_fState_S4_ENQ,
       fpu_madd_fState_S4_FULL_N;

  // ports of submodule fpu_madd_fState_S5
  wire [119 : 0] fpu_madd_fState_S5_D_IN, fpu_madd_fState_S5_D_OUT;
  wire fpu_madd_fState_S5_CLR,
       fpu_madd_fState_S5_DEQ,
       fpu_madd_fState_S5_EMPTY_N,
       fpu_madd_fState_S5_ENQ,
       fpu_madd_fState_S5_FULL_N;

  // ports of submodule fpu_madd_fState_S6
  wire [109 : 0] fpu_madd_fState_S6_D_IN, fpu_madd_fState_S6_D_OUT;
  wire fpu_madd_fState_S6_CLR,
       fpu_madd_fState_S6_DEQ,
       fpu_madd_fState_S6_EMPTY_N,
       fpu_madd_fState_S6_ENQ,
       fpu_madd_fState_S6_FULL_N;

  // ports of submodule fpu_madd_fState_S7
  wire [109 : 0] fpu_madd_fState_S7_D_IN, fpu_madd_fState_S7_D_OUT;
  wire fpu_madd_fState_S7_CLR,
       fpu_madd_fState_S7_DEQ,
       fpu_madd_fState_S7_EMPTY_N,
       fpu_madd_fState_S7_ENQ,
       fpu_madd_fState_S7_FULL_N;

  // ports of submodule fpu_madd_fState_S8
  wire [76 : 0] fpu_madd_fState_S8_D_IN, fpu_madd_fState_S8_D_OUT;
  wire fpu_madd_fState_S8_CLR,
       fpu_madd_fState_S8_DEQ,
       fpu_madd_fState_S8_EMPTY_N,
       fpu_madd_fState_S8_ENQ,
       fpu_madd_fState_S8_FULL_N;

  // ports of submodule fpu_sqr_fOperand_S0
  wire [34 : 0] fpu_sqr_fOperand_S0_D_IN, fpu_sqr_fOperand_S0_D_OUT;
  wire fpu_sqr_fOperand_S0_CLR,
       fpu_sqr_fOperand_S0_DEQ,
       fpu_sqr_fOperand_S0_EMPTY_N,
       fpu_sqr_fOperand_S0_ENQ,
       fpu_sqr_fOperand_S0_FULL_N;

  // ports of submodule fpu_sqr_fResult_S5
  wire [36 : 0] fpu_sqr_fResult_S5_D_IN, fpu_sqr_fResult_S5_D_OUT;
  wire fpu_sqr_fResult_S5_CLR,
       fpu_sqr_fResult_S5_DEQ,
       fpu_sqr_fResult_S5_EMPTY_N,
       fpu_sqr_fResult_S5_ENQ,
       fpu_sqr_fResult_S5_FULL_N;

  // ports of submodule fpu_sqr_fState_S1
  wire [102 : 0] fpu_sqr_fState_S1_D_IN, fpu_sqr_fState_S1_D_OUT;
  wire fpu_sqr_fState_S1_CLR,
       fpu_sqr_fState_S1_DEQ,
       fpu_sqr_fState_S1_EMPTY_N,
       fpu_sqr_fState_S1_ENQ,
       fpu_sqr_fState_S1_FULL_N;

  // ports of submodule fpu_sqr_fState_S2
  wire [72 : 0] fpu_sqr_fState_S2_D_IN, fpu_sqr_fState_S2_D_OUT;
  wire fpu_sqr_fState_S2_CLR,
       fpu_sqr_fState_S2_DEQ,
       fpu_sqr_fState_S2_EMPTY_N,
       fpu_sqr_fState_S2_ENQ,
       fpu_sqr_fState_S2_FULL_N;

  // ports of submodule fpu_sqr_fState_S3
  wire [103 : 0] fpu_sqr_fState_S3_D_IN, fpu_sqr_fState_S3_D_OUT;
  wire fpu_sqr_fState_S3_CLR,
       fpu_sqr_fState_S3_DEQ,
       fpu_sqr_fState_S3_EMPTY_N,
       fpu_sqr_fState_S3_ENQ,
       fpu_sqr_fState_S3_FULL_N;

  // ports of submodule fpu_sqr_fState_S4
  wire [74 : 0] fpu_sqr_fState_S4_D_IN, fpu_sqr_fState_S4_D_OUT;
  wire fpu_sqr_fState_S4_CLR,
       fpu_sqr_fState_S4_DEQ,
       fpu_sqr_fState_S4_EMPTY_N,
       fpu_sqr_fState_S4_ENQ,
       fpu_sqr_fState_S4_FULL_N;

  // ports of submodule iFifo
  wire [201 : 0] iFifo_D_IN, iFifo_D_OUT;
  wire iFifo_CLR, iFifo_DEQ, iFifo_EMPTY_N, iFifo_ENQ, iFifo_FULL_N;

  // ports of submodule isNegateFifo
  wire isNegateFifo_CLR,
       isNegateFifo_DEQ,
       isNegateFifo_D_IN,
       isNegateFifo_D_OUT,
       isNegateFifo_EMPTY_N,
       isNegateFifo_ENQ,
       isNegateFifo_FULL_N;

  // ports of submodule oFifo
  wire [69 : 0] oFifo_D_IN, oFifo_D_OUT;
  wire oFifo_CLR, oFifo_DEQ, oFifo_EMPTY_N, oFifo_ENQ, oFifo_FULL_N;

  // ports of submodule resetReqsF
  wire resetReqsF_CLR,
       resetReqsF_DEQ,
       resetReqsF_EMPTY_N,
       resetReqsF_ENQ,
       resetReqsF_FULL_N;

  // ports of submodule resetRspsF
  wire resetRspsF_CLR,
       resetRspsF_DEQ,
       resetRspsF_EMPTY_N,
       resetRspsF_ENQ,
       resetRspsF_FULL_N;

  // ports of submodule rmdFifo
  wire [2 : 0] rmdFifo_D_IN;
  wire rmdFifo_CLR, rmdFifo_DEQ, rmdFifo_EMPTY_N, rmdFifo_ENQ, rmdFifo_FULL_N;

  // rule scheduling signals
  wire WILL_FIRE_RL_fpu_sqr_s2_stage, WILL_FIRE_RL_start_op;

  // inputs to muxes for submodule ports
  wire [60 : 0] MUX_rg_res_write_1__VAL_2;
  wire [59 : 0] MUX_rg_b_write_1__VAL_1,
		MUX_rg_b_write_1__VAL_2,
		MUX_rg_r_write_1__VAL_2,
		MUX_rg_s_write_1__VAL_1,
		MUX_rg_s_write_1__VAL_2;
  wire [4 : 0] MUX_rg_index_write_1__VAL_2;
  wire MUX_crg_done_port1__write_1__SEL_1, MUX_crg_done_port1__write_1__SEL_2;

  // remaining internal signals
  reg [66 : 0] CASE_iFifoD_OUT_BITS_3_TO_0_0_iFifoD_OUT_BIT_ETC__q49;
  reg [31 : 0] CASE_fpu_div_fState_S4D_OUT_BITS_36_TO_34_0_C_ETC__q45,
	       CASE_fpu_sqr_fState_S4D_OUT_BITS_36_TO_34_0_C_ETC__q55,
	       CASE_iFifoD_OUT_BITS_3_TO_0_0_iFifoD_OUT_BIT_ETC__q48;
  reg [30 : 0] CASE_fpu_div_fState_S3D_OUT_BITS_63_TO_61_0_2_ETC__q47,
	       CASE_fpu_div_fState_S4D_OUT_BITS_1_TO_0_0_0_0_ETC__q44,
	       CASE_fpu_div_fState_S4D_OUT_BITS_1_TO_0_0b0_f_ETC__q43,
	       CASE_fpu_div_fState_S4D_OUT_BITS_36_TO_34_2_I_ETC__q41,
	       CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q36,
	       CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q37,
	       CASE_fpu_madd_fState_S8D_OUT_BITS_38_TO_36_0__ETC__q38,
	       CASE_fpu_sqr_fState_S4D_OUT_BITS_1_TO_0_0_0_0_ETC__q54,
	       CASE_fpu_sqr_fState_S4D_OUT_BITS_1_TO_0_0b0_f_ETC__q53,
	       CASE_fpu_sqr_fState_S4D_OUT_BITS_36_TO_34_2_I_ETC__q51;
  reg [22 : 0] CASE_fpu_div_fState_S4D_OUT_BITS_1_TO_0_0b0_f_ETC__q1,
	       CASE_fpu_div_fState_S4D_OUT_BITS_1_TO_0_0b0_f_ETC__q2,
	       CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q5,
	       CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q6,
	       CASE_fpu_sqr_fState_S4D_OUT_BITS_1_TO_0_0b0_f_ETC__q3,
	       CASE_fpu_sqr_fState_S4D_OUT_BITS_1_TO_0_0b0_f_ETC__q4,
	       _theResult___fst_sfd__h19397,
	       _theResult___fst_sfd__h19683,
	       _theResult___fst_sfd__h32982,
	       _theResult___fst_sfd__h65045,
	       _theResult___fst_sfd__h91534;
  reg [7 : 0] CASE_fpu_div_fState_S4D_OUT_BITS_1_TO_0_0b0_f_ETC__q13,
	      CASE_fpu_div_fState_S4D_OUT_BITS_1_TO_0_0b0_f_ETC__q14,
	      CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q30,
	      CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q31,
	      CASE_fpu_sqr_fState_S4D_OUT_BITS_1_TO_0_0b0_f_ETC__q20,
	      CASE_fpu_sqr_fState_S4D_OUT_BITS_1_TO_0_0b0_f_ETC__q21,
	      _theResult___fst_exp__h19396,
	      _theResult___fst_exp__h32981,
	      _theResult___fst_exp__h65044,
	      _theResult___fst_exp__h91533;
  reg CASE_fpu_div_fOperands_S0D_OUT_BITS_2_TO_0_0__ETC__q9,
      CASE_fpu_div_fState_S3D_OUT_BITS_63_TO_61_0_f_ETC__q46,
      CASE_fpu_div_fState_S4D_OUT_BITS_1_TO_0_0b0_f_ETC__q42,
      CASE_fpu_div_fState_S4D_OUT_BITS_36_TO_34_2_f_ETC__q40,
      CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q32,
      CASE_fpu_madd_fState_S8D_OUT_BITS_38_TO_36_0__ETC__q33,
      CASE_fpu_sqr_fState_S4D_OUT_BITS_1_TO_0_0b0_f_ETC__q52,
      CASE_fpu_sqr_fState_S4D_OUT_BITS_36_TO_34_2_f_ETC__q50;
  wire [76 : 0] IF_NOT_fpu_madd_fState_S4_first__250_BIT_66_25_ETC___d2294;
  wire [65 : 0] IF_NOT_fpu_madd_fState_S4_first__250_BIT_66_25_ETC___d2293;
  wire [60 : 0] IF_IF_rg_index_192_EQ_31_207_THEN_NOT_rg_res_1_ETC___d1233,
		IF_rg_index_192_EQ_31_207_THEN_rg_res_196_ELSE_ETC___d1232;
  wire [59 : 0] IF_IF_rg_index_192_EQ_31_207_OR_rg_res_196_BIT_ETC___d1230,
		IF_rg_index_192_EQ_31_207_OR_rg_res_196_BIT_60_ETC___d1216,
		IF_rg_index_192_EQ_31_207_OR_rg_res_196_BIT_60_ETC___d1227,
		IF_rg_index_192_EQ_31_207_OR_rg_res_196_BIT_60_ETC___d1239,
		IF_rg_res_196_BIT_60_197_THEN_rg_res_196_BITS__ETC___d1205,
		_theResult___fst__h33823,
		_theResult___fst__h33952,
		_theResult___snd_fst__h33825,
		_theResult___snd_fst__h33954,
		_theResult___snd_snd__h34001,
		_theResult___snd_snd__h34076,
		_theResult___snd_snd_snd__h33828,
		_theResult___snd_snd_snd__h33957,
		b___1__h53600,
		b__h33960,
		b__h34073,
		r__h34011,
		r__h34015,
		r__h34085,
		r__h34123,
		s__h34010,
		s__h34084,
		sum__h33958,
		sum__h34071,
		x__h58416;
  wire [57 : 0] IF_fpu_madd_fOperand_S0_first__769_BITS_65_TO__ETC___d1906,
		b__h1067,
		b__h1378,
		b__h1689,
		b__h2000,
		b__h2311,
		b__h2622,
		b__h2933,
		b__h3244,
		b__h3555,
		b__h3866,
		b__h4177,
		b__h4488,
		b__h4799,
		b__h5110,
		b__h5421,
		b__h5732,
		b__h6043,
		b__h6354,
		b__h6665,
		b__h6976,
		b__h7287,
		b__h756,
		b__h7598,
		b__h7909,
		b__h8220,
		b__h8531,
		b__h8842,
		b__h9153,
		b__h9464,
		b__h9698,
		value__h9663;
  wire [55 : 0] x__h25062;
  wire [47 : 0] IF_0_CONCAT_IF_IF_898_MINUS_fpu_madd_fState_S3_ETC__q23,
		_theResult___fst__h76026,
		_theResult___snd__h83566,
		_theResult___snd__h83580,
		_theResult___snd__h83582,
		_theResult___snd__h83594,
		_theResult___snd__h83600,
		_theResult___snd__h83618,
		_theResult___snd__h83623,
		fpu_madd_fProd_S3_first__945_SRL_IF_898_MINUS__ETC___d1948,
		sfdBC__h75325,
		sfdin__h83543,
		x__h76095;
  wire [36 : 0] IF_fpu_madd_fState_S8_first__530_BIT_35_533_AN_ETC___d2651;
  wire [31 : 0] IF_IF_fpu_madd_fOperand_S0_first__769_BIT_99_7_ETC___d1881,
		IF_IF_fpu_madd_fOperand_S0_first__769_BIT_99_7_ETC___d1884,
		IF_fpu_div_fOperands_S0_first__95_BITS_33_TO_2_ETC___d713,
		IF_fpu_madd_fOperand_S0_first__769_BITS_65_TO__ETC___d1883,
		NOT_fpu_div_fOperands_S0_first__95_BITS_65_TO__ETC___d710,
		fpu_div_fState_S3_first__38_BIT_60_55_CONCAT_I_ETC___d1072;
  wire [30 : 0] IF_0_CONCAT_IF_fpu_sqr_fState_S3_first__455_BI_ETC__q18,
		IF_0b0_CONCAT_NOT_fpu_div_fState_S4_first__078_ETC___d1115,
		IF_0b0_CONCAT_NOT_fpu_madd_fState_S8_first__53_ETC___d2635,
		IF_0b0_CONCAT_NOT_fpu_sqr_fState_S4_first__653_ETC___d1690,
		IF_IF_898_MINUS_fpu_madd_fState_S3_first__933__ETC___d2238,
		IF_IF_fpu_div_fState_S3_first__38_BITS_59_TO_5_ETC___d1065,
		IF_IF_fpu_madd_fOperand_S0_first__769_BIT_99_7_ETC___d1876,
		IF_IF_fpu_madd_fState_S7_first__339_BIT_67_343_ETC___d2522,
		IF_fpu_madd_fOperand_S0_first__769_BITS_65_TO__ETC___d1877,
		IF_fpu_madd_fOperand_S0_first__769_BIT_99_770__ETC___d1844,
		IF_fpu_madd_fState_S3_first__933_BITS_9_TO_0_9_ETC___d2240,
		IF_fpu_sqr_fState_S3_first__455_BIT_30_463_AND_ETC___d1645,
		_theResult___snd__h64035,
		_theResult___snd__h64050,
		_theResult___snd__h64052,
		_theResult___snd__h64065,
		_theResult___snd__h64071,
		_theResult___snd__h64089,
		_theResult___snd__h64094,
		result__h58410,
		sfdin__h64012,
		v__h58340;
  wire [29 : 0] sfd___1__h43481, sfd__h34881, sfd__h34883, x__h43472;
  wire [28 : 0] IF_0_CONCAT_IF_IF_fpu_div_fState_S3_first__38__ETC__q11,
		IF_fNext_28D_OUT_BIT_57_THEN_fNext_28_first___ETC__q39,
		_theResult____h25900,
		_theResult___snd__h27543,
		_theResult___snd__h31989,
		_theResult___snd__h32004,
		_theResult___snd__h32006,
		_theResult___snd__h32019,
		_theResult___snd__h32025,
		_theResult___snd__h32043,
		_theResult___snd__h32048,
		_theResult___snd_snd_snd__h27023,
		b__h380,
		fNext_28_first__76_BITS_86_TO_58_78_PLUS_NEG_I_ETC___d481,
		result__h25914,
		result__h25945,
		result__h26095,
		sfdin__h27178,
		sfdin__h31966,
		v__h25858,
		x__h26034;
  wire [27 : 0] IF_0_CONCAT_IF_IF_fpu_madd_fState_S7_first__33_ETC__q28,
		_theResult___snd__h90517,
		_theResult___snd__h90531,
		_theResult___snd__h90533,
		_theResult___snd__h90545,
		_theResult___snd__h90551,
		_theResult___snd__h90569,
		_theResult___snd__h90574,
		fpu_madd_fState_S5_first__299_BITS_27_TO_0_305_ETC___d2310,
		guard__h84951,
		result__h84956,
		sfdA__h84164,
		sfdBC__h84165,
		sfd__h85687,
		sfdin__h90494,
		value__h25958,
		x__h25123,
		x__h84532,
		x__h84536,
		x__h84943,
		x__h85447,
		x__h85456;
  wire [24 : 0] sfd__h32613,
		sfd__h64676,
		sfd__h91157,
		value__h25065,
		value__h38985;
  wire [23 : 0] sfdA__h9983,
		sfdA__h9987,
		sfdB__h9984,
		sfdB__h9989,
		x__h73954,
		x__h73966;
  wire [22 : 0] IF_fpu_div_fOperands_S0_first__95_BITS_33_TO_2_ETC___d708,
		_theResult___fst_sfd__h32985,
		_theResult___fst_sfd__h65048,
		_theResult___fst_sfd__h65657,
		_theResult___sfd__h32904,
		_theResult___sfd__h64967,
		_theResult___sfd__h91456,
		_theResult___snd_fst_sfd__h24998,
		out_sfd__h32907,
		out_sfd__h64970,
		out_sfd__h91459,
		sfd__h19066,
		sfd__h19069,
		sfd__h34934,
		sfd__h67233,
		sfd__h67236,
		sfd__h67239;
  wire [9 : 0] IF_fpu_div_fOperands_S0_first__95_BITS_65_TO_5_ETC___d625,
	       IF_fpu_madd_fState_S4_first__250_BITS_32_TO_25_ETC___d2262,
	       IF_fpu_madd_fState_S4_first__250_BITS_64_TO_57_ETC___d2267,
	       IF_fpu_sqr_fOperand_S0_first__262_BITS_33_TO_2_ETC___d1340,
	       _898_MINUS_fpu_madd_fState_S3_first__933_BITS_9_ETC___d1943,
	       value__h25010,
	       value__h25186,
	       value__h83483,
	       value__h90432,
	       x__h38586,
	       x__h38604,
	       x__h76128,
	       x__h85055;
  wire [8 : 0] IF_IF_898_MINUS_fpu_madd_fState_S3_first__933__ETC___d1967,
	       IF_IF_898_MINUS_fpu_madd_fState_S3_first__933__ETC___d2166,
	       IF_IF_fpu_div_fState_S3_first__38_BITS_59_TO_5_ETC___d1018,
	       IF_IF_fpu_div_fState_S3_first__38_BITS_59_TO_5_ETC___d895,
	       IF_fpu_madd_fState_S7_first__339_BITS_65_TO_56_ETC___d2354,
	       IF_fpu_madd_fState_S7_first__339_BITS_65_TO_56_ETC___d2473,
	       IF_fpu_sqr_fOperand_S0_first__262_BITS_33_TO_2_ETC__q16,
	       IF_fpu_sqr_fState_S3_first__455_BITS_61_TO_54__ETC___d1468,
	       IF_fpu_sqr_fState_S3_first__455_BITS_61_TO_54__ETC___d1599;
  wire [7 : 0] IF_fpu_div_fOperands_S0_first__95_BITS_33_TO_2_ETC___d691,
	       IF_fpu_div_fState_S4_first__078_BITS_32_TO_25__ETC___d1112,
	       IF_fpu_madd_fState_S8_first__530_BITS_33_TO_26_ETC___d2556,
	       IF_fpu_madd_fState_S8_first__530_BITS_33_TO_26_ETC___d2581,
	       IF_fpu_sqr_fState_S4_first__653_BITS_32_TO_25__ETC___d1687,
	       _theResult___exp__h32903,
	       _theResult___exp__h64966,
	       _theResult___exp__h91455,
	       _theResult___fst__h24958,
	       _theResult___fst_exp__h31923,
	       _theResult___fst_exp__h31926,
	       _theResult___fst_exp__h31929,
	       _theResult___fst_exp__h31972,
	       _theResult___fst_exp__h31975,
	       _theResult___fst_exp__h31995,
	       _theResult___fst_exp__h32011,
	       _theResult___fst_exp__h32050,
	       _theResult___fst_exp__h32056,
	       _theResult___fst_exp__h32059,
	       _theResult___fst_exp__h32984,
	       _theResult___fst_exp__h64018,
	       _theResult___fst_exp__h64021,
	       _theResult___fst_exp__h64041,
	       _theResult___fst_exp__h64057,
	       _theResult___fst_exp__h64096,
	       _theResult___fst_exp__h64102,
	       _theResult___fst_exp__h64105,
	       _theResult___fst_exp__h65047,
	       _theResult___fst_exp__h83549,
	       _theResult___fst_exp__h83552,
	       _theResult___fst_exp__h83571,
	       _theResult___fst_exp__h83586,
	       _theResult___fst_exp__h83625,
	       _theResult___fst_exp__h83631,
	       _theResult___fst_exp__h83634,
	       _theResult___fst_exp__h90500,
	       _theResult___fst_exp__h90503,
	       _theResult___fst_exp__h90522,
	       _theResult___fst_exp__h90537,
	       _theResult___fst_exp__h90576,
	       _theResult___fst_exp__h90582,
	       _theResult___fst_exp__h90585,
	       _theResult___snd_fst_exp__h24970,
	       _theResult___snd_fst_exp__h24973,
	       _theResult___snd_fst_exp__h24997,
	       din_exp3466_MINUS_127__q22,
	       din_exp__h83466,
	       din_inc___2_exp__h32994,
	       din_inc___2_exp__h65057,
	       din_inc___2_exp__h91540,
	       fpu_div_fOperands_S0D_OUT_BITS_33_TO_26_MINUS_ETC__q8,
	       fpu_div_fOperands_S0D_OUT_BITS_65_TO_58_MINUS_ETC__q7,
	       fpu_madd_fOperand_S0D_OUT_BITS_33_TO_26_MINUS_ETC__q35,
	       fpu_madd_fOperand_S0D_OUT_BITS_65_TO_58_MINUS_ETC__q34,
	       fpu_madd_fState_S4D_OUT_BITS_32_TO_25_MINUS_127__q25,
	       fpu_madd_fState_S4D_OUT_BITS_64_TO_57_MINUS_127__q26,
	       fpu_sqr_fOperand_S0D_OUT_BITS_33_TO_26_MINUS_127__q15,
	       fpu_sqr_fState_S3D_OUT_BITS_61_TO_54_MINUS_127__q17,
	       out_exp__h32906,
	       out_exp__h64969,
	       out_exp__h91458,
	       theResult___fst_exp1929_MINUS_127__q10,
	       value0432_BITS_7_TO_0_MINUS_127__q27,
	       x__h25177,
	       x__h26041,
	       x__h65583;
  wire [5 : 0] IF_IF_898_MINUS_fpu_madd_fState_S3_first__933__ETC___d2164,
	       IF_fpu_sqr_fState_S1_first__364_BIT_29_370_THE_ETC___d1430,
	       x__h57985;
  wire [4 : 0] IF_IF_fpu_div_fState_S3_first__38_BITS_59_TO_5_ETC___d1016,
	       IF_IF_fpu_div_fState_S3_first__38_BITS_59_TO_5_ETC___d1062,
	       IF_IF_fpu_madd_fState_S7_first__339_BIT_67_343_ETC___d2471,
	       IF_fpu_div_fState_S3_first__38_BITS_59_TO_52_3_ETC___d1057,
	       IF_fpu_madd_fState_S3_first__933_BIT_84_935_TH_ETC___d2229,
	       IF_fpu_sqr_fOperand_S0_first__262_BITS_33_TO_2_ETC___d1338,
	       IF_fpu_sqr_fState_S3_first__455_BIT_30_463_THE_ETC___d1597,
	       b__h11175,
	       b__h15091,
	       fpu_madd_fState_S3_first__933_BITS_51_TO_47_93_ETC___d2205,
	       fpu_madd_fState_S7_first__339_BITS_76_TO_72_34_ETC___d2512,
	       fpu_madd_fState_S8_first__530_BITS_43_TO_39_60_ETC___d2613,
	       x__h43511;
  wire [2 : 0] IF_fpu_sqr_fState_S3_first__455_BIT_103_457_TH_ETC___d1638,
	       NOT_fpu_madd_fState_S3_first__933_BITS_9_TO_0__ETC___d2227;
  wire [1 : 0] IF_sfdin0494_BIT_4_THEN_2_ELSE_0__q29,
	       IF_sfdin1966_BIT_5_THEN_2_ELSE_0__q12,
	       IF_sfdin3543_BIT_24_THEN_2_ELSE_0__q24,
	       IF_sfdin4012_BIT_7_THEN_2_ELSE_0__q19,
	       _theResult___snd_fst__h32078,
	       _theResult___snd_fst__h64124,
	       _theResult___snd_fst__h83651,
	       _theResult___snd_fst__h90602,
	       _theResult___snd_snd__h83971,
	       _theResult___snd_snd_snd__h83957,
	       _theResult___snd_snd_snd__h83969,
	       guardBC__h75329,
	       guard__h27006,
	       guard__h58912,
	       guard__h85691,
	       x__h90885;
  wire IF_IF_fpu_madd_fOperand_S0_first__769_BIT_99_7_ETC___d1866,
       IF_NOT_fpu_madd_fState_S3_first__933_BITS_9_TO_ETC___d2207,
       IF_NOT_fpu_madd_fState_S3_first__933_BITS_9_TO_ETC___d2210,
       IF_fpu_div_fOperands_S0_first__95_BITS_33_TO_2_ETC___d680,
       IF_fpu_div_fOperands_S0_first__95_BITS_65_TO_5_ETC___d626,
       IF_fpu_div_fOperands_S0_first__95_BITS_65_TO_5_ETC___d628,
       IF_fpu_div_fOperands_S0_first__95_BITS_65_TO_5_ETC___d763,
       IF_fpu_div_fState_S3_first__38_BITS_59_TO_52_3_ETC___d872,
       IF_fpu_madd_fOperand_S0_first__769_BIT_99_770__ETC___d1828,
       IF_fpu_madd_fOperand_S0_first__769_BIT_99_770__ETC___d1871,
       IF_fpu_madd_fOperand_S0_first__769_BIT_99_770__ETC___d1894,
       IF_fpu_madd_fState_S3_first__933_BITS_9_TO_0_9_ETC___d2220,
       IF_fpu_madd_fState_S3_first__933_BITS_9_TO_0_9_ETC___d2225,
       IF_fpu_madd_fState_S8_first__530_BIT_35_533_AN_ETC___d2630,
       IF_rg_index_192_EQ_31_207_OR_rg_res_196_BIT_60_ETC___d1241,
       IF_rg_index_192_EQ_31_207_THEN_NOT_rg_res_196__ETC___d1211,
       NOT_IF_fpu_madd_fOperand_S0_first__769_BIT_99__ETC___d1893,
       NOT_fpu_div_fOperands_S0_first__95_BITS_33_TO__ETC___d745,
       NOT_fpu_div_fOperands_S0_first__95_BITS_33_TO__ETC___d752,
       NOT_fpu_div_fOperands_S0_first__95_BITS_65_TO__ETC___d658,
       NOT_fpu_madd_fOperand_S0_first__769_BITS_65_TO_ETC___d1867,
       NOT_fpu_madd_fOperand_S0_first__769_BIT_66_817_ETC___d1820,
       NOT_fpu_madd_fState_S3_first__933_BITS_9_TO_0__ETC___d2214,
       NOT_fpu_madd_fState_S4_first__250_BIT_66_256_2_ETC___d2283,
       _0_CONCAT_IF_IF_898_MINUS_fpu_madd_fState_S3_fi_ETC___d2167,
       _0_CONCAT_IF_IF_fpu_div_fState_S3_first__38_BIT_ETC___d1019,
       _0_CONCAT_IF_IF_fpu_madd_fState_S7_first__339_B_ETC___d2474,
       _0_CONCAT_IF_fpu_sqr_fState_S3_first__455_BIT_3_ETC___d1600,
       _898_MINUS_fpu_madd_fState_S3_first__933_BITS_9_ETC___d1944,
       fpu_div_fOperands_S0_first__95_BITS_33_TO_26_0_ETC___d632,
       fpu_div_fOperands_S0_first__95_BITS_65_TO_58_9_ETC___d659,
       fpu_div_fOperands_S0_first__95_BITS_65_TO_58_9_ETC___d694,
       fpu_div_fOperands_S0_first__95_BITS_65_TO_58_9_ETC___d762,
       fpu_div_fOperands_S0_first__95_BIT_66_61_EQ_fp_ETC___d663,
       fpu_madd_fOperand_S0_first__769_BITS_65_TO_58__ETC___d1823,
       fpu_madd_fOperand_S0_first__769_BITS_65_TO_58__ETC___d1870,
       fpu_madd_fOperand_S0_first__769_BIT_99_770_AND_ETC___d1821,
       fpu_madd_fState_S3_first__933_BITS_9_TO_0_937__ETC___d1938,
       fpu_madd_fState_S3_first__933_BITS_9_TO_0_937__ETC___d1940,
       rg_s_220_ULT_rg_r_203_PLUS_rg_b_198_221___d1222,
       sfdlsb__h25940,
       sfdlsb__h76024,
       value_BIT_23___h39081;

  // action method server_core_request_put
  assign RDY_server_core_request_put = iFifo_FULL_N ;

  // actionvalue method server_core_response_get
  assign server_core_response_get = oFifo_D_OUT ;
  assign RDY_server_core_response_get = oFifo_EMPTY_N ;

  // action method server_reset_request_put
  assign RDY_server_reset_request_put = resetReqsF_FULL_N ;

  // action method server_reset_response_get
  assign RDY_server_reset_response_get = resetRspsF_EMPTY_N ;

  // submodule fFirst
  FIFOL1 #(.width(32'd116)) fFirst(.RST(RST_N),
				   .CLK(CLK),
				   .D_IN(fFirst_D_IN),
				   .ENQ(fFirst_ENQ),
				   .DEQ(fFirst_DEQ),
				   .CLR(fFirst_CLR),
				   .D_OUT(fFirst_D_OUT),
				   .FULL_N(fFirst_FULL_N),
				   .EMPTY_N(fFirst_EMPTY_N));

  // submodule fNext_0
  FIFOL1 #(.width(32'd116)) fNext_0(.RST(RST_N),
				    .CLK(CLK),
				    .D_IN(fNext_0_D_IN),
				    .ENQ(fNext_0_ENQ),
				    .DEQ(fNext_0_DEQ),
				    .CLR(fNext_0_CLR),
				    .D_OUT(fNext_0_D_OUT),
				    .FULL_N(fNext_0_FULL_N),
				    .EMPTY_N(fNext_0_EMPTY_N));

  // submodule fNext_1
  FIFOL1 #(.width(32'd116)) fNext_1(.RST(RST_N),
				    .CLK(CLK),
				    .D_IN(fNext_1_D_IN),
				    .ENQ(fNext_1_ENQ),
				    .DEQ(fNext_1_DEQ),
				    .CLR(fNext_1_CLR),
				    .D_OUT(fNext_1_D_OUT),
				    .FULL_N(fNext_1_FULL_N),
				    .EMPTY_N(fNext_1_EMPTY_N));

  // submodule fNext_10
  FIFOL1 #(.width(32'd116)) fNext_10(.RST(RST_N),
				     .CLK(CLK),
				     .D_IN(fNext_10_D_IN),
				     .ENQ(fNext_10_ENQ),
				     .DEQ(fNext_10_DEQ),
				     .CLR(fNext_10_CLR),
				     .D_OUT(fNext_10_D_OUT),
				     .FULL_N(fNext_10_FULL_N),
				     .EMPTY_N(fNext_10_EMPTY_N));

  // submodule fNext_11
  FIFOL1 #(.width(32'd116)) fNext_11(.RST(RST_N),
				     .CLK(CLK),
				     .D_IN(fNext_11_D_IN),
				     .ENQ(fNext_11_ENQ),
				     .DEQ(fNext_11_DEQ),
				     .CLR(fNext_11_CLR),
				     .D_OUT(fNext_11_D_OUT),
				     .FULL_N(fNext_11_FULL_N),
				     .EMPTY_N(fNext_11_EMPTY_N));

  // submodule fNext_12
  FIFOL1 #(.width(32'd116)) fNext_12(.RST(RST_N),
				     .CLK(CLK),
				     .D_IN(fNext_12_D_IN),
				     .ENQ(fNext_12_ENQ),
				     .DEQ(fNext_12_DEQ),
				     .CLR(fNext_12_CLR),
				     .D_OUT(fNext_12_D_OUT),
				     .FULL_N(fNext_12_FULL_N),
				     .EMPTY_N(fNext_12_EMPTY_N));

  // submodule fNext_13
  FIFOL1 #(.width(32'd116)) fNext_13(.RST(RST_N),
				     .CLK(CLK),
				     .D_IN(fNext_13_D_IN),
				     .ENQ(fNext_13_ENQ),
				     .DEQ(fNext_13_DEQ),
				     .CLR(fNext_13_CLR),
				     .D_OUT(fNext_13_D_OUT),
				     .FULL_N(fNext_13_FULL_N),
				     .EMPTY_N(fNext_13_EMPTY_N));

  // submodule fNext_14
  FIFOL1 #(.width(32'd116)) fNext_14(.RST(RST_N),
				     .CLK(CLK),
				     .D_IN(fNext_14_D_IN),
				     .ENQ(fNext_14_ENQ),
				     .DEQ(fNext_14_DEQ),
				     .CLR(fNext_14_CLR),
				     .D_OUT(fNext_14_D_OUT),
				     .FULL_N(fNext_14_FULL_N),
				     .EMPTY_N(fNext_14_EMPTY_N));

  // submodule fNext_15
  FIFOL1 #(.width(32'd116)) fNext_15(.RST(RST_N),
				     .CLK(CLK),
				     .D_IN(fNext_15_D_IN),
				     .ENQ(fNext_15_ENQ),
				     .DEQ(fNext_15_DEQ),
				     .CLR(fNext_15_CLR),
				     .D_OUT(fNext_15_D_OUT),
				     .FULL_N(fNext_15_FULL_N),
				     .EMPTY_N(fNext_15_EMPTY_N));

  // submodule fNext_16
  FIFOL1 #(.width(32'd116)) fNext_16(.RST(RST_N),
				     .CLK(CLK),
				     .D_IN(fNext_16_D_IN),
				     .ENQ(fNext_16_ENQ),
				     .DEQ(fNext_16_DEQ),
				     .CLR(fNext_16_CLR),
				     .D_OUT(fNext_16_D_OUT),
				     .FULL_N(fNext_16_FULL_N),
				     .EMPTY_N(fNext_16_EMPTY_N));

  // submodule fNext_17
  FIFOL1 #(.width(32'd116)) fNext_17(.RST(RST_N),
				     .CLK(CLK),
				     .D_IN(fNext_17_D_IN),
				     .ENQ(fNext_17_ENQ),
				     .DEQ(fNext_17_DEQ),
				     .CLR(fNext_17_CLR),
				     .D_OUT(fNext_17_D_OUT),
				     .FULL_N(fNext_17_FULL_N),
				     .EMPTY_N(fNext_17_EMPTY_N));

  // submodule fNext_18
  FIFOL1 #(.width(32'd116)) fNext_18(.RST(RST_N),
				     .CLK(CLK),
				     .D_IN(fNext_18_D_IN),
				     .ENQ(fNext_18_ENQ),
				     .DEQ(fNext_18_DEQ),
				     .CLR(fNext_18_CLR),
				     .D_OUT(fNext_18_D_OUT),
				     .FULL_N(fNext_18_FULL_N),
				     .EMPTY_N(fNext_18_EMPTY_N));

  // submodule fNext_19
  FIFOL1 #(.width(32'd116)) fNext_19(.RST(RST_N),
				     .CLK(CLK),
				     .D_IN(fNext_19_D_IN),
				     .ENQ(fNext_19_ENQ),
				     .DEQ(fNext_19_DEQ),
				     .CLR(fNext_19_CLR),
				     .D_OUT(fNext_19_D_OUT),
				     .FULL_N(fNext_19_FULL_N),
				     .EMPTY_N(fNext_19_EMPTY_N));

  // submodule fNext_2
  FIFOL1 #(.width(32'd116)) fNext_2(.RST(RST_N),
				    .CLK(CLK),
				    .D_IN(fNext_2_D_IN),
				    .ENQ(fNext_2_ENQ),
				    .DEQ(fNext_2_DEQ),
				    .CLR(fNext_2_CLR),
				    .D_OUT(fNext_2_D_OUT),
				    .FULL_N(fNext_2_FULL_N),
				    .EMPTY_N(fNext_2_EMPTY_N));

  // submodule fNext_20
  FIFOL1 #(.width(32'd116)) fNext_20(.RST(RST_N),
				     .CLK(CLK),
				     .D_IN(fNext_20_D_IN),
				     .ENQ(fNext_20_ENQ),
				     .DEQ(fNext_20_DEQ),
				     .CLR(fNext_20_CLR),
				     .D_OUT(fNext_20_D_OUT),
				     .FULL_N(fNext_20_FULL_N),
				     .EMPTY_N(fNext_20_EMPTY_N));

  // submodule fNext_21
  FIFOL1 #(.width(32'd116)) fNext_21(.RST(RST_N),
				     .CLK(CLK),
				     .D_IN(fNext_21_D_IN),
				     .ENQ(fNext_21_ENQ),
				     .DEQ(fNext_21_DEQ),
				     .CLR(fNext_21_CLR),
				     .D_OUT(fNext_21_D_OUT),
				     .FULL_N(fNext_21_FULL_N),
				     .EMPTY_N(fNext_21_EMPTY_N));

  // submodule fNext_22
  FIFOL1 #(.width(32'd116)) fNext_22(.RST(RST_N),
				     .CLK(CLK),
				     .D_IN(fNext_22_D_IN),
				     .ENQ(fNext_22_ENQ),
				     .DEQ(fNext_22_DEQ),
				     .CLR(fNext_22_CLR),
				     .D_OUT(fNext_22_D_OUT),
				     .FULL_N(fNext_22_FULL_N),
				     .EMPTY_N(fNext_22_EMPTY_N));

  // submodule fNext_23
  FIFOL1 #(.width(32'd116)) fNext_23(.RST(RST_N),
				     .CLK(CLK),
				     .D_IN(fNext_23_D_IN),
				     .ENQ(fNext_23_ENQ),
				     .DEQ(fNext_23_DEQ),
				     .CLR(fNext_23_CLR),
				     .D_OUT(fNext_23_D_OUT),
				     .FULL_N(fNext_23_FULL_N),
				     .EMPTY_N(fNext_23_EMPTY_N));

  // submodule fNext_24
  FIFOL1 #(.width(32'd116)) fNext_24(.RST(RST_N),
				     .CLK(CLK),
				     .D_IN(fNext_24_D_IN),
				     .ENQ(fNext_24_ENQ),
				     .DEQ(fNext_24_DEQ),
				     .CLR(fNext_24_CLR),
				     .D_OUT(fNext_24_D_OUT),
				     .FULL_N(fNext_24_FULL_N),
				     .EMPTY_N(fNext_24_EMPTY_N));

  // submodule fNext_25
  FIFOL1 #(.width(32'd116)) fNext_25(.RST(RST_N),
				     .CLK(CLK),
				     .D_IN(fNext_25_D_IN),
				     .ENQ(fNext_25_ENQ),
				     .DEQ(fNext_25_DEQ),
				     .CLR(fNext_25_CLR),
				     .D_OUT(fNext_25_D_OUT),
				     .FULL_N(fNext_25_FULL_N),
				     .EMPTY_N(fNext_25_EMPTY_N));

  // submodule fNext_26
  FIFOL1 #(.width(32'd116)) fNext_26(.RST(RST_N),
				     .CLK(CLK),
				     .D_IN(fNext_26_D_IN),
				     .ENQ(fNext_26_ENQ),
				     .DEQ(fNext_26_DEQ),
				     .CLR(fNext_26_CLR),
				     .D_OUT(fNext_26_D_OUT),
				     .FULL_N(fNext_26_FULL_N),
				     .EMPTY_N(fNext_26_EMPTY_N));

  // submodule fNext_27
  FIFOL1 #(.width(32'd116)) fNext_27(.RST(RST_N),
				     .CLK(CLK),
				     .D_IN(fNext_27_D_IN),
				     .ENQ(fNext_27_ENQ),
				     .DEQ(fNext_27_DEQ),
				     .CLR(fNext_27_CLR),
				     .D_OUT(fNext_27_D_OUT),
				     .FULL_N(fNext_27_FULL_N),
				     .EMPTY_N(fNext_27_EMPTY_N));

  // submodule fNext_28
  FIFOL1 #(.width(32'd116)) fNext_28(.RST(RST_N),
				     .CLK(CLK),
				     .D_IN(fNext_28_D_IN),
				     .ENQ(fNext_28_ENQ),
				     .DEQ(fNext_28_DEQ),
				     .CLR(fNext_28_CLR),
				     .D_OUT(fNext_28_D_OUT),
				     .FULL_N(fNext_28_FULL_N),
				     .EMPTY_N(fNext_28_EMPTY_N));

  // submodule fNext_3
  FIFOL1 #(.width(32'd116)) fNext_3(.RST(RST_N),
				    .CLK(CLK),
				    .D_IN(fNext_3_D_IN),
				    .ENQ(fNext_3_ENQ),
				    .DEQ(fNext_3_DEQ),
				    .CLR(fNext_3_CLR),
				    .D_OUT(fNext_3_D_OUT),
				    .FULL_N(fNext_3_FULL_N),
				    .EMPTY_N(fNext_3_EMPTY_N));

  // submodule fNext_4
  FIFOL1 #(.width(32'd116)) fNext_4(.RST(RST_N),
				    .CLK(CLK),
				    .D_IN(fNext_4_D_IN),
				    .ENQ(fNext_4_ENQ),
				    .DEQ(fNext_4_DEQ),
				    .CLR(fNext_4_CLR),
				    .D_OUT(fNext_4_D_OUT),
				    .FULL_N(fNext_4_FULL_N),
				    .EMPTY_N(fNext_4_EMPTY_N));

  // submodule fNext_5
  FIFOL1 #(.width(32'd116)) fNext_5(.RST(RST_N),
				    .CLK(CLK),
				    .D_IN(fNext_5_D_IN),
				    .ENQ(fNext_5_ENQ),
				    .DEQ(fNext_5_DEQ),
				    .CLR(fNext_5_CLR),
				    .D_OUT(fNext_5_D_OUT),
				    .FULL_N(fNext_5_FULL_N),
				    .EMPTY_N(fNext_5_EMPTY_N));

  // submodule fNext_6
  FIFOL1 #(.width(32'd116)) fNext_6(.RST(RST_N),
				    .CLK(CLK),
				    .D_IN(fNext_6_D_IN),
				    .ENQ(fNext_6_ENQ),
				    .DEQ(fNext_6_DEQ),
				    .CLR(fNext_6_CLR),
				    .D_OUT(fNext_6_D_OUT),
				    .FULL_N(fNext_6_FULL_N),
				    .EMPTY_N(fNext_6_EMPTY_N));

  // submodule fNext_7
  FIFOL1 #(.width(32'd116)) fNext_7(.RST(RST_N),
				    .CLK(CLK),
				    .D_IN(fNext_7_D_IN),
				    .ENQ(fNext_7_ENQ),
				    .DEQ(fNext_7_DEQ),
				    .CLR(fNext_7_CLR),
				    .D_OUT(fNext_7_D_OUT),
				    .FULL_N(fNext_7_FULL_N),
				    .EMPTY_N(fNext_7_EMPTY_N));

  // submodule fNext_8
  FIFOL1 #(.width(32'd116)) fNext_8(.RST(RST_N),
				    .CLK(CLK),
				    .D_IN(fNext_8_D_IN),
				    .ENQ(fNext_8_ENQ),
				    .DEQ(fNext_8_DEQ),
				    .CLR(fNext_8_CLR),
				    .D_OUT(fNext_8_D_OUT),
				    .FULL_N(fNext_8_FULL_N),
				    .EMPTY_N(fNext_8_EMPTY_N));

  // submodule fNext_9
  FIFOL1 #(.width(32'd116)) fNext_9(.RST(RST_N),
				    .CLK(CLK),
				    .D_IN(fNext_9_D_IN),
				    .ENQ(fNext_9_ENQ),
				    .DEQ(fNext_9_DEQ),
				    .CLR(fNext_9_CLR),
				    .D_OUT(fNext_9_D_OUT),
				    .FULL_N(fNext_9_FULL_N),
				    .EMPTY_N(fNext_9_EMPTY_N));

  // submodule fRequest
  FIFOL1 #(.width(32'd84)) fRequest(.RST(RST_N),
				    .CLK(CLK),
				    .D_IN(fRequest_D_IN),
				    .ENQ(fRequest_ENQ),
				    .DEQ(fRequest_DEQ),
				    .CLR(fRequest_CLR),
				    .D_OUT(fRequest_D_OUT),
				    .FULL_N(fRequest_FULL_N),
				    .EMPTY_N(fRequest_EMPTY_N));

  // submodule fResponse
  FIFOL1 #(.width(32'd56)) fResponse(.RST(RST_N),
				     .CLK(CLK),
				     .D_IN(fResponse_D_IN),
				     .ENQ(fResponse_ENQ),
				     .DEQ(fResponse_DEQ),
				     .CLR(fResponse_CLR),
				     .D_OUT(fResponse_D_OUT),
				     .FULL_N(fResponse_FULL_N),
				     .EMPTY_N(fResponse_EMPTY_N));

  // submodule fpu_div_fOperands_S0
  FIFOL1 #(.width(32'd67)) fpu_div_fOperands_S0(.RST(RST_N),
						.CLK(CLK),
						.D_IN(fpu_div_fOperands_S0_D_IN),
						.ENQ(fpu_div_fOperands_S0_ENQ),
						.DEQ(fpu_div_fOperands_S0_DEQ),
						.CLR(fpu_div_fOperands_S0_CLR),
						.D_OUT(fpu_div_fOperands_S0_D_OUT),
						.FULL_N(fpu_div_fOperands_S0_FULL_N),
						.EMPTY_N(fpu_div_fOperands_S0_EMPTY_N));

  // submodule fpu_div_fResult_S5
  FIFOL1 #(.width(32'd37)) fpu_div_fResult_S5(.RST(RST_N),
					      .CLK(CLK),
					      .D_IN(fpu_div_fResult_S5_D_IN),
					      .ENQ(fpu_div_fResult_S5_ENQ),
					      .DEQ(fpu_div_fResult_S5_DEQ),
					      .CLR(fpu_div_fResult_S5_CLR),
					      .D_OUT(fpu_div_fResult_S5_D_OUT),
					      .FULL_N(fpu_div_fResult_S5_FULL_N),
					      .EMPTY_N(fpu_div_fResult_S5_EMPTY_N));

  // submodule fpu_div_fState_S1
  FIFOL1 #(.width(32'd165)) fpu_div_fState_S1(.RST(RST_N),
					      .CLK(CLK),
					      .D_IN(fpu_div_fState_S1_D_IN),
					      .ENQ(fpu_div_fState_S1_ENQ),
					      .DEQ(fpu_div_fState_S1_DEQ),
					      .CLR(fpu_div_fState_S1_CLR),
					      .D_OUT(fpu_div_fState_S1_D_OUT),
					      .FULL_N(fpu_div_fState_S1_FULL_N),
					      .EMPTY_N(fpu_div_fState_S1_EMPTY_N));

  // submodule fpu_div_fState_S2
  FIFOL1 #(.width(32'd81)) fpu_div_fState_S2(.RST(RST_N),
					     .CLK(CLK),
					     .D_IN(fpu_div_fState_S2_D_IN),
					     .ENQ(fpu_div_fState_S2_ENQ),
					     .DEQ(fpu_div_fState_S2_DEQ),
					     .CLR(fpu_div_fState_S2_CLR),
					     .D_OUT(fpu_div_fState_S2_D_OUT),
					     .FULL_N(fpu_div_fState_S2_FULL_N),
					     .EMPTY_N(fpu_div_fState_S2_EMPTY_N));

  // submodule fpu_div_fState_S3
  FIFOL1 #(.width(32'd102)) fpu_div_fState_S3(.RST(RST_N),
					      .CLK(CLK),
					      .D_IN(fpu_div_fState_S3_D_IN),
					      .ENQ(fpu_div_fState_S3_ENQ),
					      .DEQ(fpu_div_fState_S3_DEQ),
					      .CLR(fpu_div_fState_S3_CLR),
					      .D_OUT(fpu_div_fState_S3_D_OUT),
					      .FULL_N(fpu_div_fState_S3_FULL_N),
					      .EMPTY_N(fpu_div_fState_S3_EMPTY_N));

  // submodule fpu_div_fState_S4
  FIFOL1 #(.width(32'd75)) fpu_div_fState_S4(.RST(RST_N),
					     .CLK(CLK),
					     .D_IN(fpu_div_fState_S4_D_IN),
					     .ENQ(fpu_div_fState_S4_ENQ),
					     .DEQ(fpu_div_fState_S4_DEQ),
					     .CLR(fpu_div_fState_S4_CLR),
					     .D_OUT(fpu_div_fState_S4_D_OUT),
					     .FULL_N(fpu_div_fState_S4_FULL_N),
					     .EMPTY_N(fpu_div_fState_S4_EMPTY_N));

  // submodule fpu_madd_fOperand_S0
  FIFOL1 #(.width(32'd100)) fpu_madd_fOperand_S0(.RST(RST_N),
						 .CLK(CLK),
						 .D_IN(fpu_madd_fOperand_S0_D_IN),
						 .ENQ(fpu_madd_fOperand_S0_ENQ),
						 .DEQ(fpu_madd_fOperand_S0_DEQ),
						 .CLR(fpu_madd_fOperand_S0_CLR),
						 .D_OUT(fpu_madd_fOperand_S0_D_OUT),
						 .FULL_N(fpu_madd_fOperand_S0_FULL_N),
						 .EMPTY_N(fpu_madd_fOperand_S0_EMPTY_N));

  // submodule fpu_madd_fProd_S2
  FIFOL1 #(.width(32'd48)) fpu_madd_fProd_S2(.RST(RST_N),
					     .CLK(CLK),
					     .D_IN(fpu_madd_fProd_S2_D_IN),
					     .ENQ(fpu_madd_fProd_S2_ENQ),
					     .DEQ(fpu_madd_fProd_S2_DEQ),
					     .CLR(fpu_madd_fProd_S2_CLR),
					     .D_OUT(fpu_madd_fProd_S2_D_OUT),
					     .FULL_N(fpu_madd_fProd_S2_FULL_N),
					     .EMPTY_N(fpu_madd_fProd_S2_EMPTY_N));

  // submodule fpu_madd_fProd_S3
  FIFOL1 #(.width(32'd48)) fpu_madd_fProd_S3(.RST(RST_N),
					     .CLK(CLK),
					     .D_IN(fpu_madd_fProd_S3_D_IN),
					     .ENQ(fpu_madd_fProd_S3_ENQ),
					     .DEQ(fpu_madd_fProd_S3_DEQ),
					     .CLR(fpu_madd_fProd_S3_CLR),
					     .D_OUT(fpu_madd_fProd_S3_D_OUT),
					     .FULL_N(fpu_madd_fProd_S3_FULL_N),
					     .EMPTY_N(fpu_madd_fProd_S3_EMPTY_N));

  // submodule fpu_madd_fResult_S9
  FIFOL1 #(.width(32'd37)) fpu_madd_fResult_S9(.RST(RST_N),
					       .CLK(CLK),
					       .D_IN(fpu_madd_fResult_S9_D_IN),
					       .ENQ(fpu_madd_fResult_S9_ENQ),
					       .DEQ(fpu_madd_fResult_S9_DEQ),
					       .CLR(fpu_madd_fResult_S9_CLR),
					       .D_OUT(fpu_madd_fResult_S9_D_OUT),
					       .FULL_N(fpu_madd_fResult_S9_FULL_N),
					       .EMPTY_N(fpu_madd_fResult_S9_EMPTY_N));

  // submodule fpu_madd_fState_S1
  FIFOL1 #(.width(32'd133)) fpu_madd_fState_S1(.RST(RST_N),
					       .CLK(CLK),
					       .D_IN(fpu_madd_fState_S1_D_IN),
					       .ENQ(fpu_madd_fState_S1_ENQ),
					       .DEQ(fpu_madd_fState_S1_DEQ),
					       .CLR(fpu_madd_fState_S1_CLR),
					       .D_OUT(fpu_madd_fState_S1_D_OUT),
					       .FULL_N(fpu_madd_fState_S1_FULL_N),
					       .EMPTY_N(fpu_madd_fState_S1_EMPTY_N));

  // submodule fpu_madd_fState_S2
  FIFOL1 #(.width(32'd85)) fpu_madd_fState_S2(.RST(RST_N),
					      .CLK(CLK),
					      .D_IN(fpu_madd_fState_S2_D_IN),
					      .ENQ(fpu_madd_fState_S2_ENQ),
					      .DEQ(fpu_madd_fState_S2_DEQ),
					      .CLR(fpu_madd_fState_S2_CLR),
					      .D_OUT(fpu_madd_fState_S2_D_OUT),
					      .FULL_N(fpu_madd_fState_S2_FULL_N),
					      .EMPTY_N(fpu_madd_fState_S2_EMPTY_N));

  // submodule fpu_madd_fState_S3
  FIFOL1 #(.width(32'd85)) fpu_madd_fState_S3(.RST(RST_N),
					      .CLK(CLK),
					      .D_IN(fpu_madd_fState_S3_D_IN),
					      .ENQ(fpu_madd_fState_S3_ENQ),
					      .DEQ(fpu_madd_fState_S3_DEQ),
					      .CLR(fpu_madd_fState_S3_CLR),
					      .D_OUT(fpu_madd_fState_S3_D_OUT),
					      .FULL_N(fpu_madd_fState_S3_FULL_N),
					      .EMPTY_N(fpu_madd_fState_S3_EMPTY_N));

  // submodule fpu_madd_fState_S4
  FIFOL1 #(.width(32'd108)) fpu_madd_fState_S4(.RST(RST_N),
					       .CLK(CLK),
					       .D_IN(fpu_madd_fState_S4_D_IN),
					       .ENQ(fpu_madd_fState_S4_ENQ),
					       .DEQ(fpu_madd_fState_S4_DEQ),
					       .CLR(fpu_madd_fState_S4_CLR),
					       .D_OUT(fpu_madd_fState_S4_D_OUT),
					       .FULL_N(fpu_madd_fState_S4_FULL_N),
					       .EMPTY_N(fpu_madd_fState_S4_EMPTY_N));

  // submodule fpu_madd_fState_S5
  FIFOL1 #(.width(32'd120)) fpu_madd_fState_S5(.RST(RST_N),
					       .CLK(CLK),
					       .D_IN(fpu_madd_fState_S5_D_IN),
					       .ENQ(fpu_madd_fState_S5_ENQ),
					       .DEQ(fpu_madd_fState_S5_DEQ),
					       .CLR(fpu_madd_fState_S5_CLR),
					       .D_OUT(fpu_madd_fState_S5_D_OUT),
					       .FULL_N(fpu_madd_fState_S5_FULL_N),
					       .EMPTY_N(fpu_madd_fState_S5_EMPTY_N));

  // submodule fpu_madd_fState_S6
  FIFOL1 #(.width(32'd110)) fpu_madd_fState_S6(.RST(RST_N),
					       .CLK(CLK),
					       .D_IN(fpu_madd_fState_S6_D_IN),
					       .ENQ(fpu_madd_fState_S6_ENQ),
					       .DEQ(fpu_madd_fState_S6_DEQ),
					       .CLR(fpu_madd_fState_S6_CLR),
					       .D_OUT(fpu_madd_fState_S6_D_OUT),
					       .FULL_N(fpu_madd_fState_S6_FULL_N),
					       .EMPTY_N(fpu_madd_fState_S6_EMPTY_N));

  // submodule fpu_madd_fState_S7
  FIFOL1 #(.width(32'd110)) fpu_madd_fState_S7(.RST(RST_N),
					       .CLK(CLK),
					       .D_IN(fpu_madd_fState_S7_D_IN),
					       .ENQ(fpu_madd_fState_S7_ENQ),
					       .DEQ(fpu_madd_fState_S7_DEQ),
					       .CLR(fpu_madd_fState_S7_CLR),
					       .D_OUT(fpu_madd_fState_S7_D_OUT),
					       .FULL_N(fpu_madd_fState_S7_FULL_N),
					       .EMPTY_N(fpu_madd_fState_S7_EMPTY_N));

  // submodule fpu_madd_fState_S8
  FIFOL1 #(.width(32'd77)) fpu_madd_fState_S8(.RST(RST_N),
					      .CLK(CLK),
					      .D_IN(fpu_madd_fState_S8_D_IN),
					      .ENQ(fpu_madd_fState_S8_ENQ),
					      .DEQ(fpu_madd_fState_S8_DEQ),
					      .CLR(fpu_madd_fState_S8_CLR),
					      .D_OUT(fpu_madd_fState_S8_D_OUT),
					      .FULL_N(fpu_madd_fState_S8_FULL_N),
					      .EMPTY_N(fpu_madd_fState_S8_EMPTY_N));

  // submodule fpu_sqr_fOperand_S0
  FIFOL1 #(.width(32'd35)) fpu_sqr_fOperand_S0(.RST(RST_N),
					       .CLK(CLK),
					       .D_IN(fpu_sqr_fOperand_S0_D_IN),
					       .ENQ(fpu_sqr_fOperand_S0_ENQ),
					       .DEQ(fpu_sqr_fOperand_S0_DEQ),
					       .CLR(fpu_sqr_fOperand_S0_CLR),
					       .D_OUT(fpu_sqr_fOperand_S0_D_OUT),
					       .FULL_N(fpu_sqr_fOperand_S0_FULL_N),
					       .EMPTY_N(fpu_sqr_fOperand_S0_EMPTY_N));

  // submodule fpu_sqr_fResult_S5
  FIFOL1 #(.width(32'd37)) fpu_sqr_fResult_S5(.RST(RST_N),
					      .CLK(CLK),
					      .D_IN(fpu_sqr_fResult_S5_D_IN),
					      .ENQ(fpu_sqr_fResult_S5_ENQ),
					      .DEQ(fpu_sqr_fResult_S5_DEQ),
					      .CLR(fpu_sqr_fResult_S5_CLR),
					      .D_OUT(fpu_sqr_fResult_S5_D_OUT),
					      .FULL_N(fpu_sqr_fResult_S5_FULL_N),
					      .EMPTY_N(fpu_sqr_fResult_S5_EMPTY_N));

  // submodule fpu_sqr_fState_S1
  FIFOL1 #(.width(32'd103)) fpu_sqr_fState_S1(.RST(RST_N),
					      .CLK(CLK),
					      .D_IN(fpu_sqr_fState_S1_D_IN),
					      .ENQ(fpu_sqr_fState_S1_ENQ),
					      .DEQ(fpu_sqr_fState_S1_DEQ),
					      .CLR(fpu_sqr_fState_S1_CLR),
					      .D_OUT(fpu_sqr_fState_S1_D_OUT),
					      .FULL_N(fpu_sqr_fState_S1_FULL_N),
					      .EMPTY_N(fpu_sqr_fState_S1_EMPTY_N));

  // submodule fpu_sqr_fState_S2
  FIFOL1 #(.width(32'd73)) fpu_sqr_fState_S2(.RST(RST_N),
					     .CLK(CLK),
					     .D_IN(fpu_sqr_fState_S2_D_IN),
					     .ENQ(fpu_sqr_fState_S2_ENQ),
					     .DEQ(fpu_sqr_fState_S2_DEQ),
					     .CLR(fpu_sqr_fState_S2_CLR),
					     .D_OUT(fpu_sqr_fState_S2_D_OUT),
					     .FULL_N(fpu_sqr_fState_S2_FULL_N),
					     .EMPTY_N(fpu_sqr_fState_S2_EMPTY_N));

  // submodule fpu_sqr_fState_S3
  FIFOL1 #(.width(32'd104)) fpu_sqr_fState_S3(.RST(RST_N),
					      .CLK(CLK),
					      .D_IN(fpu_sqr_fState_S3_D_IN),
					      .ENQ(fpu_sqr_fState_S3_ENQ),
					      .DEQ(fpu_sqr_fState_S3_DEQ),
					      .CLR(fpu_sqr_fState_S3_CLR),
					      .D_OUT(fpu_sqr_fState_S3_D_OUT),
					      .FULL_N(fpu_sqr_fState_S3_FULL_N),
					      .EMPTY_N(fpu_sqr_fState_S3_EMPTY_N));

  // submodule fpu_sqr_fState_S4
  FIFOL1 #(.width(32'd75)) fpu_sqr_fState_S4(.RST(RST_N),
					     .CLK(CLK),
					     .D_IN(fpu_sqr_fState_S4_D_IN),
					     .ENQ(fpu_sqr_fState_S4_ENQ),
					     .DEQ(fpu_sqr_fState_S4_DEQ),
					     .CLR(fpu_sqr_fState_S4_CLR),
					     .D_OUT(fpu_sqr_fState_S4_D_OUT),
					     .FULL_N(fpu_sqr_fState_S4_FULL_N),
					     .EMPTY_N(fpu_sqr_fState_S4_EMPTY_N));

  // submodule iFifo
  FIFO2 #(.width(32'd202), .guarded(1'd1)) iFifo(.RST(RST_N),
						 .CLK(CLK),
						 .D_IN(iFifo_D_IN),
						 .ENQ(iFifo_ENQ),
						 .DEQ(iFifo_DEQ),
						 .CLR(iFifo_CLR),
						 .D_OUT(iFifo_D_OUT),
						 .FULL_N(iFifo_FULL_N),
						 .EMPTY_N(iFifo_EMPTY_N));

  // submodule isNegateFifo
  FIFO2 #(.width(32'd1), .guarded(1'd1)) isNegateFifo(.RST(RST_N),
						      .CLK(CLK),
						      .D_IN(isNegateFifo_D_IN),
						      .ENQ(isNegateFifo_ENQ),
						      .DEQ(isNegateFifo_DEQ),
						      .CLR(isNegateFifo_CLR),
						      .D_OUT(isNegateFifo_D_OUT),
						      .FULL_N(isNegateFifo_FULL_N),
						      .EMPTY_N(isNegateFifo_EMPTY_N));

  // submodule oFifo
  FIFO2 #(.width(32'd70), .guarded(1'd1)) oFifo(.RST(RST_N),
						.CLK(CLK),
						.D_IN(oFifo_D_IN),
						.ENQ(oFifo_ENQ),
						.DEQ(oFifo_DEQ),
						.CLR(oFifo_CLR),
						.D_OUT(oFifo_D_OUT),
						.FULL_N(oFifo_FULL_N),
						.EMPTY_N(oFifo_EMPTY_N));

  // submodule resetReqsF
  FIFO20 #(.guarded(1'd1)) resetReqsF(.RST(RST_N),
				      .CLK(CLK),
				      .ENQ(resetReqsF_ENQ),
				      .DEQ(resetReqsF_DEQ),
				      .CLR(resetReqsF_CLR),
				      .FULL_N(resetReqsF_FULL_N),
				      .EMPTY_N(resetReqsF_EMPTY_N));

  // submodule resetRspsF
  FIFO20 #(.guarded(1'd1)) resetRspsF(.RST(RST_N),
				      .CLK(CLK),
				      .ENQ(resetRspsF_ENQ),
				      .DEQ(resetRspsF_DEQ),
				      .CLR(resetRspsF_CLR),
				      .FULL_N(resetRspsF_FULL_N),
				      .EMPTY_N(resetRspsF_EMPTY_N));

  // submodule rmdFifo
  FIFO2 #(.width(32'd3), .guarded(1'd1)) rmdFifo(.RST(RST_N),
						 .CLK(CLK),
						 .D_IN(rmdFifo_D_IN),
						 .ENQ(rmdFifo_ENQ),
						 .DEQ(rmdFifo_DEQ),
						 .CLR(rmdFifo_CLR),
						 .D_OUT(),
						 .FULL_N(rmdFifo_FULL_N),
						 .EMPTY_N(rmdFifo_EMPTY_N));

  // rule RL_fpu_sqr_s2_stage
  assign WILL_FIRE_RL_fpu_sqr_s2_stage =
	     fpu_sqr_fState_S1_EMPTY_N && fpu_sqr_fState_S2_FULL_N &&
	     !rg_busy ;

  // rule RL_start_op
  assign WILL_FIRE_RL_start_op =
	     iFifo_EMPTY_N && isNegateFifo_FULL_N && rmdFifo_FULL_N &&
	     fpu_madd_fOperand_S0_FULL_N &&
	     fpu_div_fOperands_S0_FULL_N &&
	     fpu_sqr_fOperand_S0_FULL_N ;

  // inputs to muxes for submodule ports
  assign MUX_crg_done_port1__write_1__SEL_1 = rg_busy && rg_index == 5'd15 ;
  assign MUX_crg_done_port1__write_1__SEL_2 =
	     WILL_FIRE_RL_fpu_sqr_s2_stage && !fpu_sqr_fState_S1_D_OUT[102] ;
  assign MUX_rg_b_write_1__VAL_1 =
	     fpu_sqr_fState_S1_D_OUT[29] ?
	       60'h400000000000000 :
	       b___1__h53600 ;
  assign MUX_rg_b_write_1__VAL_2 =
	     (rg_index == 5'd30) ?
	       IF_rg_index_192_EQ_31_207_OR_rg_res_196_BIT_60_ETC___d1216 :
	       _theResult___fst__h33823 ;
  assign MUX_rg_index_write_1__VAL_2 = rg_index + 5'd1 ;
  assign MUX_rg_r_write_1__VAL_2 =
	     (rg_index == 5'd30) ?
	       IF_rg_index_192_EQ_31_207_OR_rg_res_196_BIT_60_ETC___d1227 :
	       _theResult___snd_snd_snd__h33828 ;
  assign MUX_rg_res_write_1__VAL_2 =
	     (rg_index == 5'd30) ?
	       { rg_res[60] || rg_b == 60'd0,
		 IF_rg_res_196_BIT_60_197_THEN_rg_res_196_BITS__ETC___d1205 } :
	       IF_IF_rg_index_192_EQ_31_207_THEN_NOT_rg_res_1_ETC___d1233 ;
  assign MUX_rg_s_write_1__VAL_1 = { fpu_sqr_fState_S1_D_OUT[29:0], 30'd0 } ;
  assign MUX_rg_s_write_1__VAL_2 =
	     (rg_index == 5'd30) ?
	       IF_rg_index_192_EQ_31_207_OR_rg_res_196_BIT_60_ETC___d1239 :
	       _theResult___snd_fst__h33825 ;

  // inlined wires
  always@(fpu_madd_fResult_S9_EMPTY_N or
	  fpu_madd_fResult_S9_D_OUT or
	  fpu_div_fResult_S5_EMPTY_N or
	  fpu_div_fResult_S5_D_OUT or
	  fpu_sqr_fResult_S5_EMPTY_N or fpu_sqr_fResult_S5_D_OUT)
  begin
    case (1'b1) // synopsys parallel_case
      fpu_madd_fResult_S9_EMPTY_N: resWire_wget = fpu_madd_fResult_S9_D_OUT;
      fpu_div_fResult_S5_EMPTY_N: resWire_wget = fpu_div_fResult_S5_D_OUT;
      fpu_sqr_fResult_S5_EMPTY_N: resWire_wget = fpu_sqr_fResult_S5_D_OUT;
      default: resWire_wget = 37'h0AAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign resWire_whas =
	     fpu_madd_fResult_S9_EMPTY_N || fpu_div_fResult_S5_EMPTY_N ||
	     fpu_sqr_fResult_S5_EMPTY_N ;
  assign crg_done_EN_port0__write =
	     fpu_sqr_fState_S2_EMPTY_N && fpu_sqr_fState_S3_FULL_N &&
	     crg_done &&
	     !fpu_sqr_fState_S2_D_OUT[72] ;
  assign crg_done_port1__read = !crg_done_EN_port0__write && crg_done ;
  assign crg_done_EN_port1__write =
	     rg_busy && rg_index == 5'd15 ||
	     WILL_FIRE_RL_fpu_sqr_s2_stage && !fpu_sqr_fState_S1_D_OUT[102] ;
  assign crg_done_port2__read =
	     crg_done_EN_port1__write ?
	       MUX_crg_done_port1__write_1__SEL_1 :
	       crg_done_port1__read ;

  // register crg_done
  assign crg_done_D_IN = crg_done_port2__read ;
  assign crg_done_EN = 1'b1 ;

  // register rg_b
  assign rg_b_D_IN =
	     MUX_crg_done_port1__write_1__SEL_2 ?
	       MUX_rg_b_write_1__VAL_1 :
	       MUX_rg_b_write_1__VAL_2 ;
  assign rg_b_EN =
	     WILL_FIRE_RL_fpu_sqr_s2_stage && !fpu_sqr_fState_S1_D_OUT[102] ||
	     rg_busy ;

  // register rg_busy
  assign rg_busy_D_IN = !MUX_crg_done_port1__write_1__SEL_1 ;
  assign rg_busy_EN =
	     rg_busy && rg_index == 5'd15 ||
	     WILL_FIRE_RL_fpu_sqr_s2_stage && !fpu_sqr_fState_S1_D_OUT[102] ;

  // register rg_index
  assign rg_index_D_IN =
	     MUX_crg_done_port1__write_1__SEL_2 ?
	       5'd0 :
	       MUX_rg_index_write_1__VAL_2 ;
  assign rg_index_EN =
	     WILL_FIRE_RL_fpu_sqr_s2_stage && !fpu_sqr_fState_S1_D_OUT[102] ||
	     rg_busy ;

  // register rg_r
  assign rg_r_D_IN =
	     MUX_crg_done_port1__write_1__SEL_2 ?
	       60'd0 :
	       MUX_rg_r_write_1__VAL_2 ;
  assign rg_r_EN =
	     WILL_FIRE_RL_fpu_sqr_s2_stage && !fpu_sqr_fState_S1_D_OUT[102] ||
	     rg_busy ;

  // register rg_res
  assign rg_res_D_IN =
	     MUX_crg_done_port1__write_1__SEL_2 ?
	       61'h0AAAAAAAAAAAAAAA :
	       MUX_rg_res_write_1__VAL_2 ;
  assign rg_res_EN =
	     WILL_FIRE_RL_fpu_sqr_s2_stage && !fpu_sqr_fState_S1_D_OUT[102] ||
	     rg_busy ;

  // register rg_s
  assign rg_s_D_IN =
	     MUX_crg_done_port1__write_1__SEL_2 ?
	       MUX_rg_s_write_1__VAL_1 :
	       MUX_rg_s_write_1__VAL_2 ;
  assign rg_s_EN =
	     WILL_FIRE_RL_fpu_sqr_s2_stage && !fpu_sqr_fState_S1_D_OUT[102] ||
	     rg_busy ;

  // submodule fFirst
  assign fFirst_D_IN = { b__h380, 31'd0, fRequest_D_OUT[83:28] } ;
  assign fFirst_ENQ = fRequest_EMPTY_N && fFirst_FULL_N ;
  assign fFirst_DEQ = fFirst_EMPTY_N && fNext_0_FULL_N ;
  assign fFirst_CLR = 1'b0 ;

  // submodule fNext_0
  assign fNext_0_D_IN =
	     { fFirst_D_OUT[115:87],
	       fFirst_D_OUT[85:58],
	       !fFirst_D_OUT[57],
	       fFirst_D_OUT[57] ?
		 { fFirst_D_OUT[56:0], 1'd0 } + b__h756 :
		 { fFirst_D_OUT[56:0], 1'd0 } - b__h756 } ;
  assign fNext_0_ENQ = fFirst_EMPTY_N && fNext_0_FULL_N ;
  assign fNext_0_DEQ = fNext_0_EMPTY_N && fNext_1_FULL_N ;
  assign fNext_0_CLR = 1'b0 ;

  // submodule fNext_1
  assign fNext_1_D_IN =
	     { fNext_0_D_OUT[115:87],
	       fNext_0_D_OUT[85:58],
	       !fNext_0_D_OUT[57],
	       fNext_0_D_OUT[57] ?
		 { fNext_0_D_OUT[56:0], 1'd0 } + b__h1067 :
		 { fNext_0_D_OUT[56:0], 1'd0 } - b__h1067 } ;
  assign fNext_1_ENQ = fNext_0_EMPTY_N && fNext_1_FULL_N ;
  assign fNext_1_DEQ = fNext_1_EMPTY_N && fNext_2_FULL_N ;
  assign fNext_1_CLR = 1'b0 ;

  // submodule fNext_10
  assign fNext_10_D_IN =
	     { fNext_9_D_OUT[115:87],
	       fNext_9_D_OUT[85:58],
	       !fNext_9_D_OUT[57],
	       fNext_9_D_OUT[57] ?
		 { fNext_9_D_OUT[56:0], 1'd0 } + b__h3866 :
		 { fNext_9_D_OUT[56:0], 1'd0 } - b__h3866 } ;
  assign fNext_10_ENQ = fNext_9_EMPTY_N && fNext_10_FULL_N ;
  assign fNext_10_DEQ = fNext_10_EMPTY_N && fNext_11_FULL_N ;
  assign fNext_10_CLR = 1'b0 ;

  // submodule fNext_11
  assign fNext_11_D_IN =
	     { fNext_10_D_OUT[115:87],
	       fNext_10_D_OUT[85:58],
	       !fNext_10_D_OUT[57],
	       fNext_10_D_OUT[57] ?
		 { fNext_10_D_OUT[56:0], 1'd0 } + b__h4177 :
		 { fNext_10_D_OUT[56:0], 1'd0 } - b__h4177 } ;
  assign fNext_11_ENQ = fNext_10_EMPTY_N && fNext_11_FULL_N ;
  assign fNext_11_DEQ = fNext_11_EMPTY_N && fNext_12_FULL_N ;
  assign fNext_11_CLR = 1'b0 ;

  // submodule fNext_12
  assign fNext_12_D_IN =
	     { fNext_11_D_OUT[115:87],
	       fNext_11_D_OUT[85:58],
	       !fNext_11_D_OUT[57],
	       fNext_11_D_OUT[57] ?
		 { fNext_11_D_OUT[56:0], 1'd0 } + b__h4488 :
		 { fNext_11_D_OUT[56:0], 1'd0 } - b__h4488 } ;
  assign fNext_12_ENQ = fNext_11_EMPTY_N && fNext_12_FULL_N ;
  assign fNext_12_DEQ = fNext_12_EMPTY_N && fNext_13_FULL_N ;
  assign fNext_12_CLR = 1'b0 ;

  // submodule fNext_13
  assign fNext_13_D_IN =
	     { fNext_12_D_OUT[115:87],
	       fNext_12_D_OUT[85:58],
	       !fNext_12_D_OUT[57],
	       fNext_12_D_OUT[57] ?
		 { fNext_12_D_OUT[56:0], 1'd0 } + b__h4799 :
		 { fNext_12_D_OUT[56:0], 1'd0 } - b__h4799 } ;
  assign fNext_13_ENQ = fNext_12_EMPTY_N && fNext_13_FULL_N ;
  assign fNext_13_DEQ = fNext_13_EMPTY_N && fNext_14_FULL_N ;
  assign fNext_13_CLR = 1'b0 ;

  // submodule fNext_14
  assign fNext_14_D_IN =
	     { fNext_13_D_OUT[115:87],
	       fNext_13_D_OUT[85:58],
	       !fNext_13_D_OUT[57],
	       fNext_13_D_OUT[57] ?
		 { fNext_13_D_OUT[56:0], 1'd0 } + b__h5110 :
		 { fNext_13_D_OUT[56:0], 1'd0 } - b__h5110 } ;
  assign fNext_14_ENQ = fNext_13_EMPTY_N && fNext_14_FULL_N ;
  assign fNext_14_DEQ = fNext_14_EMPTY_N && fNext_15_FULL_N ;
  assign fNext_14_CLR = 1'b0 ;

  // submodule fNext_15
  assign fNext_15_D_IN =
	     { fNext_14_D_OUT[115:87],
	       fNext_14_D_OUT[85:58],
	       !fNext_14_D_OUT[57],
	       fNext_14_D_OUT[57] ?
		 { fNext_14_D_OUT[56:0], 1'd0 } + b__h5421 :
		 { fNext_14_D_OUT[56:0], 1'd0 } - b__h5421 } ;
  assign fNext_15_ENQ = fNext_14_EMPTY_N && fNext_15_FULL_N ;
  assign fNext_15_DEQ = fNext_15_EMPTY_N && fNext_16_FULL_N ;
  assign fNext_15_CLR = 1'b0 ;

  // submodule fNext_16
  assign fNext_16_D_IN =
	     { fNext_15_D_OUT[115:87],
	       fNext_15_D_OUT[85:58],
	       !fNext_15_D_OUT[57],
	       fNext_15_D_OUT[57] ?
		 { fNext_15_D_OUT[56:0], 1'd0 } + b__h5732 :
		 { fNext_15_D_OUT[56:0], 1'd0 } - b__h5732 } ;
  assign fNext_16_ENQ = fNext_15_EMPTY_N && fNext_16_FULL_N ;
  assign fNext_16_DEQ = fNext_16_EMPTY_N && fNext_17_FULL_N ;
  assign fNext_16_CLR = 1'b0 ;

  // submodule fNext_17
  assign fNext_17_D_IN =
	     { fNext_16_D_OUT[115:87],
	       fNext_16_D_OUT[85:58],
	       !fNext_16_D_OUT[57],
	       fNext_16_D_OUT[57] ?
		 { fNext_16_D_OUT[56:0], 1'd0 } + b__h6043 :
		 { fNext_16_D_OUT[56:0], 1'd0 } - b__h6043 } ;
  assign fNext_17_ENQ = fNext_16_EMPTY_N && fNext_17_FULL_N ;
  assign fNext_17_DEQ = fNext_17_EMPTY_N && fNext_18_FULL_N ;
  assign fNext_17_CLR = 1'b0 ;

  // submodule fNext_18
  assign fNext_18_D_IN =
	     { fNext_17_D_OUT[115:87],
	       fNext_17_D_OUT[85:58],
	       !fNext_17_D_OUT[57],
	       fNext_17_D_OUT[57] ?
		 { fNext_17_D_OUT[56:0], 1'd0 } + b__h6354 :
		 { fNext_17_D_OUT[56:0], 1'd0 } - b__h6354 } ;
  assign fNext_18_ENQ = fNext_17_EMPTY_N && fNext_18_FULL_N ;
  assign fNext_18_DEQ = fNext_18_EMPTY_N && fNext_19_FULL_N ;
  assign fNext_18_CLR = 1'b0 ;

  // submodule fNext_19
  assign fNext_19_D_IN =
	     { fNext_18_D_OUT[115:87],
	       fNext_18_D_OUT[85:58],
	       !fNext_18_D_OUT[57],
	       fNext_18_D_OUT[57] ?
		 { fNext_18_D_OUT[56:0], 1'd0 } + b__h6665 :
		 { fNext_18_D_OUT[56:0], 1'd0 } - b__h6665 } ;
  assign fNext_19_ENQ = fNext_18_EMPTY_N && fNext_19_FULL_N ;
  assign fNext_19_DEQ = fNext_19_EMPTY_N && fNext_20_FULL_N ;
  assign fNext_19_CLR = 1'b0 ;

  // submodule fNext_2
  assign fNext_2_D_IN =
	     { fNext_1_D_OUT[115:87],
	       fNext_1_D_OUT[85:58],
	       !fNext_1_D_OUT[57],
	       fNext_1_D_OUT[57] ?
		 { fNext_1_D_OUT[56:0], 1'd0 } + b__h1378 :
		 { fNext_1_D_OUT[56:0], 1'd0 } - b__h1378 } ;
  assign fNext_2_ENQ = fNext_1_EMPTY_N && fNext_2_FULL_N ;
  assign fNext_2_DEQ = fNext_2_EMPTY_N && fNext_3_FULL_N ;
  assign fNext_2_CLR = 1'b0 ;

  // submodule fNext_20
  assign fNext_20_D_IN =
	     { fNext_19_D_OUT[115:87],
	       fNext_19_D_OUT[85:58],
	       !fNext_19_D_OUT[57],
	       fNext_19_D_OUT[57] ?
		 { fNext_19_D_OUT[56:0], 1'd0 } + b__h6976 :
		 { fNext_19_D_OUT[56:0], 1'd0 } - b__h6976 } ;
  assign fNext_20_ENQ = fNext_19_EMPTY_N && fNext_20_FULL_N ;
  assign fNext_20_DEQ = fNext_20_EMPTY_N && fNext_21_FULL_N ;
  assign fNext_20_CLR = 1'b0 ;

  // submodule fNext_21
  assign fNext_21_D_IN =
	     { fNext_20_D_OUT[115:87],
	       fNext_20_D_OUT[85:58],
	       !fNext_20_D_OUT[57],
	       fNext_20_D_OUT[57] ?
		 { fNext_20_D_OUT[56:0], 1'd0 } + b__h7287 :
		 { fNext_20_D_OUT[56:0], 1'd0 } - b__h7287 } ;
  assign fNext_21_ENQ = fNext_20_EMPTY_N && fNext_21_FULL_N ;
  assign fNext_21_DEQ = fNext_21_EMPTY_N && fNext_22_FULL_N ;
  assign fNext_21_CLR = 1'b0 ;

  // submodule fNext_22
  assign fNext_22_D_IN =
	     { fNext_21_D_OUT[115:87],
	       fNext_21_D_OUT[85:58],
	       !fNext_21_D_OUT[57],
	       fNext_21_D_OUT[57] ?
		 { fNext_21_D_OUT[56:0], 1'd0 } + b__h7598 :
		 { fNext_21_D_OUT[56:0], 1'd0 } - b__h7598 } ;
  assign fNext_22_ENQ = fNext_21_EMPTY_N && fNext_22_FULL_N ;
  assign fNext_22_DEQ = fNext_22_EMPTY_N && fNext_23_FULL_N ;
  assign fNext_22_CLR = 1'b0 ;

  // submodule fNext_23
  assign fNext_23_D_IN =
	     { fNext_22_D_OUT[115:87],
	       fNext_22_D_OUT[85:58],
	       !fNext_22_D_OUT[57],
	       fNext_22_D_OUT[57] ?
		 { fNext_22_D_OUT[56:0], 1'd0 } + b__h7909 :
		 { fNext_22_D_OUT[56:0], 1'd0 } - b__h7909 } ;
  assign fNext_23_ENQ = fNext_22_EMPTY_N && fNext_23_FULL_N ;
  assign fNext_23_DEQ = fNext_23_EMPTY_N && fNext_24_FULL_N ;
  assign fNext_23_CLR = 1'b0 ;

  // submodule fNext_24
  assign fNext_24_D_IN =
	     { fNext_23_D_OUT[115:87],
	       fNext_23_D_OUT[85:58],
	       !fNext_23_D_OUT[57],
	       fNext_23_D_OUT[57] ?
		 { fNext_23_D_OUT[56:0], 1'd0 } + b__h8220 :
		 { fNext_23_D_OUT[56:0], 1'd0 } - b__h8220 } ;
  assign fNext_24_ENQ = fNext_23_EMPTY_N && fNext_24_FULL_N ;
  assign fNext_24_DEQ = fNext_24_EMPTY_N && fNext_25_FULL_N ;
  assign fNext_24_CLR = 1'b0 ;

  // submodule fNext_25
  assign fNext_25_D_IN =
	     { fNext_24_D_OUT[115:87],
	       fNext_24_D_OUT[85:58],
	       !fNext_24_D_OUT[57],
	       fNext_24_D_OUT[57] ?
		 { fNext_24_D_OUT[56:0], 1'd0 } + b__h8531 :
		 { fNext_24_D_OUT[56:0], 1'd0 } - b__h8531 } ;
  assign fNext_25_ENQ = fNext_24_EMPTY_N && fNext_25_FULL_N ;
  assign fNext_25_DEQ = fNext_25_EMPTY_N && fNext_26_FULL_N ;
  assign fNext_25_CLR = 1'b0 ;

  // submodule fNext_26
  assign fNext_26_D_IN =
	     { fNext_25_D_OUT[115:87],
	       fNext_25_D_OUT[85:58],
	       !fNext_25_D_OUT[57],
	       fNext_25_D_OUT[57] ?
		 { fNext_25_D_OUT[56:0], 1'd0 } + b__h8842 :
		 { fNext_25_D_OUT[56:0], 1'd0 } - b__h8842 } ;
  assign fNext_26_ENQ = fNext_25_EMPTY_N && fNext_26_FULL_N ;
  assign fNext_26_DEQ = fNext_26_EMPTY_N && fNext_27_FULL_N ;
  assign fNext_26_CLR = 1'b0 ;

  // submodule fNext_27
  assign fNext_27_D_IN =
	     { fNext_26_D_OUT[115:87],
	       fNext_26_D_OUT[85:58],
	       !fNext_26_D_OUT[57],
	       fNext_26_D_OUT[57] ?
		 { fNext_26_D_OUT[56:0], 1'd0 } + b__h9153 :
		 { fNext_26_D_OUT[56:0], 1'd0 } - b__h9153 } ;
  assign fNext_27_ENQ = fNext_26_EMPTY_N && fNext_27_FULL_N ;
  assign fNext_27_DEQ = fNext_27_EMPTY_N && fNext_28_FULL_N ;
  assign fNext_27_CLR = 1'b0 ;

  // submodule fNext_28
  assign fNext_28_D_IN =
	     { fNext_27_D_OUT[115:87],
	       fNext_27_D_OUT[85:58],
	       !fNext_27_D_OUT[57],
	       fNext_27_D_OUT[57] ?
		 { fNext_27_D_OUT[56:0], 1'd0 } + b__h9464 :
		 { fNext_27_D_OUT[56:0], 1'd0 } - b__h9464 } ;
  assign fNext_28_ENQ = fNext_27_EMPTY_N && fNext_28_FULL_N ;
  assign fNext_28_DEQ = fNext_28_EMPTY_N && fResponse_FULL_N ;
  assign fNext_28_CLR = 1'b0 ;

  // submodule fNext_3
  assign fNext_3_D_IN =
	     { fNext_2_D_OUT[115:87],
	       fNext_2_D_OUT[85:58],
	       !fNext_2_D_OUT[57],
	       fNext_2_D_OUT[57] ?
		 { fNext_2_D_OUT[56:0], 1'd0 } + b__h1689 :
		 { fNext_2_D_OUT[56:0], 1'd0 } - b__h1689 } ;
  assign fNext_3_ENQ = fNext_2_EMPTY_N && fNext_3_FULL_N ;
  assign fNext_3_DEQ = fNext_3_EMPTY_N && fNext_4_FULL_N ;
  assign fNext_3_CLR = 1'b0 ;

  // submodule fNext_4
  assign fNext_4_D_IN =
	     { fNext_3_D_OUT[115:87],
	       fNext_3_D_OUT[85:58],
	       !fNext_3_D_OUT[57],
	       fNext_3_D_OUT[57] ?
		 { fNext_3_D_OUT[56:0], 1'd0 } + b__h2000 :
		 { fNext_3_D_OUT[56:0], 1'd0 } - b__h2000 } ;
  assign fNext_4_ENQ = fNext_3_EMPTY_N && fNext_4_FULL_N ;
  assign fNext_4_DEQ = fNext_4_EMPTY_N && fNext_5_FULL_N ;
  assign fNext_4_CLR = 1'b0 ;

  // submodule fNext_5
  assign fNext_5_D_IN =
	     { fNext_4_D_OUT[115:87],
	       fNext_4_D_OUT[85:58],
	       !fNext_4_D_OUT[57],
	       fNext_4_D_OUT[57] ?
		 { fNext_4_D_OUT[56:0], 1'd0 } + b__h2311 :
		 { fNext_4_D_OUT[56:0], 1'd0 } - b__h2311 } ;
  assign fNext_5_ENQ = fNext_4_EMPTY_N && fNext_5_FULL_N ;
  assign fNext_5_DEQ = fNext_5_EMPTY_N && fNext_6_FULL_N ;
  assign fNext_5_CLR = 1'b0 ;

  // submodule fNext_6
  assign fNext_6_D_IN =
	     { fNext_5_D_OUT[115:87],
	       fNext_5_D_OUT[85:58],
	       !fNext_5_D_OUT[57],
	       fNext_5_D_OUT[57] ?
		 { fNext_5_D_OUT[56:0], 1'd0 } + b__h2622 :
		 { fNext_5_D_OUT[56:0], 1'd0 } - b__h2622 } ;
  assign fNext_6_ENQ = fNext_5_EMPTY_N && fNext_6_FULL_N ;
  assign fNext_6_DEQ = fNext_6_EMPTY_N && fNext_7_FULL_N ;
  assign fNext_6_CLR = 1'b0 ;

  // submodule fNext_7
  assign fNext_7_D_IN =
	     { fNext_6_D_OUT[115:87],
	       fNext_6_D_OUT[85:58],
	       !fNext_6_D_OUT[57],
	       fNext_6_D_OUT[57] ?
		 { fNext_6_D_OUT[56:0], 1'd0 } + b__h2933 :
		 { fNext_6_D_OUT[56:0], 1'd0 } - b__h2933 } ;
  assign fNext_7_ENQ = fNext_6_EMPTY_N && fNext_7_FULL_N ;
  assign fNext_7_DEQ = fNext_7_EMPTY_N && fNext_8_FULL_N ;
  assign fNext_7_CLR = 1'b0 ;

  // submodule fNext_8
  assign fNext_8_D_IN =
	     { fNext_7_D_OUT[115:87],
	       fNext_7_D_OUT[85:58],
	       !fNext_7_D_OUT[57],
	       fNext_7_D_OUT[57] ?
		 { fNext_7_D_OUT[56:0], 1'd0 } + b__h3244 :
		 { fNext_7_D_OUT[56:0], 1'd0 } - b__h3244 } ;
  assign fNext_8_ENQ = fNext_7_EMPTY_N && fNext_8_FULL_N ;
  assign fNext_8_DEQ = fNext_8_EMPTY_N && fNext_9_FULL_N ;
  assign fNext_8_CLR = 1'b0 ;

  // submodule fNext_9
  assign fNext_9_D_IN =
	     { fNext_8_D_OUT[115:87],
	       fNext_8_D_OUT[85:58],
	       !fNext_8_D_OUT[57],
	       fNext_8_D_OUT[57] ?
		 { fNext_8_D_OUT[56:0], 1'd0 } + b__h3555 :
		 { fNext_8_D_OUT[56:0], 1'd0 } - b__h3555 } ;
  assign fNext_9_ENQ = fNext_8_EMPTY_N && fNext_9_FULL_N ;
  assign fNext_9_DEQ = fNext_9_EMPTY_N && fNext_10_FULL_N ;
  assign fNext_9_CLR = 1'b0 ;

  // submodule fRequest
  assign fRequest_D_IN = fpu_div_fState_S1_D_OUT[91:8] ;
  assign fRequest_ENQ =
	     fpu_div_fState_S1_EMPTY_N && fpu_div_fState_S2_FULL_N &&
	     fRequest_FULL_N &&
	     !fpu_div_fState_S1_D_OUT[164] ;
  assign fRequest_DEQ = fRequest_EMPTY_N && fFirst_FULL_N ;
  assign fRequest_CLR = 1'b0 ;

  // submodule fResponse
  assign fResponse_D_IN =
	     { IF_fNext_28D_OUT_BIT_57_THEN_fNext_28_first___ETC__q39[27:0],
	       value__h9663[56:29] } ;
  assign fResponse_ENQ = fNext_28_EMPTY_N && fResponse_FULL_N ;
  assign fResponse_DEQ =
	     fpu_div_fState_S2_EMPTY_N && fpu_div_fState_S3_FULL_N &&
	     fResponse_EMPTY_N &&
	     !fpu_div_fState_S2_D_OUT[80] ;
  assign fResponse_CLR = 1'b0 ;

  // submodule fpu_div_fOperands_S0
  assign fpu_div_fOperands_S0_D_IN =
	     { iFifo_D_OUT[168:137], iFifo_D_OUT[103:72], iFifo_D_OUT[6:4] } ;
  assign fpu_div_fOperands_S0_ENQ =
	     WILL_FIRE_RL_start_op && iFifo_D_OUT[3:0] == 4'd3 ;
  assign fpu_div_fOperands_S0_DEQ =
	     fpu_div_fOperands_S0_EMPTY_N && fpu_div_fState_S1_FULL_N ;
  assign fpu_div_fOperands_S0_CLR = 1'b0 ;

  // submodule fpu_div_fResult_S5
  assign fpu_div_fResult_S5_D_IN =
	     fpu_div_fState_S4_D_OUT[74] ?
	       fpu_div_fState_S4_D_OUT[73:37] :
	       { (fpu_div_fState_S4_D_OUT[32:25] == 8'd255) ?
		   fpu_div_fState_S4_D_OUT[33:2] :
		   CASE_fpu_div_fState_S4D_OUT_BITS_36_TO_34_0_C_ETC__q45,
		 fpu_div_fState_S4_D_OUT[41:37] |
		 { 2'd0,
		   _theResult___fst_exp__h32984 == 8'd255 &&
		   _theResult___fst_sfd__h32985 == 23'd0,
		   1'd0,
		   fpu_div_fState_S4_D_OUT[32:25] != 8'd255 &&
		   fpu_div_fState_S4_D_OUT[1:0] != 2'b0 } } ;
  assign fpu_div_fResult_S5_ENQ =
	     fpu_div_fState_S4_EMPTY_N && fpu_div_fResult_S5_FULL_N ;
  assign fpu_div_fResult_S5_DEQ = fpu_div_fResult_S5_EMPTY_N ;
  assign fpu_div_fResult_S5_CLR = 1'b0 ;

  // submodule fpu_div_fState_S1
  assign fpu_div_fState_S1_D_IN =
	     { fpu_div_fOperands_S0_D_OUT[65:58] == 8'd255 &&
	       fpu_div_fOperands_S0_D_OUT[57:35] != 23'd0 &&
	       !fpu_div_fOperands_S0_D_OUT[57] ||
	       fpu_div_fOperands_S0_D_OUT[33:26] == 8'd255 &&
	       fpu_div_fOperands_S0_D_OUT[25:3] != 23'd0 &&
	       !fpu_div_fOperands_S0_D_OUT[25] ||
	       fpu_div_fOperands_S0_D_OUT[65:58] == 8'd255 &&
	       fpu_div_fOperands_S0_D_OUT[57] ||
	       fpu_div_fOperands_S0_D_OUT[33:26] == 8'd255 &&
	       fpu_div_fOperands_S0_D_OUT[25] ||
	       fpu_div_fOperands_S0_first__95_BITS_33_TO_26_0_ETC___d632,
	       (fpu_div_fOperands_S0_D_OUT[65:58] == 8'd255 &&
		fpu_div_fOperands_S0_D_OUT[57:35] != 23'd0 &&
		!fpu_div_fOperands_S0_D_OUT[57]) ?
		 { fpu_div_fOperands_S0_D_OUT[66:58], sfd__h19066 } :
		 IF_fpu_div_fOperands_S0_first__95_BITS_33_TO_2_ETC___d713,
	       fpu_div_fOperands_S0_D_OUT[65:58] == 8'd255 &&
	       fpu_div_fOperands_S0_D_OUT[57:35] != 23'd0 &&
	       !fpu_div_fOperands_S0_D_OUT[57] ||
	       fpu_div_fOperands_S0_D_OUT[33:26] == 8'd255 &&
	       fpu_div_fOperands_S0_D_OUT[25:3] != 23'd0 &&
	       !fpu_div_fOperands_S0_D_OUT[25] ||
	       (fpu_div_fOperands_S0_D_OUT[65:58] != 8'd255 ||
		!fpu_div_fOperands_S0_D_OUT[57]) &&
	       (fpu_div_fOperands_S0_D_OUT[33:26] != 8'd255 ||
		!fpu_div_fOperands_S0_D_OUT[25]) &&
	       fpu_div_fOperands_S0_first__95_BITS_65_TO_58_9_ETC___d694,
	       (fpu_div_fOperands_S0_D_OUT[65:58] != 8'd255 ||
		fpu_div_fOperands_S0_D_OUT[57:35] == 23'd0 ||
		fpu_div_fOperands_S0_D_OUT[57]) &&
	       (fpu_div_fOperands_S0_D_OUT[65:58] != 8'd255 ||
		!fpu_div_fOperands_S0_D_OUT[57]) &&
	       NOT_fpu_div_fOperands_S0_first__95_BITS_65_TO__ETC___d658 &&
	       fpu_div_fOperands_S0_D_OUT[33:26] == 8'd0 &&
	       fpu_div_fOperands_S0_D_OUT[25:3] == 23'd0 &&
	       (fpu_div_fOperands_S0_D_OUT[65:58] != 8'd255 ||
		fpu_div_fOperands_S0_D_OUT[57:35] != 23'd0),
	       (fpu_div_fOperands_S0_D_OUT[65:58] != 8'd255 ||
		fpu_div_fOperands_S0_D_OUT[57:35] == 23'd0 ||
		fpu_div_fOperands_S0_D_OUT[57]) &&
	       (fpu_div_fOperands_S0_D_OUT[33:26] != 8'd255 ||
		fpu_div_fOperands_S0_D_OUT[25:3] == 23'd0 ||
		fpu_div_fOperands_S0_D_OUT[25]) &&
	       (fpu_div_fOperands_S0_D_OUT[65:58] != 8'd255 ||
		!fpu_div_fOperands_S0_D_OUT[57]) &&
	       (fpu_div_fOperands_S0_D_OUT[33:26] != 8'd255 ||
		!fpu_div_fOperands_S0_D_OUT[25]) &&
	       (fpu_div_fOperands_S0_D_OUT[33:26] != 8'd0 ||
		fpu_div_fOperands_S0_D_OUT[25:3] != 23'd0) &&
	       (fpu_div_fOperands_S0_D_OUT[65:58] != 8'd255 ||
		fpu_div_fOperands_S0_D_OUT[57:35] != 23'd0) &&
	       (fpu_div_fOperands_S0_D_OUT[65:58] != 8'd0 ||
		fpu_div_fOperands_S0_D_OUT[57:35] != 23'd0) &&
	       (fpu_div_fOperands_S0_D_OUT[33:26] != 8'd255 ||
		fpu_div_fOperands_S0_D_OUT[25:3] != 23'd0) &&
	       !IF_fpu_div_fOperands_S0_first__95_BITS_65_TO_5_ETC___d626,
	       (fpu_div_fOperands_S0_D_OUT[65:58] != 8'd255 ||
		fpu_div_fOperands_S0_D_OUT[57:35] == 23'd0 ||
		fpu_div_fOperands_S0_D_OUT[57]) &&
	       (fpu_div_fOperands_S0_D_OUT[33:26] != 8'd255 ||
		fpu_div_fOperands_S0_D_OUT[25:3] == 23'd0 ||
		fpu_div_fOperands_S0_D_OUT[25]) &&
	       (fpu_div_fOperands_S0_D_OUT[65:58] != 8'd255 ||
		!fpu_div_fOperands_S0_D_OUT[57]) &&
	       (fpu_div_fOperands_S0_D_OUT[33:26] != 8'd255 ||
		!fpu_div_fOperands_S0_D_OUT[25]) &&
	       NOT_fpu_div_fOperands_S0_first__95_BITS_33_TO__ETC___d745,
	       (fpu_div_fOperands_S0_D_OUT[65:58] != 8'd255 ||
		fpu_div_fOperands_S0_D_OUT[57:35] == 23'd0 ||
		fpu_div_fOperands_S0_D_OUT[57]) &&
	       (fpu_div_fOperands_S0_D_OUT[33:26] != 8'd255 ||
		fpu_div_fOperands_S0_D_OUT[25:3] == 23'd0 ||
		fpu_div_fOperands_S0_D_OUT[25]) &&
	       (fpu_div_fOperands_S0_D_OUT[65:58] != 8'd255 ||
		!fpu_div_fOperands_S0_D_OUT[57]) &&
	       (fpu_div_fOperands_S0_D_OUT[33:26] != 8'd255 ||
		!fpu_div_fOperands_S0_D_OUT[25]) &&
	       NOT_fpu_div_fOperands_S0_first__95_BITS_33_TO__ETC___d752,
	       fpu_div_fOperands_S0_D_OUT[2:0],
	       !fpu_div_fOperands_S0_first__95_BIT_66_61_EQ_fp_ETC___d663,
	       _theResult___snd_fst_exp__h24997,
	       _theResult___snd_fst_sfd__h24998,
	       x__h25062,
	       x__h25123,
	       x__h25177 } ;
  assign fpu_div_fState_S1_ENQ =
	     fpu_div_fOperands_S0_EMPTY_N && fpu_div_fState_S1_FULL_N ;
  assign fpu_div_fState_S1_DEQ =
	     fpu_div_fState_S1_EMPTY_N && fpu_div_fState_S2_FULL_N &&
	     fRequest_FULL_N ;
  assign fpu_div_fState_S1_CLR = 1'b0 ;

  // submodule fpu_div_fState_S2
  assign fpu_div_fState_S2_D_IN =
	     { fpu_div_fState_S1_D_OUT[164:92],
	       fpu_div_fState_S1_D_OUT[7:0] } ;
  assign fpu_div_fState_S2_ENQ =
	     fpu_div_fState_S1_EMPTY_N && fpu_div_fState_S2_FULL_N &&
	     fRequest_FULL_N ;
  assign fpu_div_fState_S2_DEQ =
	     fpu_div_fState_S2_EMPTY_N && fpu_div_fState_S3_FULL_N &&
	     fResponse_EMPTY_N ;
  assign fpu_div_fState_S2_CLR = 1'b0 ;

  // submodule fpu_div_fState_S3
  assign fpu_div_fState_S3_D_IN =
	     { fpu_div_fState_S2_D_OUT[80:8], v__h25858 } ;
  assign fpu_div_fState_S3_ENQ =
	     fpu_div_fState_S2_EMPTY_N && fpu_div_fState_S3_FULL_N &&
	     fResponse_EMPTY_N ;
  assign fpu_div_fState_S3_DEQ =
	     fpu_div_fState_S3_EMPTY_N && fpu_div_fState_S4_FULL_N ;
  assign fpu_div_fState_S3_CLR = 1'b0 ;

  // submodule fpu_div_fState_S4
  assign fpu_div_fState_S4_D_IN =
	     { (fpu_div_fState_S3_D_OUT[59:52] == 8'd255) ?
		 { fpu_div_fState_S3_D_OUT[28:27] != 2'b0 ||
		   fpu_div_fState_S3_D_OUT[101],
		   (fpu_div_fState_S3_D_OUT[28:27] == 2'b0) ?
		     fpu_div_fState_S3_D_OUT[100:69] :
		     { CASE_fpu_div_fState_S3D_OUT_BITS_63_TO_61_0_f_ETC__q46,
		       CASE_fpu_div_fState_S3D_OUT_BITS_63_TO_61_0_2_ETC__q47 } } :
		 fpu_div_fState_S3_D_OUT[101:69],
	       IF_IF_fpu_div_fState_S3_first__38_BITS_59_TO_5_ETC___d1062,
	       fpu_div_fState_S3_D_OUT[63:61],
	       fpu_div_fState_S3_first__38_BIT_60_55_CONCAT_I_ETC___d1072,
	       guard__h27006 } ;
  assign fpu_div_fState_S4_ENQ =
	     fpu_div_fState_S3_EMPTY_N && fpu_div_fState_S4_FULL_N ;
  assign fpu_div_fState_S4_DEQ =
	     fpu_div_fState_S4_EMPTY_N && fpu_div_fResult_S5_FULL_N ;
  assign fpu_div_fState_S4_CLR = 1'b0 ;

  // submodule fpu_madd_fOperand_S0
  assign fpu_madd_fOperand_S0_D_IN =
	     { iFifo_D_OUT[3:0] != 4'd2,
	       CASE_iFifoD_OUT_BITS_3_TO_0_0_iFifoD_OUT_BIT_ETC__q48,
	       CASE_iFifoD_OUT_BITS_3_TO_0_0_iFifoD_OUT_BIT_ETC__q49 } ;
  assign fpu_madd_fOperand_S0_ENQ =
	     WILL_FIRE_RL_start_op &&
	     (iFifo_D_OUT[3:0] == 4'd0 || iFifo_D_OUT[3:0] == 4'd1 ||
	      iFifo_D_OUT[3:0] == 4'd2 ||
	      iFifo_D_OUT[3:0] == 4'd5 ||
	      iFifo_D_OUT[3:0] == 4'd6 ||
	      iFifo_D_OUT[3:0] == 4'd7 ||
	      iFifo_D_OUT[3:0] == 4'd8) ;
  assign fpu_madd_fOperand_S0_DEQ =
	     fpu_madd_fOperand_S0_EMPTY_N && fpu_madd_fState_S1_FULL_N ;
  assign fpu_madd_fOperand_S0_CLR = 1'b0 ;

  // submodule fpu_madd_fProd_S2
  assign fpu_madd_fProd_S2_D_IN =
	     fpu_madd_fState_S1_D_OUT[47:24] *
	     fpu_madd_fState_S1_D_OUT[23:0] ;
  assign fpu_madd_fProd_S2_ENQ =
	     fpu_madd_fState_S1_EMPTY_N && fpu_madd_fProd_S2_FULL_N &&
	     fpu_madd_fState_S2_FULL_N ;
  assign fpu_madd_fProd_S2_DEQ =
	     fpu_madd_fState_S2_EMPTY_N && fpu_madd_fProd_S2_EMPTY_N &&
	     fpu_madd_fProd_S3_FULL_N &&
	     fpu_madd_fState_S3_FULL_N ;
  assign fpu_madd_fProd_S2_CLR = 1'b0 ;

  // submodule fpu_madd_fProd_S3
  assign fpu_madd_fProd_S3_D_IN = fpu_madd_fProd_S2_D_OUT ;
  assign fpu_madd_fProd_S3_ENQ =
	     fpu_madd_fState_S2_EMPTY_N && fpu_madd_fProd_S2_EMPTY_N &&
	     fpu_madd_fProd_S3_FULL_N &&
	     fpu_madd_fState_S3_FULL_N ;
  assign fpu_madd_fProd_S3_DEQ =
	     fpu_madd_fState_S3_EMPTY_N && fpu_madd_fProd_S3_EMPTY_N &&
	     fpu_madd_fState_S4_FULL_N ;
  assign fpu_madd_fProd_S3_CLR = 1'b0 ;

  // submodule fpu_madd_fResult_S9
  assign fpu_madd_fResult_S9_D_IN =
	     fpu_madd_fState_S8_D_OUT[76] ?
	       fpu_madd_fState_S8_D_OUT[75:39] :
	       IF_fpu_madd_fState_S8_first__530_BIT_35_533_AN_ETC___d2651 ;
  assign fpu_madd_fResult_S9_ENQ =
	     fpu_madd_fState_S8_EMPTY_N && fpu_madd_fResult_S9_FULL_N ;
  assign fpu_madd_fResult_S9_DEQ = fpu_madd_fResult_S9_EMPTY_N ;
  assign fpu_madd_fResult_S9_CLR = 1'b0 ;

  // submodule fpu_madd_fState_S1
  assign fpu_madd_fState_S1_D_IN =
	     { x__h65583 == 8'd255 && _theResult___fst_sfd__h65657 != 23'd0 &&
	       !_theResult___fst_sfd__h65657[22] ||
	       fpu_madd_fOperand_S0_D_OUT[65:58] == 8'd255 &&
	       fpu_madd_fOperand_S0_D_OUT[57:35] != 23'd0 &&
	       !fpu_madd_fOperand_S0_D_OUT[57] ||
	       fpu_madd_fOperand_S0_D_OUT[33:26] == 8'd255 &&
	       fpu_madd_fOperand_S0_D_OUT[25:3] != 23'd0 &&
	       !fpu_madd_fOperand_S0_D_OUT[25] ||
	       IF_fpu_madd_fOperand_S0_first__769_BIT_99_770__ETC___d1828,
	       IF_IF_fpu_madd_fOperand_S0_first__769_BIT_99_7_ETC___d1884,
	       IF_fpu_madd_fOperand_S0_first__769_BIT_99_770__ETC___d1894,
	       4'd0,
	       fpu_madd_fOperand_S0_D_OUT[2:0],
	       fpu_madd_fOperand_S0_D_OUT[99],
	       fpu_madd_fOperand_S0_D_OUT[99] &&
	       fpu_madd_fOperand_S0_D_OUT[98],
	       IF_fpu_madd_fOperand_S0_first__769_BIT_99_770__ETC___d1844,
	       NOT_fpu_madd_fOperand_S0_first__769_BIT_66_817_ETC___d1820,
	       IF_fpu_madd_fOperand_S0_first__769_BITS_65_TO__ETC___d1906 } ;
  assign fpu_madd_fState_S1_ENQ =
	     fpu_madd_fOperand_S0_EMPTY_N && fpu_madd_fState_S1_FULL_N ;
  assign fpu_madd_fState_S1_DEQ =
	     fpu_madd_fState_S1_EMPTY_N && fpu_madd_fProd_S2_FULL_N &&
	     fpu_madd_fState_S2_FULL_N ;
  assign fpu_madd_fState_S1_CLR = 1'b0 ;

  // submodule fpu_madd_fState_S2
  assign fpu_madd_fState_S2_D_IN = fpu_madd_fState_S1_D_OUT[132:48] ;
  assign fpu_madd_fState_S2_ENQ =
	     fpu_madd_fState_S1_EMPTY_N && fpu_madd_fProd_S2_FULL_N &&
	     fpu_madd_fState_S2_FULL_N ;
  assign fpu_madd_fState_S2_DEQ =
	     fpu_madd_fState_S2_EMPTY_N && fpu_madd_fProd_S2_EMPTY_N &&
	     fpu_madd_fProd_S3_FULL_N &&
	     fpu_madd_fState_S3_FULL_N ;
  assign fpu_madd_fState_S2_CLR = 1'b0 ;

  // submodule fpu_madd_fState_S3
  assign fpu_madd_fState_S3_D_IN = fpu_madd_fState_S2_D_OUT ;
  assign fpu_madd_fState_S3_ENQ =
	     fpu_madd_fState_S2_EMPTY_N && fpu_madd_fProd_S2_EMPTY_N &&
	     fpu_madd_fProd_S3_FULL_N &&
	     fpu_madd_fState_S3_FULL_N ;
  assign fpu_madd_fState_S3_DEQ =
	     fpu_madd_fState_S3_EMPTY_N && fpu_madd_fProd_S3_EMPTY_N &&
	     fpu_madd_fState_S4_FULL_N ;
  assign fpu_madd_fState_S3_CLR = 1'b0 ;

  // submodule fpu_madd_fState_S4
  assign fpu_madd_fState_S4_D_IN =
	     { fpu_madd_fState_S3_D_OUT[84:52],
	       IF_fpu_madd_fState_S3_first__933_BIT_84_935_TH_ETC___d2229,
	       fpu_madd_fState_S3_D_OUT[46:11],
	       !fpu_madd_fState_S3_D_OUT[84] && fpu_madd_fState_S3_D_OUT[10],
	       fpu_madd_fState_S3_D_OUT[84] ?
		 31'd0 :
		 IF_fpu_madd_fState_S3_first__933_BITS_9_TO_0_9_ETC___d2240,
	       _theResult___snd_snd_snd__h83957 } ;
  assign fpu_madd_fState_S4_ENQ =
	     fpu_madd_fState_S3_EMPTY_N && fpu_madd_fProd_S3_EMPTY_N &&
	     fpu_madd_fState_S4_FULL_N ;
  assign fpu_madd_fState_S4_DEQ =
	     fpu_madd_fState_S4_EMPTY_N && fpu_madd_fState_S5_FULL_N ;
  assign fpu_madd_fState_S4_CLR = 1'b0 ;

  // submodule fpu_madd_fState_S5
  assign fpu_madd_fState_S5_D_IN =
	     { fpu_madd_fState_S4_D_OUT[107:66],
	       fpu_madd_fState_S4_D_OUT[65] != fpu_madd_fState_S4_D_OUT[33],
	       IF_NOT_fpu_madd_fState_S4_first__250_BIT_66_25_ETC___d2294 } ;
  assign fpu_madd_fState_S5_ENQ =
	     fpu_madd_fState_S4_EMPTY_N && fpu_madd_fState_S5_FULL_N ;
  assign fpu_madd_fState_S5_DEQ =
	     fpu_madd_fState_S5_EMPTY_N && fpu_madd_fState_S6_FULL_N ;
  assign fpu_madd_fState_S5_CLR = 1'b0 ;

  // submodule fpu_madd_fState_S6
  assign fpu_madd_fState_S6_D_IN =
	     { fpu_madd_fState_S5_D_OUT[119:66],
	       fpu_madd_fState_S5_D_OUT[55:28],
	       x__h84943 } ;
  assign fpu_madd_fState_S6_ENQ =
	     fpu_madd_fState_S5_EMPTY_N && fpu_madd_fState_S6_FULL_N ;
  assign fpu_madd_fState_S6_DEQ =
	     fpu_madd_fState_S6_EMPTY_N && fpu_madd_fState_S7_FULL_N ;
  assign fpu_madd_fState_S6_CLR = 1'b0 ;

  // submodule fpu_madd_fState_S7
  assign fpu_madd_fState_S7_D_IN =
	     { fpu_madd_fState_S6_D_OUT[109:56], x__h85447, x__h85456 } ;
  assign fpu_madd_fState_S7_ENQ =
	     fpu_madd_fState_S6_EMPTY_N && fpu_madd_fState_S7_FULL_N ;
  assign fpu_madd_fState_S7_DEQ =
	     fpu_madd_fState_S7_EMPTY_N && fpu_madd_fState_S8_FULL_N ;
  assign fpu_madd_fState_S7_CLR = 1'b0 ;

  // submodule fpu_madd_fState_S8
  assign fpu_madd_fState_S8_D_IN =
	     { fpu_madd_fState_S7_D_OUT[109:77],
	       fpu_madd_fState_S7_D_OUT[109] ?
		 fpu_madd_fState_S7_D_OUT[76:72] :
		 fpu_madd_fState_S7_first__339_BITS_76_TO_72_34_ETC___d2512,
	       fpu_madd_fState_S7_D_OUT[71:68],
	       !fpu_madd_fState_S7_D_OUT[109] && fpu_madd_fState_S7_D_OUT[66],
	       fpu_madd_fState_S7_D_OUT[109] ?
		 31'd0 :
		 IF_IF_fpu_madd_fState_S7_first__339_BIT_67_343_ETC___d2522,
	       x__h90885,
	       fpu_madd_fState_S7_D_OUT[67] } ;
  assign fpu_madd_fState_S8_ENQ =
	     fpu_madd_fState_S7_EMPTY_N && fpu_madd_fState_S8_FULL_N ;
  assign fpu_madd_fState_S8_DEQ =
	     fpu_madd_fState_S8_EMPTY_N && fpu_madd_fResult_S9_FULL_N ;
  assign fpu_madd_fState_S8_CLR = 1'b0 ;

  // submodule fpu_sqr_fOperand_S0
  assign fpu_sqr_fOperand_S0_D_IN =
	     { iFifo_D_OUT[168:137], iFifo_D_OUT[6:4] } ;
  assign fpu_sqr_fOperand_S0_ENQ =
	     WILL_FIRE_RL_start_op && iFifo_D_OUT[3:0] == 4'd4 ;
  assign fpu_sqr_fOperand_S0_DEQ =
	     fpu_sqr_fOperand_S0_EMPTY_N && fpu_sqr_fState_S1_FULL_N ;
  assign fpu_sqr_fOperand_S0_CLR = 1'b0 ;

  // submodule fpu_sqr_fResult_S5
  assign fpu_sqr_fResult_S5_D_IN =
	     fpu_sqr_fState_S4_D_OUT[74] ?
	       fpu_sqr_fState_S4_D_OUT[73:37] :
	       { (fpu_sqr_fState_S4_D_OUT[32:25] == 8'd255) ?
		   fpu_sqr_fState_S4_D_OUT[33:2] :
		   CASE_fpu_sqr_fState_S4D_OUT_BITS_36_TO_34_0_C_ETC__q55,
		 fpu_sqr_fState_S4_D_OUT[41:37] |
		 { 2'd0,
		   _theResult___fst_exp__h65047 == 8'd255 &&
		   _theResult___fst_sfd__h65048 == 23'd0,
		   1'd0,
		   fpu_sqr_fState_S4_D_OUT[32:25] != 8'd255 &&
		   fpu_sqr_fState_S4_D_OUT[1:0] != 2'b0 } } ;
  assign fpu_sqr_fResult_S5_ENQ =
	     fpu_sqr_fState_S4_EMPTY_N && fpu_sqr_fResult_S5_FULL_N ;
  assign fpu_sqr_fResult_S5_DEQ = fpu_sqr_fResult_S5_EMPTY_N ;
  assign fpu_sqr_fResult_S5_CLR = 1'b0 ;

  // submodule fpu_sqr_fState_S1
  assign fpu_sqr_fState_S1_D_IN =
	     (fpu_sqr_fOperand_S0_D_OUT[33:26] == 8'd255 &&
	      fpu_sqr_fOperand_S0_D_OUT[25:3] != 23'd0 &&
	      !fpu_sqr_fOperand_S0_D_OUT[25]) ?
	       { 1'd1,
		 fpu_sqr_fOperand_S0_D_OUT[34:26],
		 sfd__h34934,
		 70'h20AAAAAAAAAAAAAAAA } :
	       ((fpu_sqr_fOperand_S0_D_OUT[33:26] == 8'd255 &&
		 fpu_sqr_fOperand_S0_D_OUT[25] ||
		 fpu_sqr_fOperand_S0_D_OUT[33:26] == 8'd0 &&
		 fpu_sqr_fOperand_S0_D_OUT[25:3] == 23'd0 ||
		 fpu_sqr_fOperand_S0_D_OUT[33:26] == 8'd255 &&
		 fpu_sqr_fOperand_S0_D_OUT[25:3] == 23'd0 &&
		 !fpu_sqr_fOperand_S0_D_OUT[34]) ?
		  { 1'd1,
		    fpu_sqr_fOperand_S0_D_OUT[34:3],
		    70'h00AAAAAAAAAAAAAAAA } :
		  (fpu_sqr_fOperand_S0_D_OUT[34] ?
		     103'h5FF0000020AAAAAAAAAAAAAAAA :
		     { 38'h1555555540,
		       fpu_sqr_fOperand_S0_D_OUT[2:0],
		       fpu_sqr_fOperand_S0_D_OUT[34],
		       x__h38586[7:0],
		       fpu_sqr_fOperand_S0_D_OUT[25:3],
		       x__h43472 })) ;
  assign fpu_sqr_fState_S1_ENQ =
	     fpu_sqr_fOperand_S0_EMPTY_N && fpu_sqr_fState_S1_FULL_N ;
  assign fpu_sqr_fState_S1_DEQ = WILL_FIRE_RL_fpu_sqr_s2_stage ;
  assign fpu_sqr_fState_S1_CLR = 1'b0 ;

  // submodule fpu_sqr_fState_S2
  assign fpu_sqr_fState_S2_D_IN = fpu_sqr_fState_S1_D_OUT[102:30] ;
  assign fpu_sqr_fState_S2_ENQ = WILL_FIRE_RL_fpu_sqr_s2_stage ;
  assign fpu_sqr_fState_S2_DEQ =
	     fpu_sqr_fState_S2_EMPTY_N && fpu_sqr_fState_S3_FULL_N &&
	     crg_done ;
  assign fpu_sqr_fState_S2_CLR = 1'b0 ;

  // submodule fpu_sqr_fState_S3
  assign fpu_sqr_fState_S3_D_IN = { fpu_sqr_fState_S2_D_OUT, v__h58340 } ;
  assign fpu_sqr_fState_S3_ENQ =
	     fpu_sqr_fState_S2_EMPTY_N && fpu_sqr_fState_S3_FULL_N &&
	     crg_done ;
  assign fpu_sqr_fState_S3_DEQ =
	     fpu_sqr_fState_S3_EMPTY_N && fpu_sqr_fState_S4_FULL_N ;
  assign fpu_sqr_fState_S3_CLR = 1'b0 ;

  // submodule fpu_sqr_fState_S4
  assign fpu_sqr_fState_S4_D_IN =
	     { fpu_sqr_fState_S3_D_OUT[103:71],
	       fpu_sqr_fState_S3_D_OUT[103] && fpu_sqr_fState_S3_D_OUT[70],
	       fpu_sqr_fState_S3_D_OUT[103] && fpu_sqr_fState_S3_D_OUT[69],
	       IF_fpu_sqr_fState_S3_first__455_BIT_103_457_TH_ETC___d1638,
	       fpu_sqr_fState_S3_D_OUT[65:62],
	       fpu_sqr_fState_S3_D_OUT[103] ?
		 fpu_sqr_fState_S3_D_OUT[61:31] :
		 IF_fpu_sqr_fState_S3_first__455_BIT_30_463_AND_ETC___d1645,
	       guard__h58912 } ;
  assign fpu_sqr_fState_S4_ENQ =
	     fpu_sqr_fState_S3_EMPTY_N && fpu_sqr_fState_S4_FULL_N ;
  assign fpu_sqr_fState_S4_DEQ =
	     fpu_sqr_fState_S4_EMPTY_N && fpu_sqr_fResult_S5_FULL_N ;
  assign fpu_sqr_fState_S4_CLR = 1'b0 ;

  // submodule iFifo
  assign iFifo_D_IN = server_core_request_put ;
  assign iFifo_ENQ = EN_server_core_request_put ;
  assign iFifo_DEQ = WILL_FIRE_RL_start_op ;
  assign iFifo_CLR = resetReqsF_EMPTY_N && resetRspsF_FULL_N ;

  // submodule isNegateFifo
  assign isNegateFifo_D_IN =
	     iFifo_D_OUT[3:0] == 4'd7 || iFifo_D_OUT[3:0] == 4'd8 ;
  assign isNegateFifo_ENQ = WILL_FIRE_RL_start_op ;
  assign isNegateFifo_DEQ =
	     isNegateFifo_EMPTY_N && rmdFifo_EMPTY_N && oFifo_FULL_N &&
	     resWire_whas ;
  assign isNegateFifo_CLR = resetReqsF_EMPTY_N && resetRspsF_FULL_N ;

  // submodule oFifo
  assign oFifo_D_IN =
	     { 33'h1AAAAAAAA,
	       isNegateFifo_D_OUT ^ resWire_wget[36],
	       resWire_wget[35:0] } ;
  assign oFifo_ENQ =
	     isNegateFifo_EMPTY_N && rmdFifo_EMPTY_N && oFifo_FULL_N &&
	     resWire_whas ;
  assign oFifo_DEQ = EN_server_core_response_get ;
  assign oFifo_CLR = resetReqsF_EMPTY_N && resetRspsF_FULL_N ;

  // submodule resetReqsF
  assign resetReqsF_ENQ = EN_server_reset_request_put ;
  assign resetReqsF_DEQ = resetReqsF_EMPTY_N && resetRspsF_FULL_N ;
  assign resetReqsF_CLR = 1'b0 ;

  // submodule resetRspsF
  assign resetRspsF_ENQ = resetReqsF_EMPTY_N && resetRspsF_FULL_N ;
  assign resetRspsF_DEQ = EN_server_reset_response_get ;
  assign resetRspsF_CLR = 1'b0 ;

  // submodule rmdFifo
  assign rmdFifo_D_IN = iFifo_D_OUT[6:4] ;
  assign rmdFifo_ENQ = WILL_FIRE_RL_start_op ;
  assign rmdFifo_DEQ =
	     isNegateFifo_EMPTY_N && rmdFifo_EMPTY_N && oFifo_FULL_N &&
	     resWire_whas ;
  assign rmdFifo_CLR = resetReqsF_EMPTY_N && resetRspsF_FULL_N ;

  // remaining internal signals
  assign IF_0_CONCAT_IF_IF_898_MINUS_fpu_madd_fState_S3_ETC__q23 =
	     _0_CONCAT_IF_IF_898_MINUS_fpu_madd_fState_S3_fi_ETC___d2167 ?
	       _theResult___snd__h83623 :
	       _theResult___snd__h83618 ;
  assign IF_0_CONCAT_IF_IF_fpu_div_fState_S3_first__38__ETC__q11 =
	     _0_CONCAT_IF_IF_fpu_div_fState_S3_first__38_BIT_ETC___d1019 ?
	       _theResult___snd__h32048 :
	       _theResult___snd__h32043 ;
  assign IF_0_CONCAT_IF_IF_fpu_madd_fState_S7_first__33_ETC__q28 =
	     _0_CONCAT_IF_IF_fpu_madd_fState_S7_first__339_B_ETC___d2474 ?
	       _theResult___snd__h90574 :
	       _theResult___snd__h90569 ;
  assign IF_0_CONCAT_IF_fpu_sqr_fState_S3_first__455_BI_ETC__q18 =
	     _0_CONCAT_IF_fpu_sqr_fState_S3_first__455_BIT_3_ETC___d1600 ?
	       _theResult___snd__h64094 :
	       _theResult___snd__h64089 ;
  assign IF_0b0_CONCAT_NOT_fpu_div_fState_S4_first__078_ETC___d1115 =
	     sfd__h32613[24] ?
	       ((fpu_div_fState_S4_D_OUT[32:25] == 8'd254) ?
		  31'h7F800000 :
		  { din_inc___2_exp__h32994, sfd__h32613[23:1] }) :
	       { IF_fpu_div_fState_S4_first__078_BITS_32_TO_25__ETC___d1112,
		 sfd__h32613[22:0] } ;
  assign IF_0b0_CONCAT_NOT_fpu_madd_fState_S8_first__53_ETC___d2635 =
	     sfd__h91157[24] ?
	       ((fpu_madd_fState_S8_D_OUT[33:26] == 8'd254) ?
		  31'h7F800000 :
		  { din_inc___2_exp__h91540, sfd__h91157[23:1] }) :
	       { IF_fpu_madd_fState_S8_first__530_BITS_33_TO_26_ETC___d2556,
		 sfd__h91157[22:0] } ;
  assign IF_0b0_CONCAT_NOT_fpu_sqr_fState_S4_first__653_ETC___d1690 =
	     sfd__h64676[24] ?
	       ((fpu_sqr_fState_S4_D_OUT[32:25] == 8'd254) ?
		  31'h7F800000 :
		  { din_inc___2_exp__h65057, sfd__h64676[23:1] }) :
	       { IF_fpu_sqr_fState_S4_first__653_BITS_32_TO_25__ETC___d1687,
		 sfd__h64676[22:0] } ;
  assign IF_IF_898_MINUS_fpu_madd_fState_S3_first__933__ETC___d1967 =
	     (din_exp__h83466 == 8'd0) ?
	       9'd386 :
	       { din_exp3466_MINUS_127__q22[7], din_exp3466_MINUS_127__q22 } ;
  assign IF_IF_898_MINUS_fpu_madd_fState_S3_first__933__ETC___d2164 =
	     (sfdBC__h75325[47] ?
		6'd0 :
		(sfdBC__h75325[46] ?
		   6'd1 :
		   (sfdBC__h75325[45] ?
		      6'd2 :
		      (sfdBC__h75325[44] ?
			 6'd3 :
			 (sfdBC__h75325[43] ?
			    6'd4 :
			    (sfdBC__h75325[42] ?
			       6'd5 :
			       (sfdBC__h75325[41] ?
				  6'd6 :
				  (sfdBC__h75325[40] ?
				     6'd7 :
				     (sfdBC__h75325[39] ?
					6'd8 :
					(sfdBC__h75325[38] ?
					   6'd9 :
					   (sfdBC__h75325[37] ?
					      6'd10 :
					      (sfdBC__h75325[36] ?
						 6'd11 :
						 (sfdBC__h75325[35] ?
						    6'd12 :
						    (sfdBC__h75325[34] ?
						       6'd13 :
						       (sfdBC__h75325[33] ?
							  6'd14 :
							  (sfdBC__h75325[32] ?
							     6'd15 :
							     (sfdBC__h75325[31] ?
								6'd16 :
								(sfdBC__h75325[30] ?
								   6'd17 :
								   (sfdBC__h75325[29] ?
								      6'd18 :
								      (sfdBC__h75325[28] ?
									 6'd19 :
									 (sfdBC__h75325[27] ?
									    6'd20 :
									    (sfdBC__h75325[26] ?
									       6'd21 :
									       (sfdBC__h75325[25] ?
										  6'd22 :
										  (sfdBC__h75325[24] ?
										     6'd23 :
										     (sfdBC__h75325[23] ?
											6'd24 :
											(sfdBC__h75325[22] ?
											   6'd25 :
											   (sfdBC__h75325[21] ?
											      6'd26 :
											      (sfdBC__h75325[20] ?
												 6'd27 :
												 (sfdBC__h75325[19] ?
												    6'd28 :
												    (sfdBC__h75325[18] ?
												       6'd29 :
												       (sfdBC__h75325[17] ?
													  6'd30 :
													  (sfdBC__h75325[16] ?
													     6'd31 :
													     (sfdBC__h75325[15] ?
														6'd32 :
														(sfdBC__h75325[14] ?
														   6'd33 :
														   (sfdBC__h75325[13] ?
														      6'd34 :
														      (sfdBC__h75325[12] ?
															 6'd35 :
															 (sfdBC__h75325[11] ?
															    6'd36 :
															    (sfdBC__h75325[10] ?
															       6'd37 :
															       (sfdBC__h75325[9] ?
																  6'd38 :
																  (sfdBC__h75325[8] ?
																     6'd39 :
																     (sfdBC__h75325[7] ?
																	6'd40 :
																	(sfdBC__h75325[6] ?
																	   6'd41 :
																	   (sfdBC__h75325[5] ?
																	      6'd42 :
																	      (sfdBC__h75325[4] ?
																		 6'd43 :
																		 (sfdBC__h75325[3] ?
																		    6'd44 :
																		    (sfdBC__h75325[2] ?
																		       6'd45 :
																		       (sfdBC__h75325[1] ?
																			  6'd46 :
																			  (sfdBC__h75325[0] ?
																			     6'd47 :
																			     6'd48)))))))))))))))))))))))))))))))))))))))))))))))) -
	     6'd1 ;
  assign IF_IF_898_MINUS_fpu_madd_fState_S3_first__933__ETC___d2166 =
	     IF_IF_898_MINUS_fpu_madd_fState_S3_first__933__ETC___d1967 -
	     9'd386 ;
  assign IF_IF_898_MINUS_fpu_madd_fState_S3_first__933__ETC___d2238 =
	     (sfdBC__h75325[47] &&
	      IF_IF_898_MINUS_fpu_madd_fState_S3_first__933__ETC___d1967 ==
	      9'd127) ?
	       31'h7F7FFFFF :
	       { _theResult___fst_exp__h83549, sfdin__h83543[47:25] } ;
  assign IF_IF_fpu_div_fState_S3_first__38_BITS_59_TO_5_ETC___d1016 =
	     (sfdin__h27178[28] ?
		5'd0 :
		(sfdin__h27178[27] ?
		   5'd1 :
		   (sfdin__h27178[26] ?
		      5'd2 :
		      (sfdin__h27178[25] ?
			 5'd3 :
			 (sfdin__h27178[24] ?
			    5'd4 :
			    (sfdin__h27178[23] ?
			       5'd5 :
			       (sfdin__h27178[22] ?
				  5'd6 :
				  (sfdin__h27178[21] ?
				     5'd7 :
				     (sfdin__h27178[20] ?
					5'd8 :
					(sfdin__h27178[19] ?
					   5'd9 :
					   (sfdin__h27178[18] ?
					      5'd10 :
					      (sfdin__h27178[17] ?
						 5'd11 :
						 (sfdin__h27178[16] ?
						    5'd12 :
						    (sfdin__h27178[15] ?
						       5'd13 :
						       (sfdin__h27178[14] ?
							  5'd14 :
							  (sfdin__h27178[13] ?
							     5'd15 :
							     (sfdin__h27178[12] ?
								5'd16 :
								(sfdin__h27178[11] ?
								   5'd17 :
								   (sfdin__h27178[10] ?
								      5'd18 :
								      (sfdin__h27178[9] ?
									 5'd19 :
									 (sfdin__h27178[8] ?
									    5'd20 :
									    (sfdin__h27178[7] ?
									       5'd21 :
									       (sfdin__h27178[6] ?
										  5'd22 :
										  (sfdin__h27178[5] ?
										     5'd23 :
										     (sfdin__h27178[4] ?
											5'd24 :
											(sfdin__h27178[3] ?
											   5'd25 :
											   (sfdin__h27178[2] ?
											      5'd26 :
											      (sfdin__h27178[1] ?
												 5'd27 :
												 (sfdin__h27178[0] ?
												    5'd28 :
												    5'd29))))))))))))))))))))))))))))) -
	     5'd1 ;
  assign IF_IF_fpu_div_fState_S3_first__38_BITS_59_TO_5_ETC___d1018 =
	     IF_IF_fpu_div_fState_S3_first__38_BITS_59_TO_5_ETC___d895 -
	     9'd386 ;
  assign IF_IF_fpu_div_fState_S3_first__38_BITS_59_TO_5_ETC___d1062 =
	     IF_fpu_div_fState_S3_first__38_BITS_59_TO_52_3_ETC___d872 ?
	       IF_fpu_div_fState_S3_first__38_BITS_59_TO_52_3_ETC___d1057 :
	       { fpu_div_fState_S3_D_OUT[68:67],
		 (fpu_div_fState_S3_D_OUT[59:52] == 8'd255) ?
		   fpu_div_fState_S3_D_OUT[28:27] != 2'b0 ||
		   fpu_div_fState_S3_D_OUT[66] :
		   fpu_div_fState_S3_D_OUT[66],
		 fpu_div_fState_S3_D_OUT[65],
		 (fpu_div_fState_S3_D_OUT[59:52] == 8'd255) ?
		   fpu_div_fState_S3_D_OUT[28:27] != 2'b0 ||
		   fpu_div_fState_S3_D_OUT[64] :
		   fpu_div_fState_S3_D_OUT[64] } ;
  assign IF_IF_fpu_div_fState_S3_first__38_BITS_59_TO_5_ETC___d1065 =
	     (sfdin__h27178[28] &&
	      IF_IF_fpu_div_fState_S3_first__38_BITS_59_TO_5_ETC___d895 ==
	      9'd127) ?
	       31'h7F7FFFFF :
	       { _theResult___fst_exp__h31972, sfdin__h31966[28:6] } ;
  assign IF_IF_fpu_div_fState_S3_first__38_BITS_59_TO_5_ETC___d895 =
	     (_theResult___fst_exp__h31929 == 8'd0) ?
	       9'd386 :
	       { theResult___fst_exp1929_MINUS_127__q10[7],
		 theResult___fst_exp1929_MINUS_127__q10 } ;
  assign IF_IF_fpu_madd_fOperand_S0_first__769_BIT_99_7_ETC___d1866 =
	     (x__h65583 == 8'd255 && _theResult___fst_sfd__h65657 == 23'd0) ?
	       fpu_madd_fOperand_S0_D_OUT[99] &&
	       fpu_madd_fOperand_S0_D_OUT[98] :
	       ((fpu_madd_fOperand_S0_D_OUT[65:58] == 8'd255 &&
		 fpu_madd_fOperand_S0_D_OUT[57:35] == 23'd0 ||
		 fpu_madd_fOperand_S0_D_OUT[33:26] == 8'd255 &&
		 fpu_madd_fOperand_S0_D_OUT[25:3] == 23'd0) ?
		  NOT_fpu_madd_fOperand_S0_first__769_BIT_66_817_ETC___d1820 :
		  fpu_madd_fOperand_S0_D_OUT[99] &&
		  fpu_madd_fOperand_S0_D_OUT[98]) ;
  assign IF_IF_fpu_madd_fOperand_S0_first__769_BIT_99_7_ETC___d1876 =
	     (x__h65583 == 8'd255 && _theResult___fst_sfd__h65657 == 23'd0) ?
	       IF_fpu_madd_fOperand_S0_first__769_BIT_99_770__ETC___d1844 :
	       ((fpu_madd_fOperand_S0_D_OUT[65:58] == 8'd255 &&
		 fpu_madd_fOperand_S0_D_OUT[57:35] == 23'd0 ||
		 fpu_madd_fOperand_S0_D_OUT[33:26] == 8'd255 &&
		 fpu_madd_fOperand_S0_D_OUT[25:3] == 23'd0) ?
		  31'h7F800000 :
		  IF_fpu_madd_fOperand_S0_first__769_BIT_99_770__ETC___d1844) ;
  assign IF_IF_fpu_madd_fOperand_S0_first__769_BIT_99_7_ETC___d1881 =
	     (x__h65583 == 8'd255 && _theResult___fst_sfd__h65657[22]) ?
	       { fpu_madd_fOperand_S0_D_OUT[99] &&
		 fpu_madd_fOperand_S0_D_OUT[98],
		 IF_fpu_madd_fOperand_S0_first__769_BIT_99_770__ETC___d1844 } :
	       ((fpu_madd_fOperand_S0_D_OUT[65:58] == 8'd255 &&
		 fpu_madd_fOperand_S0_D_OUT[57]) ?
		  fpu_madd_fOperand_S0_D_OUT[66:35] :
		  ((fpu_madd_fOperand_S0_D_OUT[33:26] == 8'd255 &&
		    fpu_madd_fOperand_S0_D_OUT[25]) ?
		     fpu_madd_fOperand_S0_D_OUT[34:3] :
		     { NOT_fpu_madd_fOperand_S0_first__769_BITS_65_TO_ETC___d1867,
		       IF_fpu_madd_fOperand_S0_first__769_BITS_65_TO__ETC___d1877 })) ;
  assign IF_IF_fpu_madd_fOperand_S0_first__769_BIT_99_7_ETC___d1884 =
	     (x__h65583 == 8'd255 && _theResult___fst_sfd__h65657 != 23'd0 &&
	      !_theResult___fst_sfd__h65657[22]) ?
	       { fpu_madd_fOperand_S0_D_OUT[99] &&
		 fpu_madd_fOperand_S0_D_OUT[98],
		 x__h65583,
		 sfd__h67233 } :
	       IF_fpu_madd_fOperand_S0_first__769_BITS_65_TO__ETC___d1883 ;
  assign IF_IF_fpu_madd_fState_S7_first__339_BIT_67_343_ETC___d2471 =
	     (sfd__h85687[27] ?
		5'd0 :
		(sfd__h85687[26] ?
		   5'd1 :
		   (sfd__h85687[25] ?
		      5'd2 :
		      (sfd__h85687[24] ?
			 5'd3 :
			 (sfd__h85687[23] ?
			    5'd4 :
			    (sfd__h85687[22] ?
			       5'd5 :
			       (sfd__h85687[21] ?
				  5'd6 :
				  (sfd__h85687[20] ?
				     5'd7 :
				     (sfd__h85687[19] ?
					5'd8 :
					(sfd__h85687[18] ?
					   5'd9 :
					   (sfd__h85687[17] ?
					      5'd10 :
					      (sfd__h85687[16] ?
						 5'd11 :
						 (sfd__h85687[15] ?
						    5'd12 :
						    (sfd__h85687[14] ?
						       5'd13 :
						       (sfd__h85687[13] ?
							  5'd14 :
							  (sfd__h85687[12] ?
							     5'd15 :
							     (sfd__h85687[11] ?
								5'd16 :
								(sfd__h85687[10] ?
								   5'd17 :
								   (sfd__h85687[9] ?
								      5'd18 :
								      (sfd__h85687[8] ?
									 5'd19 :
									 (sfd__h85687[7] ?
									    5'd20 :
									    (sfd__h85687[6] ?
									       5'd21 :
									       (sfd__h85687[5] ?
										  5'd22 :
										  (sfd__h85687[4] ?
										     5'd23 :
										     (sfd__h85687[3] ?
											5'd24 :
											(sfd__h85687[2] ?
											   5'd25 :
											   (sfd__h85687[1] ?
											      5'd26 :
											      (sfd__h85687[0] ?
												 5'd27 :
												 5'd28)))))))))))))))))))))))))))) -
	     5'd1 ;
  assign IF_IF_fpu_madd_fState_S7_first__339_BIT_67_343_ETC___d2522 =
	     (sfd__h85687[27] &&
	      IF_fpu_madd_fState_S7_first__339_BITS_65_TO_56_ETC___d2354 ==
	      9'd127) ?
	       31'h7F7FFFFF :
	       { _theResult___fst_exp__h90500, sfdin__h90494[27:5] } ;
  assign IF_IF_rg_index_192_EQ_31_207_OR_rg_res_196_BIT_ETC___d1230 =
	     (IF_rg_index_192_EQ_31_207_OR_rg_res_196_BIT_60_ETC___d1216 ==
	      60'd0) ?
	       IF_rg_index_192_EQ_31_207_OR_rg_res_196_BIT_60_ETC___d1227 :
	       ((rg_index == 5'd31) ?
		  rg_res[59:0] :
		  IF_rg_res_196_BIT_60_197_THEN_rg_res_196_BITS__ETC___d1205) ;
  assign IF_IF_rg_index_192_EQ_31_207_THEN_NOT_rg_res_1_ETC___d1233 =
	     IF_rg_index_192_EQ_31_207_THEN_NOT_rg_res_196__ETC___d1211 ?
	       { IF_rg_index_192_EQ_31_207_OR_rg_res_196_BIT_60_ETC___d1216 ==
		 60'd0 ||
		 ((rg_index == 5'd31) ?
		    rg_res[60] :
		    rg_res[60] || rg_b == 60'd0),
		 IF_IF_rg_index_192_EQ_31_207_OR_rg_res_196_BIT_ETC___d1230 } :
	       IF_rg_index_192_EQ_31_207_THEN_rg_res_196_ELSE_ETC___d1232 ;
  assign IF_NOT_fpu_madd_fState_S3_first__933_BITS_9_TO_ETC___d2207 =
	     (!fpu_madd_fState_S3_first__933_BITS_9_TO_0_937__ETC___d1938 ||
	      fpu_madd_fState_S3_first__933_BITS_9_TO_0_937__ETC___d1940) ?
	       fpu_madd_fState_S3_D_OUT[51] :
	       fpu_madd_fState_S3_first__933_BITS_51_TO_47_93_ETC___d2205[4] ;
  assign IF_NOT_fpu_madd_fState_S3_first__933_BITS_9_TO_ETC___d2210 =
	     (!fpu_madd_fState_S3_first__933_BITS_9_TO_0_937__ETC___d1938 ||
	      fpu_madd_fState_S3_first__933_BITS_9_TO_0_937__ETC___d1940) ?
	       fpu_madd_fState_S3_D_OUT[50] :
	       fpu_madd_fState_S3_first__933_BITS_51_TO_47_93_ETC___d2205[3] ;
  assign IF_NOT_fpu_madd_fState_S4_first__250_BIT_66_25_ETC___d2293 =
	     { NOT_fpu_madd_fState_S4_first__250_BIT_66_256_2_ETC___d2283 ?
		 IF_fpu_madd_fState_S4_first__250_BITS_32_TO_25_ETC___d2262 -
		 IF_fpu_madd_fState_S4_first__250_BITS_64_TO_57_ETC___d2267 :
		 IF_fpu_madd_fState_S4_first__250_BITS_64_TO_57_ETC___d2267 -
		 IF_fpu_madd_fState_S4_first__250_BITS_32_TO_25_ETC___d2262,
	       x__h84532,
	       x__h84536 } ;
  assign IF_NOT_fpu_madd_fState_S4_first__250_BIT_66_25_ETC___d2294 =
	     { NOT_fpu_madd_fState_S4_first__250_BIT_66_256_2_ETC___d2283 ?
		 fpu_madd_fState_S4_D_OUT[33] :
		 fpu_madd_fState_S4_D_OUT[65],
	       NOT_fpu_madd_fState_S4_first__250_BIT_66_256_2_ETC___d2283 ?
		 IF_fpu_madd_fState_S4_first__250_BITS_32_TO_25_ETC___d2262 :
		 IF_fpu_madd_fState_S4_first__250_BITS_64_TO_57_ETC___d2267,
	       IF_NOT_fpu_madd_fState_S4_first__250_BIT_66_25_ETC___d2293 } ;
  assign IF_fNext_28D_OUT_BIT_57_THEN_fNext_28_first___ETC__q39 =
	     fNext_28_D_OUT[57] ?
	       fNext_28_first__76_BITS_86_TO_58_78_PLUS_NEG_I_ETC___d481 -
	       29'd1 :
	       fNext_28_first__76_BITS_86_TO_58_78_PLUS_NEG_I_ETC___d481 ;
  assign IF_fpu_div_fOperands_S0_first__95_BITS_33_TO_2_ETC___d680 =
	     (fpu_div_fOperands_S0_D_OUT[33:26] == 8'd0 &&
	      fpu_div_fOperands_S0_D_OUT[25:3] == 23'd0 ||
	      fpu_div_fOperands_S0_first__95_BITS_65_TO_58_9_ETC___d659) ?
	       !fpu_div_fOperands_S0_first__95_BIT_66_61_EQ_fp_ETC___d663 :
	       CASE_fpu_div_fOperands_S0D_OUT_BITS_2_TO_0_0__ETC__q9 ;
  assign IF_fpu_div_fOperands_S0_first__95_BITS_33_TO_2_ETC___d691 =
	     (fpu_div_fOperands_S0_D_OUT[33:26] == 8'd0 &&
	      fpu_div_fOperands_S0_D_OUT[25:3] == 23'd0 ||
	      fpu_div_fOperands_S0_D_OUT[65:58] == 8'd255 &&
	      fpu_div_fOperands_S0_D_OUT[57:35] == 23'd0) ?
	       8'd255 :
	       ((fpu_div_fOperands_S0_D_OUT[65:58] == 8'd0 &&
		 fpu_div_fOperands_S0_D_OUT[57:35] == 23'd0 ||
		 fpu_div_fOperands_S0_D_OUT[33:26] == 8'd255 &&
		 fpu_div_fOperands_S0_D_OUT[25:3] == 23'd0 ||
		 IF_fpu_div_fOperands_S0_first__95_BITS_65_TO_5_ETC___d626) ?
		  8'd0 :
		  _theResult___fst_exp__h19396) ;
  assign IF_fpu_div_fOperands_S0_first__95_BITS_33_TO_2_ETC___d708 =
	     (fpu_div_fOperands_S0_D_OUT[33:26] == 8'd0 &&
	      fpu_div_fOperands_S0_D_OUT[25:3] == 23'd0 ||
	      fpu_div_fOperands_S0_first__95_BITS_65_TO_58_9_ETC___d659) ?
	       23'd0 :
	       (IF_fpu_div_fOperands_S0_first__95_BITS_65_TO_5_ETC___d626 ?
		  _theResult___fst_sfd__h19683 :
		  _theResult___fst_sfd__h19397) ;
  assign IF_fpu_div_fOperands_S0_first__95_BITS_33_TO_2_ETC___d713 =
	     (fpu_div_fOperands_S0_D_OUT[33:26] == 8'd255 &&
	      fpu_div_fOperands_S0_D_OUT[25:3] != 23'd0 &&
	      !fpu_div_fOperands_S0_D_OUT[25]) ?
	       { fpu_div_fOperands_S0_D_OUT[34:26], sfd__h19069 } :
	       ((fpu_div_fOperands_S0_D_OUT[65:58] == 8'd255 &&
		 fpu_div_fOperands_S0_D_OUT[57]) ?
		  fpu_div_fOperands_S0_D_OUT[66:35] :
		  ((fpu_div_fOperands_S0_D_OUT[33:26] == 8'd255 &&
		    fpu_div_fOperands_S0_D_OUT[25]) ?
		     fpu_div_fOperands_S0_D_OUT[34:3] :
		     NOT_fpu_div_fOperands_S0_first__95_BITS_65_TO__ETC___d710)) ;
  assign IF_fpu_div_fOperands_S0_first__95_BITS_65_TO_5_ETC___d625 =
	     (((fpu_div_fOperands_S0_D_OUT[65:58] == 8'd0) ?
		 10'd898 :
		 { {2{fpu_div_fOperands_S0D_OUT_BITS_65_TO_58_MINUS_ETC__q7[7]}},
		   fpu_div_fOperands_S0D_OUT_BITS_65_TO_58_MINUS_ETC__q7 }) -
	      { 5'd0, b__h11175 }) -
	     (((fpu_div_fOperands_S0_D_OUT[33:26] == 8'd0) ?
		 10'd898 :
		 { {2{fpu_div_fOperands_S0D_OUT_BITS_33_TO_26_MINUS_ETC__q8[7]}},
		   fpu_div_fOperands_S0D_OUT_BITS_33_TO_26_MINUS_ETC__q8 }) -
	      { 5'd0, b__h15091 }) ;
  assign IF_fpu_div_fOperands_S0_first__95_BITS_65_TO_5_ETC___d626 =
	     (IF_fpu_div_fOperands_S0_first__95_BITS_65_TO_5_ETC___d625 ^
	      10'h200) <=
	     10'd640 ;
  assign IF_fpu_div_fOperands_S0_first__95_BITS_65_TO_5_ETC___d628 =
	     (IF_fpu_div_fOperands_S0_first__95_BITS_65_TO_5_ETC___d625 ^
	      10'h200) <
	     10'd361 ;
  assign IF_fpu_div_fOperands_S0_first__95_BITS_65_TO_5_ETC___d763 =
	     (IF_fpu_div_fOperands_S0_first__95_BITS_65_TO_5_ETC___d625 ^
	      10'h200) <
	     10'd386 ;
  assign IF_fpu_div_fState_S3_first__38_BITS_59_TO_52_3_ETC___d1057 =
	     ((fpu_div_fState_S3_D_OUT[59:52] == 8'd255) ?
		{ fpu_div_fState_S3_D_OUT[68:67],
		  fpu_div_fState_S3_D_OUT[28:27] != 2'b0 ||
		  fpu_div_fState_S3_D_OUT[66],
		  fpu_div_fState_S3_D_OUT[65],
		  fpu_div_fState_S3_D_OUT[28:27] != 2'b0 ||
		  fpu_div_fState_S3_D_OUT[64] } :
		fpu_div_fState_S3_D_OUT[68:64]) |
	     { 2'd0,
	       sfdin__h27178[28] &&
	       IF_IF_fpu_div_fState_S3_first__38_BITS_59_TO_5_ETC___d895 ==
	       9'd127,
	       _theResult___fst_exp__h31975 == 8'd0 && guard__h27006 != 2'd0,
	       sfdin__h27178[28] &&
	       IF_IF_fpu_div_fState_S3_first__38_BITS_59_TO_5_ETC___d895 ==
	       9'd127 } ;
  assign IF_fpu_div_fState_S3_first__38_BITS_59_TO_52_3_ETC___d872 =
	     (fpu_div_fState_S3_D_OUT[59:52] == 8'd255) ?
	       fpu_div_fState_S3_D_OUT[28:27] == 2'b0 &&
	       !fpu_div_fState_S3_D_OUT[101] :
	       !fpu_div_fState_S3_D_OUT[101] ;
  assign IF_fpu_div_fState_S4_first__078_BITS_32_TO_25__ETC___d1112 =
	     (fpu_div_fState_S4_D_OUT[32:25] == 8'd0 &&
	      sfd__h32613[24:23] == 2'b01) ?
	       8'd1 :
	       fpu_div_fState_S4_D_OUT[32:25] ;
  assign IF_fpu_madd_fOperand_S0_first__769_BITS_65_TO__ETC___d1877 =
	     (fpu_madd_fOperand_S0_first__769_BITS_65_TO_58__ETC___d1870 ||
	      IF_fpu_madd_fOperand_S0_first__769_BIT_99_770__ETC___d1871 &&
	      !fpu_madd_fOperand_S0_first__769_BIT_99_770_AND_ETC___d1821) ?
	       31'h7FC00000 :
	       IF_IF_fpu_madd_fOperand_S0_first__769_BIT_99_7_ETC___d1876 ;
  assign IF_fpu_madd_fOperand_S0_first__769_BITS_65_TO__ETC___d1883 =
	     (fpu_madd_fOperand_S0_D_OUT[65:58] == 8'd255 &&
	      fpu_madd_fOperand_S0_D_OUT[57:35] != 23'd0 &&
	      !fpu_madd_fOperand_S0_D_OUT[57]) ?
	       { fpu_madd_fOperand_S0_D_OUT[66:58], sfd__h67236 } :
	       ((fpu_madd_fOperand_S0_D_OUT[33:26] == 8'd255 &&
		 fpu_madd_fOperand_S0_D_OUT[25:3] != 23'd0 &&
		 !fpu_madd_fOperand_S0_D_OUT[25]) ?
		  { fpu_madd_fOperand_S0_D_OUT[34:26], sfd__h67239 } :
		  IF_IF_fpu_madd_fOperand_S0_first__769_BIT_99_7_ETC___d1881) ;
  assign IF_fpu_madd_fOperand_S0_first__769_BITS_65_TO__ETC___d1906 =
	     { ((fpu_madd_fOperand_S0_D_OUT[65:58] == 8'd0) ?
		  10'd898 :
		  { {2{fpu_madd_fOperand_S0D_OUT_BITS_65_TO_58_MINUS_ETC__q34[7]}},
		    fpu_madd_fOperand_S0D_OUT_BITS_65_TO_58_MINUS_ETC__q34 }) +
	       ((fpu_madd_fOperand_S0_D_OUT[33:26] == 8'd0) ?
		  10'd898 :
		  { {2{fpu_madd_fOperand_S0D_OUT_BITS_33_TO_26_MINUS_ETC__q35[7]}},
		    fpu_madd_fOperand_S0D_OUT_BITS_33_TO_26_MINUS_ETC__q35 }),
	       x__h73954,
	       x__h73966 } ;
  assign IF_fpu_madd_fOperand_S0_first__769_BIT_99_770__ETC___d1828 =
	     x__h65583 == 8'd255 && _theResult___fst_sfd__h65657[22] ||
	     fpu_madd_fOperand_S0_D_OUT[65:58] == 8'd255 &&
	     fpu_madd_fOperand_S0_D_OUT[57] ||
	     fpu_madd_fOperand_S0_D_OUT[33:26] == 8'd255 &&
	     fpu_madd_fOperand_S0_D_OUT[25] ||
	     x__h65583 == 8'd255 && _theResult___fst_sfd__h65657 == 23'd0 ||
	     fpu_madd_fOperand_S0_first__769_BITS_65_TO_58__ETC___d1823 ;
  assign IF_fpu_madd_fOperand_S0_first__769_BIT_99_770__ETC___d1844 =
	     fpu_madd_fOperand_S0_D_OUT[99] ?
	       fpu_madd_fOperand_S0_D_OUT[97:67] :
	       31'd0 ;
  assign IF_fpu_madd_fOperand_S0_first__769_BIT_99_770__ETC___d1871 =
	     x__h65583 == 8'd255 && _theResult___fst_sfd__h65657 == 23'd0 &&
	     (fpu_madd_fOperand_S0_D_OUT[65:58] == 8'd255 &&
	      fpu_madd_fOperand_S0_D_OUT[57:35] == 23'd0 ||
	      fpu_madd_fOperand_S0_D_OUT[33:26] == 8'd255 &&
	      fpu_madd_fOperand_S0_D_OUT[25:3] == 23'd0) ;
  assign IF_fpu_madd_fOperand_S0_first__769_BIT_99_770__ETC___d1894 =
	     x__h65583 == 8'd255 && _theResult___fst_sfd__h65657 != 23'd0 &&
	     !_theResult___fst_sfd__h65657[22] ||
	     fpu_madd_fOperand_S0_D_OUT[65:58] == 8'd255 &&
	     fpu_madd_fOperand_S0_D_OUT[57:35] != 23'd0 &&
	     !fpu_madd_fOperand_S0_D_OUT[57] ||
	     fpu_madd_fOperand_S0_D_OUT[33:26] == 8'd255 &&
	     fpu_madd_fOperand_S0_D_OUT[25:3] != 23'd0 &&
	     !fpu_madd_fOperand_S0_D_OUT[25] ||
	     NOT_IF_fpu_madd_fOperand_S0_first__769_BIT_99__ETC___d1893 ;
  assign IF_fpu_madd_fState_S3_first__933_BITS_9_TO_0_9_ETC___d2220 =
	     fpu_madd_fState_S3_first__933_BITS_9_TO_0_937__ETC___d1940 ?
	       fpu_madd_fProd_S3_D_OUT != 48'd0 ||
	       fpu_madd_fState_S3_D_OUT[48] :
	       fpu_madd_fState_S3_first__933_BITS_51_TO_47_93_ETC___d2205[1] ;
  assign IF_fpu_madd_fState_S3_first__933_BITS_9_TO_0_9_ETC___d2225 =
	     fpu_madd_fState_S3_first__933_BITS_9_TO_0_937__ETC___d1940 ?
	       fpu_madd_fProd_S3_D_OUT != 48'd0 ||
	       fpu_madd_fState_S3_D_OUT[47] :
	       fpu_madd_fState_S3_first__933_BITS_51_TO_47_93_ETC___d2205[0] ;
  assign IF_fpu_madd_fState_S3_first__933_BITS_9_TO_0_9_ETC___d2240 =
	     fpu_madd_fState_S3_first__933_BITS_9_TO_0_937__ETC___d1938 ?
	       (fpu_madd_fState_S3_first__933_BITS_9_TO_0_937__ETC___d1940 ?
		  31'd0 :
		  IF_IF_898_MINUS_fpu_madd_fState_S3_first__933__ETC___d2238) :
	       31'h7F7FFFFF ;
  assign IF_fpu_madd_fState_S3_first__933_BIT_84_935_TH_ETC___d2229 =
	     fpu_madd_fState_S3_D_OUT[84] ?
	       fpu_madd_fState_S3_D_OUT[51:47] :
	       { IF_NOT_fpu_madd_fState_S3_first__933_BITS_9_TO_ETC___d2207,
		 IF_NOT_fpu_madd_fState_S3_first__933_BITS_9_TO_ETC___d2210,
		 NOT_fpu_madd_fState_S3_first__933_BITS_9_TO_0__ETC___d2227 } ;
  assign IF_fpu_madd_fState_S4_first__250_BITS_32_TO_25_ETC___d2262 =
	     (fpu_madd_fState_S4_D_OUT[32:25] == 8'd0) ?
	       10'd898 :
	       { {2{fpu_madd_fState_S4D_OUT_BITS_32_TO_25_MINUS_127__q25[7]}},
		 fpu_madd_fState_S4D_OUT_BITS_32_TO_25_MINUS_127__q25 } ;
  assign IF_fpu_madd_fState_S4_first__250_BITS_64_TO_57_ETC___d2267 =
	     (fpu_madd_fState_S4_D_OUT[64:57] == 8'd0) ?
	       10'd898 :
	       { {2{fpu_madd_fState_S4D_OUT_BITS_64_TO_57_MINUS_127__q26[7]}},
		 fpu_madd_fState_S4D_OUT_BITS_64_TO_57_MINUS_127__q26 } ;
  assign IF_fpu_madd_fState_S7_first__339_BITS_65_TO_56_ETC___d2354 =
	     (value__h90432[7:0] == 8'd0) ?
	       9'd386 :
	       { value0432_BITS_7_TO_0_MINUS_127__q27[7],
		 value0432_BITS_7_TO_0_MINUS_127__q27 } ;
  assign IF_fpu_madd_fState_S7_first__339_BITS_65_TO_56_ETC___d2473 =
	     IF_fpu_madd_fState_S7_first__339_BITS_65_TO_56_ETC___d2354 -
	     9'd386 ;
  assign IF_fpu_madd_fState_S8_first__530_BITS_33_TO_26_ETC___d2556 =
	     (fpu_madd_fState_S8_D_OUT[33:26] == 8'd0 &&
	      sfd__h91157[24:23] == 2'b01) ?
	       8'd1 :
	       fpu_madd_fState_S8_D_OUT[33:26] ;
  assign IF_fpu_madd_fState_S8_first__530_BITS_33_TO_26_ETC___d2581 =
	     (fpu_madd_fState_S8_D_OUT[33:26] == 8'd255) ?
	       fpu_madd_fState_S8_D_OUT[33:26] :
	       _theResult___fst_exp__h91533 ;
  assign IF_fpu_madd_fState_S8_first__530_BIT_35_533_AN_ETC___d2630 =
	     (fpu_madd_fState_S8_D_OUT[35] &&
	      IF_fpu_madd_fState_S8_first__530_BITS_33_TO_26_ETC___d2581 ==
	      8'd0 &&
	      ((fpu_madd_fState_S8_D_OUT[33:26] == 8'd255) ?
		 fpu_madd_fState_S8_D_OUT[25:3] :
		 _theResult___fst_sfd__h91534) ==
	      23'd0 &&
	      !fpu_madd_fState_S8_first__530_BITS_43_TO_39_60_ETC___d2613[0] &&
	      fpu_madd_fState_S8_D_OUT[0]) ?
	       fpu_madd_fState_S8_D_OUT[38:36] == 3'd3 :
	       ((fpu_madd_fState_S8_D_OUT[33:26] == 8'd255) ?
		  fpu_madd_fState_S8_D_OUT[34] :
		  CASE_fpu_madd_fState_S8D_OUT_BITS_38_TO_36_0__ETC__q33) ;
  assign IF_fpu_madd_fState_S8_first__530_BIT_35_533_AN_ETC___d2651 =
	     { IF_fpu_madd_fState_S8_first__530_BIT_35_533_AN_ETC___d2630,
	       (fpu_madd_fState_S8_D_OUT[33:26] == 8'd255) ?
		 fpu_madd_fState_S8_D_OUT[33:3] :
		 CASE_fpu_madd_fState_S8D_OUT_BITS_38_TO_36_0__ETC__q38,
	       fpu_madd_fState_S8_first__530_BITS_43_TO_39_60_ETC___d2613 } ;
  assign IF_fpu_sqr_fOperand_S0_first__262_BITS_33_TO_2_ETC___d1338 =
	     (fpu_sqr_fOperand_S0_D_OUT[33:26] == 8'd0) ?
	       (fpu_sqr_fOperand_S0_D_OUT[25] ?
		  5'd2 :
		  (fpu_sqr_fOperand_S0_D_OUT[24] ?
		     5'd3 :
		     (fpu_sqr_fOperand_S0_D_OUT[23] ?
			5'd4 :
			(fpu_sqr_fOperand_S0_D_OUT[22] ?
			   5'd5 :
			   (fpu_sqr_fOperand_S0_D_OUT[21] ?
			      5'd6 :
			      (fpu_sqr_fOperand_S0_D_OUT[20] ?
				 5'd7 :
				 (fpu_sqr_fOperand_S0_D_OUT[19] ?
				    5'd8 :
				    (fpu_sqr_fOperand_S0_D_OUT[18] ?
				       5'd9 :
				       (fpu_sqr_fOperand_S0_D_OUT[17] ?
					  5'd10 :
					  (fpu_sqr_fOperand_S0_D_OUT[16] ?
					     5'd11 :
					     (fpu_sqr_fOperand_S0_D_OUT[15] ?
						5'd12 :
						(fpu_sqr_fOperand_S0_D_OUT[14] ?
						   5'd13 :
						   (fpu_sqr_fOperand_S0_D_OUT[13] ?
						      5'd14 :
						      (fpu_sqr_fOperand_S0_D_OUT[12] ?
							 5'd15 :
							 (fpu_sqr_fOperand_S0_D_OUT[11] ?
							    5'd16 :
							    (fpu_sqr_fOperand_S0_D_OUT[10] ?
							       5'd17 :
							       (fpu_sqr_fOperand_S0_D_OUT[9] ?
								  5'd18 :
								  (fpu_sqr_fOperand_S0_D_OUT[8] ?
								     5'd19 :
								     (fpu_sqr_fOperand_S0_D_OUT[7] ?
									5'd20 :
									(fpu_sqr_fOperand_S0_D_OUT[6] ?
									   5'd21 :
									   (fpu_sqr_fOperand_S0_D_OUT[5] ?
									      5'd22 :
									      (fpu_sqr_fOperand_S0_D_OUT[4] ?
										 5'd23 :
										 (fpu_sqr_fOperand_S0_D_OUT[3] ?
										    5'd24 :
										    5'd30))))))))))))))))))))))) :
	       5'd1 ;
  assign IF_fpu_sqr_fOperand_S0_first__262_BITS_33_TO_2_ETC___d1340 =
	     ((fpu_sqr_fOperand_S0_D_OUT[33:26] == 8'd0) ?
		10'd898 :
		{ {2{fpu_sqr_fOperand_S0D_OUT_BITS_33_TO_26_MINUS_127__q15[7]}},
		  fpu_sqr_fOperand_S0D_OUT_BITS_33_TO_26_MINUS_127__q15 }) -
	     { 5'd0,
	       IF_fpu_sqr_fOperand_S0_first__262_BITS_33_TO_2_ETC___d1338 } ;
  assign IF_fpu_sqr_fOperand_S0_first__262_BITS_33_TO_2_ETC__q16 =
	     IF_fpu_sqr_fOperand_S0_first__262_BITS_33_TO_2_ETC___d1340[9:1] ;
  assign IF_fpu_sqr_fState_S1_first__364_BIT_29_370_THE_ETC___d1430 =
	     (fpu_sqr_fState_S1_D_OUT[29] ?
		6'd0 :
		(fpu_sqr_fState_S1_D_OUT[28] ?
		   6'd1 :
		   (fpu_sqr_fState_S1_D_OUT[27] ?
		      6'd2 :
		      (fpu_sqr_fState_S1_D_OUT[26] ?
			 6'd3 :
			 (fpu_sqr_fState_S1_D_OUT[25] ?
			    6'd4 :
			    (fpu_sqr_fState_S1_D_OUT[24] ?
			       6'd5 :
			       (fpu_sqr_fState_S1_D_OUT[23] ?
				  6'd6 :
				  (fpu_sqr_fState_S1_D_OUT[22] ?
				     6'd7 :
				     (fpu_sqr_fState_S1_D_OUT[21] ?
					6'd8 :
					(fpu_sqr_fState_S1_D_OUT[20] ?
					   6'd9 :
					   (fpu_sqr_fState_S1_D_OUT[19] ?
					      6'd10 :
					      (fpu_sqr_fState_S1_D_OUT[18] ?
						 6'd11 :
						 (fpu_sqr_fState_S1_D_OUT[17] ?
						    6'd12 :
						    (fpu_sqr_fState_S1_D_OUT[16] ?
						       6'd13 :
						       (fpu_sqr_fState_S1_D_OUT[15] ?
							  6'd14 :
							  (fpu_sqr_fState_S1_D_OUT[14] ?
							     6'd15 :
							     (fpu_sqr_fState_S1_D_OUT[13] ?
								6'd16 :
								(fpu_sqr_fState_S1_D_OUT[12] ?
								   6'd17 :
								   (fpu_sqr_fState_S1_D_OUT[11] ?
								      6'd18 :
								      (fpu_sqr_fState_S1_D_OUT[10] ?
									 6'd19 :
									 (fpu_sqr_fState_S1_D_OUT[9] ?
									    6'd20 :
									    (fpu_sqr_fState_S1_D_OUT[8] ?
									       6'd21 :
									       (fpu_sqr_fState_S1_D_OUT[7] ?
										  6'd22 :
										  (fpu_sqr_fState_S1_D_OUT[6] ?
										     6'd23 :
										     (fpu_sqr_fState_S1_D_OUT[5] ?
											6'd24 :
											(fpu_sqr_fState_S1_D_OUT[4] ?
											   6'd25 :
											   (fpu_sqr_fState_S1_D_OUT[3] ?
											      6'd26 :
											      (fpu_sqr_fState_S1_D_OUT[2] ?
												 6'd27 :
												 (fpu_sqr_fState_S1_D_OUT[1] ?
												    6'd28 :
												    (fpu_sqr_fState_S1_D_OUT[0] ?
												       6'd29 :
												       6'd60)))))))))))))))))))))))))))))) -
	     6'd1 ;
  assign IF_fpu_sqr_fState_S3_first__455_BITS_61_TO_54__ETC___d1468 =
	     (fpu_sqr_fState_S3_D_OUT[61:54] == 8'd0) ?
	       9'd386 :
	       { fpu_sqr_fState_S3D_OUT_BITS_61_TO_54_MINUS_127__q17[7],
		 fpu_sqr_fState_S3D_OUT_BITS_61_TO_54_MINUS_127__q17 } ;
  assign IF_fpu_sqr_fState_S3_first__455_BITS_61_TO_54__ETC___d1599 =
	     IF_fpu_sqr_fState_S3_first__455_BITS_61_TO_54__ETC___d1468 -
	     9'd386 ;
  assign IF_fpu_sqr_fState_S3_first__455_BIT_103_457_TH_ETC___d1638 =
	     fpu_sqr_fState_S3_D_OUT[103] ?
	       fpu_sqr_fState_S3_D_OUT[68:66] :
	       { fpu_sqr_fState_S3_D_OUT[30] &&
		 IF_fpu_sqr_fState_S3_first__455_BITS_61_TO_54__ETC___d1468 ==
		 9'd127,
		 _theResult___fst_exp__h64021 == 8'd0 &&
		 guard__h58912 != 2'd0,
		 fpu_sqr_fState_S3_D_OUT[30] &&
		 IF_fpu_sqr_fState_S3_first__455_BITS_61_TO_54__ETC___d1468 ==
		 9'd127 } ;
  assign IF_fpu_sqr_fState_S3_first__455_BIT_30_463_AND_ETC___d1645 =
	     (fpu_sqr_fState_S3_D_OUT[30] &&
	      IF_fpu_sqr_fState_S3_first__455_BITS_61_TO_54__ETC___d1468 ==
	      9'd127) ?
	       31'h7F7FFFFF :
	       { _theResult___fst_exp__h64018, sfdin__h64012[30:8] } ;
  assign IF_fpu_sqr_fState_S3_first__455_BIT_30_463_THE_ETC___d1597 =
	     (fpu_sqr_fState_S3_D_OUT[30] ?
		5'd0 :
		(fpu_sqr_fState_S3_D_OUT[29] ?
		   5'd1 :
		   (fpu_sqr_fState_S3_D_OUT[28] ?
		      5'd2 :
		      (fpu_sqr_fState_S3_D_OUT[27] ?
			 5'd3 :
			 (fpu_sqr_fState_S3_D_OUT[26] ?
			    5'd4 :
			    (fpu_sqr_fState_S3_D_OUT[25] ?
			       5'd5 :
			       (fpu_sqr_fState_S3_D_OUT[24] ?
				  5'd6 :
				  (fpu_sqr_fState_S3_D_OUT[23] ?
				     5'd7 :
				     (fpu_sqr_fState_S3_D_OUT[22] ?
					5'd8 :
					(fpu_sqr_fState_S3_D_OUT[21] ?
					   5'd9 :
					   (fpu_sqr_fState_S3_D_OUT[20] ?
					      5'd10 :
					      (fpu_sqr_fState_S3_D_OUT[19] ?
						 5'd11 :
						 (fpu_sqr_fState_S3_D_OUT[18] ?
						    5'd12 :
						    (fpu_sqr_fState_S3_D_OUT[17] ?
						       5'd13 :
						       (fpu_sqr_fState_S3_D_OUT[16] ?
							  5'd14 :
							  (fpu_sqr_fState_S3_D_OUT[15] ?
							     5'd15 :
							     (fpu_sqr_fState_S3_D_OUT[14] ?
								5'd16 :
								(fpu_sqr_fState_S3_D_OUT[13] ?
								   5'd17 :
								   (fpu_sqr_fState_S3_D_OUT[12] ?
								      5'd18 :
								      (fpu_sqr_fState_S3_D_OUT[11] ?
									 5'd19 :
									 (fpu_sqr_fState_S3_D_OUT[10] ?
									    5'd20 :
									    (fpu_sqr_fState_S3_D_OUT[9] ?
									       5'd21 :
									       (fpu_sqr_fState_S3_D_OUT[8] ?
										  5'd22 :
										  (fpu_sqr_fState_S3_D_OUT[7] ?
										     5'd23 :
										     (fpu_sqr_fState_S3_D_OUT[6] ?
											5'd24 :
											(fpu_sqr_fState_S3_D_OUT[5] ?
											   5'd25 :
											   (fpu_sqr_fState_S3_D_OUT[4] ?
											      5'd26 :
											      (fpu_sqr_fState_S3_D_OUT[3] ?
												 5'd27 :
												 (fpu_sqr_fState_S3_D_OUT[2] ?
												    5'd28 :
												    (fpu_sqr_fState_S3_D_OUT[1] ?
												       5'd29 :
												       (fpu_sqr_fState_S3_D_OUT[0] ?
													  5'd30 :
													  5'd31))))))))))))))))))))))))))))))) -
	     5'd1 ;
  assign IF_fpu_sqr_fState_S4_first__653_BITS_32_TO_25__ETC___d1687 =
	     (fpu_sqr_fState_S4_D_OUT[32:25] == 8'd0 &&
	      sfd__h64676[24:23] == 2'b01) ?
	       8'd1 :
	       fpu_sqr_fState_S4_D_OUT[32:25] ;
  assign IF_rg_index_192_EQ_31_207_OR_rg_res_196_BIT_60_ETC___d1216 =
	     (rg_index == 5'd31 || rg_res[60] || rg_b == 60'd0) ?
	       rg_b :
	       b__h33960 ;
  assign IF_rg_index_192_EQ_31_207_OR_rg_res_196_BIT_60_ETC___d1227 =
	     (rg_index == 5'd31 || rg_res[60] || rg_b == 60'd0) ?
	       rg_r :
	       _theResult___snd_snd__h34001 ;
  assign IF_rg_index_192_EQ_31_207_OR_rg_res_196_BIT_60_ETC___d1239 =
	     (rg_index == 5'd31 || rg_res[60] || rg_b == 60'd0 ||
	      rg_s_220_ULT_rg_r_203_PLUS_rg_b_198_221___d1222) ?
	       rg_s :
	       s__h34010 ;
  assign IF_rg_index_192_EQ_31_207_OR_rg_res_196_BIT_60_ETC___d1241 =
	     IF_rg_index_192_EQ_31_207_OR_rg_res_196_BIT_60_ETC___d1239 <
	     sum__h34071 ;
  assign IF_rg_index_192_EQ_31_207_THEN_NOT_rg_res_196__ETC___d1211 =
	     (rg_index == 5'd31) ?
	       !rg_res[60] :
	       rg_b != 60'd0 && !rg_res[60] ;
  assign IF_rg_index_192_EQ_31_207_THEN_rg_res_196_ELSE_ETC___d1232 =
	     (rg_index == 5'd31) ?
	       rg_res :
	       { rg_res[60] || rg_b == 60'd0,
		 IF_rg_res_196_BIT_60_197_THEN_rg_res_196_BITS__ETC___d1205 } ;
  assign IF_rg_res_196_BIT_60_197_THEN_rg_res_196_BITS__ETC___d1205 =
	     rg_res[60] ? rg_res[59:0] : rg_r ;
  assign IF_sfdin0494_BIT_4_THEN_2_ELSE_0__q29 =
	     sfdin__h90494[4] ? 2'd2 : 2'd0 ;
  assign IF_sfdin1966_BIT_5_THEN_2_ELSE_0__q12 =
	     sfdin__h31966[5] ? 2'd2 : 2'd0 ;
  assign IF_sfdin3543_BIT_24_THEN_2_ELSE_0__q24 =
	     sfdin__h83543[24] ? 2'd2 : 2'd0 ;
  assign IF_sfdin4012_BIT_7_THEN_2_ELSE_0__q19 =
	     sfdin__h64012[7] ? 2'd2 : 2'd0 ;
  assign NOT_IF_fpu_madd_fOperand_S0_first__769_BIT_99__ETC___d1893 =
	     (x__h65583 != 8'd255 || !_theResult___fst_sfd__h65657[22]) &&
	     (fpu_madd_fOperand_S0_D_OUT[65:58] != 8'd255 ||
	      !fpu_madd_fOperand_S0_D_OUT[57]) &&
	     (fpu_madd_fOperand_S0_D_OUT[33:26] != 8'd255 ||
	      !fpu_madd_fOperand_S0_D_OUT[25]) &&
	     (fpu_madd_fOperand_S0_first__769_BITS_65_TO_58__ETC___d1870 ||
	      IF_fpu_madd_fOperand_S0_first__769_BIT_99_770__ETC___d1871 &&
	      !fpu_madd_fOperand_S0_first__769_BIT_99_770_AND_ETC___d1821) ;
  assign NOT_fpu_div_fOperands_S0_first__95_BITS_33_TO__ETC___d745 =
	     (fpu_div_fOperands_S0_D_OUT[33:26] != 8'd0 ||
	      fpu_div_fOperands_S0_D_OUT[25:3] != 23'd0) &&
	     (fpu_div_fOperands_S0_D_OUT[65:58] != 8'd255 ||
	      fpu_div_fOperands_S0_D_OUT[57:35] != 23'd0) &&
	     (fpu_div_fOperands_S0_D_OUT[65:58] != 8'd0 ||
	      fpu_div_fOperands_S0_D_OUT[57:35] != 23'd0) &&
	     (fpu_div_fOperands_S0_D_OUT[33:26] != 8'd255 ||
	      fpu_div_fOperands_S0_D_OUT[25:3] != 23'd0) &&
	     IF_fpu_div_fOperands_S0_first__95_BITS_65_TO_5_ETC___d626 &&
	     IF_fpu_div_fOperands_S0_first__95_BITS_65_TO_5_ETC___d628 ;
  assign NOT_fpu_div_fOperands_S0_first__95_BITS_33_TO__ETC___d752 =
	     (fpu_div_fOperands_S0_D_OUT[33:26] != 8'd0 ||
	      fpu_div_fOperands_S0_D_OUT[25:3] != 23'd0) &&
	     (fpu_div_fOperands_S0_D_OUT[65:58] != 8'd255 ||
	      fpu_div_fOperands_S0_D_OUT[57:35] != 23'd0) &&
	     (fpu_div_fOperands_S0_D_OUT[65:58] != 8'd0 ||
	      fpu_div_fOperands_S0_D_OUT[57:35] != 23'd0) &&
	     (fpu_div_fOperands_S0_D_OUT[33:26] != 8'd255 ||
	      fpu_div_fOperands_S0_D_OUT[25:3] != 23'd0) &&
	     (!IF_fpu_div_fOperands_S0_first__95_BITS_65_TO_5_ETC___d626 ||
	      IF_fpu_div_fOperands_S0_first__95_BITS_65_TO_5_ETC___d628) ;
  assign NOT_fpu_div_fOperands_S0_first__95_BITS_65_TO__ETC___d658 =
	     (fpu_div_fOperands_S0_D_OUT[65:58] != 8'd255 ||
	      fpu_div_fOperands_S0_D_OUT[57:35] != 23'd0 ||
	      fpu_div_fOperands_S0_D_OUT[33:26] != 8'd255 ||
	      fpu_div_fOperands_S0_D_OUT[25:3] != 23'd0) &&
	     (fpu_div_fOperands_S0_D_OUT[65:58] != 8'd0 ||
	      fpu_div_fOperands_S0_D_OUT[57:35] != 23'd0 ||
	      fpu_div_fOperands_S0_D_OUT[33:26] != 8'd0 ||
	      fpu_div_fOperands_S0_D_OUT[25:3] != 23'd0) ;
  assign NOT_fpu_div_fOperands_S0_first__95_BITS_65_TO__ETC___d710 =
	     { NOT_fpu_div_fOperands_S0_first__95_BITS_65_TO__ETC___d658 &&
	       IF_fpu_div_fOperands_S0_first__95_BITS_33_TO_2_ETC___d680,
	       IF_fpu_div_fOperands_S0_first__95_BITS_33_TO_2_ETC___d691,
	       fpu_div_fOperands_S0_first__95_BITS_65_TO_58_9_ETC___d694 ?
		 23'd4194304 :
		 IF_fpu_div_fOperands_S0_first__95_BITS_33_TO_2_ETC___d708 } ;
  assign NOT_fpu_madd_fOperand_S0_first__769_BITS_65_TO_ETC___d1867 =
	     (fpu_madd_fOperand_S0_D_OUT[65:58] != 8'd255 ||
	      fpu_madd_fOperand_S0_D_OUT[57:35] != 23'd0 ||
	      fpu_madd_fOperand_S0_D_OUT[33:26] != 8'd0 ||
	      fpu_madd_fOperand_S0_D_OUT[25:3] != 23'd0) &&
	     (fpu_madd_fOperand_S0_D_OUT[65:58] != 8'd0 ||
	      fpu_madd_fOperand_S0_D_OUT[57:35] != 23'd0 ||
	      fpu_madd_fOperand_S0_D_OUT[33:26] != 8'd255 ||
	      fpu_madd_fOperand_S0_D_OUT[25:3] != 23'd0) &&
	     (x__h65583 != 8'd255 || _theResult___fst_sfd__h65657 != 23'd0 ||
	      (fpu_madd_fOperand_S0_D_OUT[65:58] != 8'd255 ||
	       fpu_madd_fOperand_S0_D_OUT[57:35] != 23'd0) &&
	      (fpu_madd_fOperand_S0_D_OUT[33:26] != 8'd255 ||
	       fpu_madd_fOperand_S0_D_OUT[25:3] != 23'd0) ||
	      fpu_madd_fOperand_S0_first__769_BIT_99_770_AND_ETC___d1821) &&
	     IF_IF_fpu_madd_fOperand_S0_first__769_BIT_99_7_ETC___d1866 ;
  assign NOT_fpu_madd_fOperand_S0_first__769_BIT_66_817_ETC___d1820 =
	     fpu_madd_fOperand_S0_D_OUT[66] !=
	     fpu_madd_fOperand_S0_D_OUT[34] ;
  assign NOT_fpu_madd_fState_S3_first__933_BITS_9_TO_0__ETC___d2214 =
	     !fpu_madd_fState_S3_first__933_BITS_9_TO_0_937__ETC___d1938 ||
	     (fpu_madd_fState_S3_first__933_BITS_9_TO_0_937__ETC___d1940 ?
		fpu_madd_fState_S3_D_OUT[49] :
		fpu_madd_fState_S3_first__933_BITS_51_TO_47_93_ETC___d2205[2]) ;
  assign NOT_fpu_madd_fState_S3_first__933_BITS_9_TO_0__ETC___d2227 =
	     { NOT_fpu_madd_fState_S3_first__933_BITS_9_TO_0__ETC___d2214,
	       fpu_madd_fState_S3_first__933_BITS_9_TO_0_937__ETC___d1938 ?
		 IF_fpu_madd_fState_S3_first__933_BITS_9_TO_0_9_ETC___d2220 :
		 fpu_madd_fState_S3_D_OUT[48],
	       !fpu_madd_fState_S3_first__933_BITS_9_TO_0_937__ETC___d1938 ||
	       IF_fpu_madd_fState_S3_first__933_BITS_9_TO_0_9_ETC___d2225 } ;
  assign NOT_fpu_madd_fState_S4_first__250_BIT_66_256_2_ETC___d2283 =
	     !fpu_madd_fState_S4_D_OUT[66] ||
	     (IF_fpu_madd_fState_S4_first__250_BITS_32_TO_25_ETC___d2262 ^
	      10'h200) >
	     (IF_fpu_madd_fState_S4_first__250_BITS_64_TO_57_ETC___d2267 ^
	      10'h200) ||
	     IF_fpu_madd_fState_S4_first__250_BITS_32_TO_25_ETC___d2262 ==
	     IF_fpu_madd_fState_S4_first__250_BITS_64_TO_57_ETC___d2267 &&
	     sfdBC__h84165 > sfdA__h84164 ;
  assign _0_CONCAT_IF_IF_898_MINUS_fpu_madd_fState_S3_fi_ETC___d2167 =
	     ({ 3'd0,
		IF_IF_898_MINUS_fpu_madd_fState_S3_first__933__ETC___d2164 } ^
	      9'h100) <=
	     (IF_IF_898_MINUS_fpu_madd_fState_S3_first__933__ETC___d2166 ^
	      9'h100) ;
  assign _0_CONCAT_IF_IF_fpu_div_fState_S3_first__38_BIT_ETC___d1019 =
	     ({ 4'd0,
		IF_IF_fpu_div_fState_S3_first__38_BITS_59_TO_5_ETC___d1016 } ^
	      9'h100) <=
	     (IF_IF_fpu_div_fState_S3_first__38_BITS_59_TO_5_ETC___d1018 ^
	      9'h100) ;
  assign _0_CONCAT_IF_IF_fpu_madd_fState_S7_first__339_B_ETC___d2474 =
	     ({ 4'd0,
		IF_IF_fpu_madd_fState_S7_first__339_BIT_67_343_ETC___d2471 } ^
	      9'h100) <=
	     (IF_fpu_madd_fState_S7_first__339_BITS_65_TO_56_ETC___d2473 ^
	      9'h100) ;
  assign _0_CONCAT_IF_fpu_sqr_fState_S3_first__455_BIT_3_ETC___d1600 =
	     ({ 4'd0,
		IF_fpu_sqr_fState_S3_first__455_BIT_30_463_THE_ETC___d1597 } ^
	      9'h100) <=
	     (IF_fpu_sqr_fState_S3_first__455_BITS_61_TO_54__ETC___d1599 ^
	      9'h100) ;
  assign _898_MINUS_fpu_madd_fState_S3_first__933_BITS_9_ETC___d1943 =
	     10'd898 - fpu_madd_fState_S3_D_OUT[9:0] ;
  assign _898_MINUS_fpu_madd_fState_S3_first__933_BITS_9_ETC___d1944 =
	     (_898_MINUS_fpu_madd_fState_S3_first__933_BITS_9_ETC___d1943 ^
	      10'h200) <=
	     10'd512 ;
  assign _theResult____h25900 =
	     (fpu_div_fState_S2_D_OUT[7:0] < 8'd29) ?
	       result__h25945 :
	       result__h26095 ;
  assign _theResult___exp__h32903 =
	     sfd__h32613[24] ?
	       ((fpu_div_fState_S4_D_OUT[32:25] == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h32994) :
	       IF_fpu_div_fState_S4_first__078_BITS_32_TO_25__ETC___d1112 ;
  assign _theResult___exp__h64966 =
	     sfd__h64676[24] ?
	       ((fpu_sqr_fState_S4_D_OUT[32:25] == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h65057) :
	       IF_fpu_sqr_fState_S4_first__653_BITS_32_TO_25__ETC___d1687 ;
  assign _theResult___exp__h91455 =
	     sfd__h91157[24] ?
	       ((fpu_madd_fState_S8_D_OUT[33:26] == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h91540) :
	       IF_fpu_madd_fState_S8_first__530_BITS_33_TO_26_ETC___d2556 ;
  assign _theResult___fst__h24958 =
	     IF_fpu_div_fOperands_S0_first__95_BITS_65_TO_5_ETC___d763 ?
	       value__h25186[7:0] :
	       8'd0 ;
  assign _theResult___fst__h33823 =
	     IF_rg_index_192_EQ_31_207_THEN_NOT_rg_res_196__ETC___d1211 ?
	       _theResult___fst__h33952 :
	       IF_rg_index_192_EQ_31_207_OR_rg_res_196_BIT_60_ETC___d1216 ;
  assign _theResult___fst__h33952 =
	     (IF_rg_index_192_EQ_31_207_OR_rg_res_196_BIT_60_ETC___d1216 ==
	      60'd0) ?
	       IF_rg_index_192_EQ_31_207_OR_rg_res_196_BIT_60_ETC___d1216 :
	       b__h34073 ;
  assign _theResult___fst__h76026 =
	     { fpu_madd_fProd_S3_first__945_SRL_IF_898_MINUS__ETC___d1948[47:1],
	       fpu_madd_fProd_S3_first__945_SRL_IF_898_MINUS__ETC___d1948[0] |
	       sfdlsb__h76024 } ;
  assign _theResult___fst_exp__h31923 =
	     fpu_div_fState_S3_D_OUT[59:52] - 8'd1 ;
  assign _theResult___fst_exp__h31926 =
	     (fpu_div_fState_S3_D_OUT[28:27] == 2'b0) ?
	       _theResult___fst_exp__h31923 :
	       8'd254 ;
  assign _theResult___fst_exp__h31929 =
	     (fpu_div_fState_S3_D_OUT[59:52] == 8'd255) ?
	       _theResult___fst_exp__h31926 :
	       fpu_div_fState_S3_D_OUT[59:52] ;
  assign _theResult___fst_exp__h31972 =
	     sfdin__h27178[28] ?
	       _theResult___fst_exp__h31995 :
	       _theResult___fst_exp__h32059 ;
  assign _theResult___fst_exp__h31975 =
	     (sfdin__h27178[28] &&
	      IF_IF_fpu_div_fState_S3_first__38_BITS_59_TO_5_ETC___d895 ==
	      9'd127) ?
	       8'd254 :
	       _theResult___fst_exp__h31972 ;
  assign _theResult___fst_exp__h31995 =
	     (_theResult___fst_exp__h31929 == 8'd0) ?
	       8'd2 :
	       _theResult___fst_exp__h31929 + 8'd1 ;
  assign _theResult___fst_exp__h32011 =
	     (_theResult___fst_exp__h31929 == 8'd0) ?
	       8'd1 :
	       _theResult___fst_exp__h31929 ;
  assign _theResult___fst_exp__h32050 =
	     _theResult___fst_exp__h31929 -
	     { 3'd0,
	       IF_IF_fpu_div_fState_S3_first__38_BITS_59_TO_5_ETC___d1016 } ;
  assign _theResult___fst_exp__h32056 =
	     (!sfdin__h27178[28] && !sfdin__h27178[27] &&
	      !sfdin__h27178[26] &&
	      !sfdin__h27178[25] &&
	      !sfdin__h27178[24] &&
	      !sfdin__h27178[23] &&
	      !sfdin__h27178[22] &&
	      !sfdin__h27178[21] &&
	      !sfdin__h27178[20] &&
	      !sfdin__h27178[19] &&
	      !sfdin__h27178[18] &&
	      !sfdin__h27178[17] &&
	      !sfdin__h27178[16] &&
	      !sfdin__h27178[15] &&
	      !sfdin__h27178[14] &&
	      !sfdin__h27178[13] &&
	      !sfdin__h27178[12] &&
	      !sfdin__h27178[11] &&
	      !sfdin__h27178[10] &&
	      !sfdin__h27178[9] &&
	      !sfdin__h27178[8] &&
	      !sfdin__h27178[7] &&
	      !sfdin__h27178[6] &&
	      !sfdin__h27178[5] &&
	      !sfdin__h27178[4] &&
	      !sfdin__h27178[3] &&
	      !sfdin__h27178[2] &&
	      !sfdin__h27178[1] &&
	      !sfdin__h27178[0] ||
	      !_0_CONCAT_IF_IF_fpu_div_fState_S3_first__38_BIT_ETC___d1019) ?
	       8'd0 :
	       _theResult___fst_exp__h32050 ;
  assign _theResult___fst_exp__h32059 =
	     (!sfdin__h27178[28] && sfdin__h27178[27]) ?
	       _theResult___fst_exp__h32011 :
	       _theResult___fst_exp__h32056 ;
  assign _theResult___fst_exp__h32984 =
	     (fpu_div_fState_S4_D_OUT[32:25] == 8'd255) ?
	       fpu_div_fState_S4_D_OUT[32:25] :
	       _theResult___fst_exp__h32981 ;
  assign _theResult___fst_exp__h64018 =
	     fpu_sqr_fState_S3_D_OUT[30] ?
	       _theResult___fst_exp__h64041 :
	       _theResult___fst_exp__h64105 ;
  assign _theResult___fst_exp__h64021 =
	     (fpu_sqr_fState_S3_D_OUT[30] &&
	      IF_fpu_sqr_fState_S3_first__455_BITS_61_TO_54__ETC___d1468 ==
	      9'd127) ?
	       8'd254 :
	       _theResult___fst_exp__h64018 ;
  assign _theResult___fst_exp__h64041 =
	     (fpu_sqr_fState_S3_D_OUT[61:54] == 8'd0) ?
	       8'd2 :
	       fpu_sqr_fState_S3_D_OUT[61:54] + 8'd1 ;
  assign _theResult___fst_exp__h64057 =
	     (fpu_sqr_fState_S3_D_OUT[61:54] == 8'd0) ?
	       8'd1 :
	       fpu_sqr_fState_S3_D_OUT[61:54] ;
  assign _theResult___fst_exp__h64096 =
	     fpu_sqr_fState_S3_D_OUT[61:54] -
	     { 3'd0,
	       IF_fpu_sqr_fState_S3_first__455_BIT_30_463_THE_ETC___d1597 } ;
  assign _theResult___fst_exp__h64102 =
	     (!fpu_sqr_fState_S3_D_OUT[30] && !fpu_sqr_fState_S3_D_OUT[29] &&
	      !fpu_sqr_fState_S3_D_OUT[28] &&
	      !fpu_sqr_fState_S3_D_OUT[27] &&
	      !fpu_sqr_fState_S3_D_OUT[26] &&
	      !fpu_sqr_fState_S3_D_OUT[25] &&
	      !fpu_sqr_fState_S3_D_OUT[24] &&
	      !fpu_sqr_fState_S3_D_OUT[23] &&
	      !fpu_sqr_fState_S3_D_OUT[22] &&
	      !fpu_sqr_fState_S3_D_OUT[21] &&
	      !fpu_sqr_fState_S3_D_OUT[20] &&
	      !fpu_sqr_fState_S3_D_OUT[19] &&
	      !fpu_sqr_fState_S3_D_OUT[18] &&
	      !fpu_sqr_fState_S3_D_OUT[17] &&
	      !fpu_sqr_fState_S3_D_OUT[16] &&
	      !fpu_sqr_fState_S3_D_OUT[15] &&
	      !fpu_sqr_fState_S3_D_OUT[14] &&
	      !fpu_sqr_fState_S3_D_OUT[13] &&
	      !fpu_sqr_fState_S3_D_OUT[12] &&
	      !fpu_sqr_fState_S3_D_OUT[11] &&
	      !fpu_sqr_fState_S3_D_OUT[10] &&
	      !fpu_sqr_fState_S3_D_OUT[9] &&
	      !fpu_sqr_fState_S3_D_OUT[8] &&
	      !fpu_sqr_fState_S3_D_OUT[7] &&
	      !fpu_sqr_fState_S3_D_OUT[6] &&
	      !fpu_sqr_fState_S3_D_OUT[5] &&
	      !fpu_sqr_fState_S3_D_OUT[4] &&
	      !fpu_sqr_fState_S3_D_OUT[3] &&
	      !fpu_sqr_fState_S3_D_OUT[2] &&
	      !fpu_sqr_fState_S3_D_OUT[1] &&
	      !fpu_sqr_fState_S3_D_OUT[0] ||
	      !_0_CONCAT_IF_fpu_sqr_fState_S3_first__455_BIT_3_ETC___d1600) ?
	       8'd0 :
	       _theResult___fst_exp__h64096 ;
  assign _theResult___fst_exp__h64105 =
	     (!fpu_sqr_fState_S3_D_OUT[30] && fpu_sqr_fState_S3_D_OUT[29]) ?
	       _theResult___fst_exp__h64057 :
	       _theResult___fst_exp__h64102 ;
  assign _theResult___fst_exp__h65047 =
	     (fpu_sqr_fState_S4_D_OUT[32:25] == 8'd255) ?
	       fpu_sqr_fState_S4_D_OUT[32:25] :
	       _theResult___fst_exp__h65044 ;
  assign _theResult___fst_exp__h83549 =
	     sfdBC__h75325[47] ?
	       _theResult___fst_exp__h83571 :
	       _theResult___fst_exp__h83634 ;
  assign _theResult___fst_exp__h83552 =
	     (sfdBC__h75325[47] &&
	      IF_IF_898_MINUS_fpu_madd_fState_S3_first__933__ETC___d1967 ==
	      9'd127) ?
	       8'd254 :
	       _theResult___fst_exp__h83549 ;
  assign _theResult___fst_exp__h83571 =
	     (din_exp__h83466 == 8'd0) ? 8'd2 : din_exp__h83466 + 8'd1 ;
  assign _theResult___fst_exp__h83586 =
	     (din_exp__h83466 == 8'd0) ? 8'd1 : din_exp__h83466 ;
  assign _theResult___fst_exp__h83625 =
	     din_exp__h83466 -
	     { 2'd0,
	       IF_IF_898_MINUS_fpu_madd_fState_S3_first__933__ETC___d2164 } ;
  assign _theResult___fst_exp__h83631 =
	     (!sfdBC__h75325[47] && !sfdBC__h75325[46] &&
	      !sfdBC__h75325[45] &&
	      !sfdBC__h75325[44] &&
	      !sfdBC__h75325[43] &&
	      !sfdBC__h75325[42] &&
	      !sfdBC__h75325[41] &&
	      !sfdBC__h75325[40] &&
	      !sfdBC__h75325[39] &&
	      !sfdBC__h75325[38] &&
	      !sfdBC__h75325[37] &&
	      !sfdBC__h75325[36] &&
	      !sfdBC__h75325[35] &&
	      !sfdBC__h75325[34] &&
	      !sfdBC__h75325[33] &&
	      !sfdBC__h75325[32] &&
	      !sfdBC__h75325[31] &&
	      !sfdBC__h75325[30] &&
	      !sfdBC__h75325[29] &&
	      !sfdBC__h75325[28] &&
	      !sfdBC__h75325[27] &&
	      !sfdBC__h75325[26] &&
	      !sfdBC__h75325[25] &&
	      !sfdBC__h75325[24] &&
	      !sfdBC__h75325[23] &&
	      !sfdBC__h75325[22] &&
	      !sfdBC__h75325[21] &&
	      !sfdBC__h75325[20] &&
	      !sfdBC__h75325[19] &&
	      !sfdBC__h75325[18] &&
	      !sfdBC__h75325[17] &&
	      !sfdBC__h75325[16] &&
	      !sfdBC__h75325[15] &&
	      !sfdBC__h75325[14] &&
	      !sfdBC__h75325[13] &&
	      !sfdBC__h75325[12] &&
	      !sfdBC__h75325[11] &&
	      !sfdBC__h75325[10] &&
	      !sfdBC__h75325[9] &&
	      !sfdBC__h75325[8] &&
	      !sfdBC__h75325[7] &&
	      !sfdBC__h75325[6] &&
	      !sfdBC__h75325[5] &&
	      !sfdBC__h75325[4] &&
	      !sfdBC__h75325[3] &&
	      !sfdBC__h75325[2] &&
	      !sfdBC__h75325[1] &&
	      !sfdBC__h75325[0] ||
	      !_0_CONCAT_IF_IF_898_MINUS_fpu_madd_fState_S3_fi_ETC___d2167) ?
	       8'd0 :
	       _theResult___fst_exp__h83625 ;
  assign _theResult___fst_exp__h83634 =
	     (!sfdBC__h75325[47] && sfdBC__h75325[46]) ?
	       _theResult___fst_exp__h83586 :
	       _theResult___fst_exp__h83631 ;
  assign _theResult___fst_exp__h90500 =
	     sfd__h85687[27] ?
	       _theResult___fst_exp__h90522 :
	       _theResult___fst_exp__h90585 ;
  assign _theResult___fst_exp__h90503 =
	     (sfd__h85687[27] &&
	      IF_fpu_madd_fState_S7_first__339_BITS_65_TO_56_ETC___d2354 ==
	      9'd127) ?
	       8'd254 :
	       _theResult___fst_exp__h90500 ;
  assign _theResult___fst_exp__h90522 =
	     (value__h90432[7:0] == 8'd0) ? 8'd2 : value__h90432[7:0] + 8'd1 ;
  assign _theResult___fst_exp__h90537 =
	     (value__h90432[7:0] == 8'd0) ? 8'd1 : value__h90432[7:0] ;
  assign _theResult___fst_exp__h90576 =
	     value__h90432[7:0] -
	     { 3'd0,
	       IF_IF_fpu_madd_fState_S7_first__339_BIT_67_343_ETC___d2471 } ;
  assign _theResult___fst_exp__h90582 =
	     (!sfd__h85687[27] && !sfd__h85687[26] && !sfd__h85687[25] &&
	      !sfd__h85687[24] &&
	      !sfd__h85687[23] &&
	      !sfd__h85687[22] &&
	      !sfd__h85687[21] &&
	      !sfd__h85687[20] &&
	      !sfd__h85687[19] &&
	      !sfd__h85687[18] &&
	      !sfd__h85687[17] &&
	      !sfd__h85687[16] &&
	      !sfd__h85687[15] &&
	      !sfd__h85687[14] &&
	      !sfd__h85687[13] &&
	      !sfd__h85687[12] &&
	      !sfd__h85687[11] &&
	      !sfd__h85687[10] &&
	      !sfd__h85687[9] &&
	      !sfd__h85687[8] &&
	      !sfd__h85687[7] &&
	      !sfd__h85687[6] &&
	      !sfd__h85687[5] &&
	      !sfd__h85687[4] &&
	      !sfd__h85687[3] &&
	      !sfd__h85687[2] &&
	      !sfd__h85687[1] &&
	      !sfd__h85687[0] ||
	      !_0_CONCAT_IF_IF_fpu_madd_fState_S7_first__339_B_ETC___d2474) ?
	       8'd0 :
	       _theResult___fst_exp__h90576 ;
  assign _theResult___fst_exp__h90585 =
	     (!sfd__h85687[27] && sfd__h85687[26]) ?
	       _theResult___fst_exp__h90537 :
	       _theResult___fst_exp__h90582 ;
  assign _theResult___fst_sfd__h32985 =
	     (fpu_div_fState_S4_D_OUT[32:25] == 8'd255) ?
	       fpu_div_fState_S4_D_OUT[24:2] :
	       _theResult___fst_sfd__h32982 ;
  assign _theResult___fst_sfd__h65048 =
	     (fpu_sqr_fState_S4_D_OUT[32:25] == 8'd255) ?
	       fpu_sqr_fState_S4_D_OUT[24:2] :
	       _theResult___fst_sfd__h65045 ;
  assign _theResult___fst_sfd__h65657 =
	     fpu_madd_fOperand_S0_D_OUT[99] ?
	       fpu_madd_fOperand_S0_D_OUT[89:67] :
	       23'd0 ;
  assign _theResult___sfd__h32904 =
	     sfd__h32613[24] ?
	       ((fpu_div_fState_S4_D_OUT[32:25] == 8'd254) ?
		  23'd0 :
		  sfd__h32613[23:1]) :
	       sfd__h32613[22:0] ;
  assign _theResult___sfd__h64967 =
	     sfd__h64676[24] ?
	       ((fpu_sqr_fState_S4_D_OUT[32:25] == 8'd254) ?
		  23'd0 :
		  sfd__h64676[23:1]) :
	       sfd__h64676[22:0] ;
  assign _theResult___sfd__h91456 =
	     sfd__h91157[24] ?
	       ((fpu_madd_fState_S8_D_OUT[33:26] == 8'd254) ?
		  23'd0 :
		  sfd__h91157[23:1]) :
	       sfd__h91157[22:0] ;
  assign _theResult___snd__h27543 = { fpu_div_fState_S3_D_OUT[27:0], 1'd0 } ;
  assign _theResult___snd__h31989 = { sfdin__h27178[27:0], 1'd0 } ;
  assign _theResult___snd__h32004 =
	     (!sfdin__h27178[28] && sfdin__h27178[27]) ?
	       _theResult___snd__h32006 :
	       _theResult___snd__h32019 ;
  assign _theResult___snd__h32006 = { sfdin__h27178[26:0], 2'd0 } ;
  assign _theResult___snd__h32019 =
	     (!sfdin__h27178[28] && !sfdin__h27178[27] &&
	      !sfdin__h27178[26] &&
	      !sfdin__h27178[25] &&
	      !sfdin__h27178[24] &&
	      !sfdin__h27178[23] &&
	      !sfdin__h27178[22] &&
	      !sfdin__h27178[21] &&
	      !sfdin__h27178[20] &&
	      !sfdin__h27178[19] &&
	      !sfdin__h27178[18] &&
	      !sfdin__h27178[17] &&
	      !sfdin__h27178[16] &&
	      !sfdin__h27178[15] &&
	      !sfdin__h27178[14] &&
	      !sfdin__h27178[13] &&
	      !sfdin__h27178[12] &&
	      !sfdin__h27178[11] &&
	      !sfdin__h27178[10] &&
	      !sfdin__h27178[9] &&
	      !sfdin__h27178[8] &&
	      !sfdin__h27178[7] &&
	      !sfdin__h27178[6] &&
	      !sfdin__h27178[5] &&
	      !sfdin__h27178[4] &&
	      !sfdin__h27178[3] &&
	      !sfdin__h27178[2] &&
	      !sfdin__h27178[1] &&
	      !sfdin__h27178[0]) ?
	       sfdin__h27178 :
	       _theResult___snd__h32025 ;
  assign _theResult___snd__h32025 =
	     { IF_0_CONCAT_IF_IF_fpu_div_fState_S3_first__38__ETC__q11[26:0],
	       2'd0 } ;
  assign _theResult___snd__h32043 =
	     sfdin__h27178 <<
	     IF_IF_fpu_div_fState_S3_first__38_BITS_59_TO_5_ETC___d1018 ;
  assign _theResult___snd__h32048 =
	     sfdin__h27178 <<
	     IF_IF_fpu_div_fState_S3_first__38_BITS_59_TO_5_ETC___d1016 ;
  assign _theResult___snd__h64035 = { fpu_sqr_fState_S3_D_OUT[29:0], 1'd0 } ;
  assign _theResult___snd__h64050 =
	     (!fpu_sqr_fState_S3_D_OUT[30] && fpu_sqr_fState_S3_D_OUT[29]) ?
	       _theResult___snd__h64052 :
	       _theResult___snd__h64065 ;
  assign _theResult___snd__h64052 = { fpu_sqr_fState_S3_D_OUT[28:0], 2'd0 } ;
  assign _theResult___snd__h64065 =
	     (!fpu_sqr_fState_S3_D_OUT[30] && !fpu_sqr_fState_S3_D_OUT[29] &&
	      !fpu_sqr_fState_S3_D_OUT[28] &&
	      !fpu_sqr_fState_S3_D_OUT[27] &&
	      !fpu_sqr_fState_S3_D_OUT[26] &&
	      !fpu_sqr_fState_S3_D_OUT[25] &&
	      !fpu_sqr_fState_S3_D_OUT[24] &&
	      !fpu_sqr_fState_S3_D_OUT[23] &&
	      !fpu_sqr_fState_S3_D_OUT[22] &&
	      !fpu_sqr_fState_S3_D_OUT[21] &&
	      !fpu_sqr_fState_S3_D_OUT[20] &&
	      !fpu_sqr_fState_S3_D_OUT[19] &&
	      !fpu_sqr_fState_S3_D_OUT[18] &&
	      !fpu_sqr_fState_S3_D_OUT[17] &&
	      !fpu_sqr_fState_S3_D_OUT[16] &&
	      !fpu_sqr_fState_S3_D_OUT[15] &&
	      !fpu_sqr_fState_S3_D_OUT[14] &&
	      !fpu_sqr_fState_S3_D_OUT[13] &&
	      !fpu_sqr_fState_S3_D_OUT[12] &&
	      !fpu_sqr_fState_S3_D_OUT[11] &&
	      !fpu_sqr_fState_S3_D_OUT[10] &&
	      !fpu_sqr_fState_S3_D_OUT[9] &&
	      !fpu_sqr_fState_S3_D_OUT[8] &&
	      !fpu_sqr_fState_S3_D_OUT[7] &&
	      !fpu_sqr_fState_S3_D_OUT[6] &&
	      !fpu_sqr_fState_S3_D_OUT[5] &&
	      !fpu_sqr_fState_S3_D_OUT[4] &&
	      !fpu_sqr_fState_S3_D_OUT[3] &&
	      !fpu_sqr_fState_S3_D_OUT[2] &&
	      !fpu_sqr_fState_S3_D_OUT[1] &&
	      !fpu_sqr_fState_S3_D_OUT[0]) ?
	       fpu_sqr_fState_S3_D_OUT[30:0] :
	       _theResult___snd__h64071 ;
  assign _theResult___snd__h64071 =
	     { IF_0_CONCAT_IF_fpu_sqr_fState_S3_first__455_BI_ETC__q18[28:0],
	       2'd0 } ;
  assign _theResult___snd__h64089 =
	     fpu_sqr_fState_S3_D_OUT[30:0] <<
	     IF_fpu_sqr_fState_S3_first__455_BITS_61_TO_54__ETC___d1599 ;
  assign _theResult___snd__h64094 =
	     fpu_sqr_fState_S3_D_OUT[30:0] <<
	     IF_fpu_sqr_fState_S3_first__455_BIT_30_463_THE_ETC___d1597 ;
  assign _theResult___snd__h83566 = { sfdBC__h75325[46:0], 1'd0 } ;
  assign _theResult___snd__h83580 =
	     (!sfdBC__h75325[47] && sfdBC__h75325[46]) ?
	       _theResult___snd__h83582 :
	       _theResult___snd__h83594 ;
  assign _theResult___snd__h83582 = { sfdBC__h75325[45:0], 2'd0 } ;
  assign _theResult___snd__h83594 =
	     (!sfdBC__h75325[47] && !sfdBC__h75325[46] &&
	      !sfdBC__h75325[45] &&
	      !sfdBC__h75325[44] &&
	      !sfdBC__h75325[43] &&
	      !sfdBC__h75325[42] &&
	      !sfdBC__h75325[41] &&
	      !sfdBC__h75325[40] &&
	      !sfdBC__h75325[39] &&
	      !sfdBC__h75325[38] &&
	      !sfdBC__h75325[37] &&
	      !sfdBC__h75325[36] &&
	      !sfdBC__h75325[35] &&
	      !sfdBC__h75325[34] &&
	      !sfdBC__h75325[33] &&
	      !sfdBC__h75325[32] &&
	      !sfdBC__h75325[31] &&
	      !sfdBC__h75325[30] &&
	      !sfdBC__h75325[29] &&
	      !sfdBC__h75325[28] &&
	      !sfdBC__h75325[27] &&
	      !sfdBC__h75325[26] &&
	      !sfdBC__h75325[25] &&
	      !sfdBC__h75325[24] &&
	      !sfdBC__h75325[23] &&
	      !sfdBC__h75325[22] &&
	      !sfdBC__h75325[21] &&
	      !sfdBC__h75325[20] &&
	      !sfdBC__h75325[19] &&
	      !sfdBC__h75325[18] &&
	      !sfdBC__h75325[17] &&
	      !sfdBC__h75325[16] &&
	      !sfdBC__h75325[15] &&
	      !sfdBC__h75325[14] &&
	      !sfdBC__h75325[13] &&
	      !sfdBC__h75325[12] &&
	      !sfdBC__h75325[11] &&
	      !sfdBC__h75325[10] &&
	      !sfdBC__h75325[9] &&
	      !sfdBC__h75325[8] &&
	      !sfdBC__h75325[7] &&
	      !sfdBC__h75325[6] &&
	      !sfdBC__h75325[5] &&
	      !sfdBC__h75325[4] &&
	      !sfdBC__h75325[3] &&
	      !sfdBC__h75325[2] &&
	      !sfdBC__h75325[1] &&
	      !sfdBC__h75325[0]) ?
	       sfdBC__h75325 :
	       _theResult___snd__h83600 ;
  assign _theResult___snd__h83600 =
	     { IF_0_CONCAT_IF_IF_898_MINUS_fpu_madd_fState_S3_ETC__q23[45:0],
	       2'd0 } ;
  assign _theResult___snd__h83618 =
	     sfdBC__h75325 <<
	     IF_IF_898_MINUS_fpu_madd_fState_S3_first__933__ETC___d2166 ;
  assign _theResult___snd__h83623 =
	     sfdBC__h75325 <<
	     IF_IF_898_MINUS_fpu_madd_fState_S3_first__933__ETC___d2164 ;
  assign _theResult___snd__h90517 = { sfd__h85687[26:0], 1'd0 } ;
  assign _theResult___snd__h90531 =
	     (!sfd__h85687[27] && sfd__h85687[26]) ?
	       _theResult___snd__h90533 :
	       _theResult___snd__h90545 ;
  assign _theResult___snd__h90533 = { sfd__h85687[25:0], 2'd0 } ;
  assign _theResult___snd__h90545 =
	     (!sfd__h85687[27] && !sfd__h85687[26] && !sfd__h85687[25] &&
	      !sfd__h85687[24] &&
	      !sfd__h85687[23] &&
	      !sfd__h85687[22] &&
	      !sfd__h85687[21] &&
	      !sfd__h85687[20] &&
	      !sfd__h85687[19] &&
	      !sfd__h85687[18] &&
	      !sfd__h85687[17] &&
	      !sfd__h85687[16] &&
	      !sfd__h85687[15] &&
	      !sfd__h85687[14] &&
	      !sfd__h85687[13] &&
	      !sfd__h85687[12] &&
	      !sfd__h85687[11] &&
	      !sfd__h85687[10] &&
	      !sfd__h85687[9] &&
	      !sfd__h85687[8] &&
	      !sfd__h85687[7] &&
	      !sfd__h85687[6] &&
	      !sfd__h85687[5] &&
	      !sfd__h85687[4] &&
	      !sfd__h85687[3] &&
	      !sfd__h85687[2] &&
	      !sfd__h85687[1] &&
	      !sfd__h85687[0]) ?
	       sfd__h85687 :
	       _theResult___snd__h90551 ;
  assign _theResult___snd__h90551 =
	     { IF_0_CONCAT_IF_IF_fpu_madd_fState_S7_first__33_ETC__q28[25:0],
	       2'd0 } ;
  assign _theResult___snd__h90569 =
	     sfd__h85687 <<
	     IF_fpu_madd_fState_S7_first__339_BITS_65_TO_56_ETC___d2473 ;
  assign _theResult___snd__h90574 =
	     sfd__h85687 <<
	     IF_IF_fpu_madd_fState_S7_first__339_BIT_67_343_ETC___d2471 ;
  assign _theResult___snd_fst__h32078 =
	     { IF_sfdin1966_BIT_5_THEN_2_ELSE_0__q12[1],
	       { sfdin__h31966[4:0], 23'd0 } != 28'd0 } ;
  assign _theResult___snd_fst__h33825 =
	     IF_rg_index_192_EQ_31_207_THEN_NOT_rg_res_196__ETC___d1211 ?
	       _theResult___snd_fst__h33954 :
	       IF_rg_index_192_EQ_31_207_OR_rg_res_196_BIT_60_ETC___d1239 ;
  assign _theResult___snd_fst__h33954 =
	     (IF_rg_index_192_EQ_31_207_OR_rg_res_196_BIT_60_ETC___d1216 ==
	      60'd0 ||
	      IF_rg_index_192_EQ_31_207_OR_rg_res_196_BIT_60_ETC___d1241) ?
	       IF_rg_index_192_EQ_31_207_OR_rg_res_196_BIT_60_ETC___d1239 :
	       s__h34084 ;
  assign _theResult___snd_fst__h64124 =
	     { IF_sfdin4012_BIT_7_THEN_2_ELSE_0__q19[1],
	       { sfdin__h64012[6:0], 23'd0 } != 30'd0 } ;
  assign _theResult___snd_fst__h83651 =
	     { IF_sfdin3543_BIT_24_THEN_2_ELSE_0__q24[1],
	       { sfdin__h83543[23:0], 23'd0 } != 47'd0 } ;
  assign _theResult___snd_fst__h90602 =
	     { IF_sfdin0494_BIT_4_THEN_2_ELSE_0__q29[1],
	       { sfdin__h90494[3:0], 23'd0 } != 27'd0 } ;
  assign _theResult___snd_fst_exp__h24970 =
	     (IF_fpu_div_fOperands_S0_first__95_BITS_65_TO_5_ETC___d628 ||
	      IF_fpu_div_fOperands_S0_first__95_BITS_65_TO_5_ETC___d763) ?
	       8'd0 :
	       value__h25010[7:0] ;
  assign _theResult___snd_fst_exp__h24973 =
	     IF_fpu_div_fOperands_S0_first__95_BITS_65_TO_5_ETC___d626 ?
	       _theResult___snd_fst_exp__h24970 :
	       8'd254 ;
  assign _theResult___snd_fst_exp__h24997 =
	     fpu_div_fOperands_S0_first__95_BITS_65_TO_58_9_ETC___d762 ?
	       8'd0 :
	       _theResult___snd_fst_exp__h24973 ;
  assign _theResult___snd_fst_sfd__h24998 =
	     (fpu_div_fOperands_S0_first__95_BITS_65_TO_58_9_ETC___d762 ||
	      IF_fpu_div_fOperands_S0_first__95_BITS_65_TO_5_ETC___d626) ?
	       23'd0 :
	       23'd8388607 ;
  assign _theResult___snd_snd__h34001 =
	     rg_s_220_ULT_rg_r_203_PLUS_rg_b_198_221___d1222 ?
	       r__h34015 :
	       r__h34011 ;
  assign _theResult___snd_snd__h34076 =
	     IF_rg_index_192_EQ_31_207_OR_rg_res_196_BIT_60_ETC___d1241 ?
	       r__h34123 :
	       r__h34085 ;
  assign _theResult___snd_snd__h83971 =
	     (fpu_madd_fProd_S3_D_OUT == 48'd0) ? 2'd0 : 2'd1 ;
  assign _theResult___snd_snd_snd__h27023 =
	     (fpu_div_fState_S3_D_OUT[28:27] == 2'b0) ?
	       _theResult___snd__h27543 :
	       fpu_div_fState_S3_D_OUT[28:0] ;
  assign _theResult___snd_snd_snd__h33828 =
	     IF_rg_index_192_EQ_31_207_THEN_NOT_rg_res_196__ETC___d1211 ?
	       _theResult___snd_snd_snd__h33957 :
	       IF_rg_index_192_EQ_31_207_OR_rg_res_196_BIT_60_ETC___d1227 ;
  assign _theResult___snd_snd_snd__h33957 =
	     (IF_rg_index_192_EQ_31_207_OR_rg_res_196_BIT_60_ETC___d1216 ==
	      60'd0) ?
	       IF_rg_index_192_EQ_31_207_OR_rg_res_196_BIT_60_ETC___d1227 :
	       _theResult___snd_snd__h34076 ;
  assign _theResult___snd_snd_snd__h83957 =
	     fpu_madd_fState_S3_first__933_BITS_9_TO_0_937__ETC___d1938 ?
	       _theResult___snd_snd_snd__h83969 :
	       2'd3 ;
  assign _theResult___snd_snd_snd__h83969 =
	     fpu_madd_fState_S3_first__933_BITS_9_TO_0_937__ETC___d1940 ?
	       _theResult___snd_snd__h83971 :
	       guardBC__h75329 ;
  assign b___1__h53600 = 60'h400000000000000 >> x__h57985 ;
  assign b__h1067 = { fNext_0_D_OUT[115:87], 29'd0 } ;
  assign b__h11175 =
	     (fpu_div_fOperands_S0_D_OUT[65:58] == 8'd0) ?
	       (fpu_div_fOperands_S0_D_OUT[57] ?
		  5'd1 :
		  (fpu_div_fOperands_S0_D_OUT[56] ?
		     5'd2 :
		     (fpu_div_fOperands_S0_D_OUT[55] ?
			5'd3 :
			(fpu_div_fOperands_S0_D_OUT[54] ?
			   5'd4 :
			   (fpu_div_fOperands_S0_D_OUT[53] ?
			      5'd5 :
			      (fpu_div_fOperands_S0_D_OUT[52] ?
				 5'd6 :
				 (fpu_div_fOperands_S0_D_OUT[51] ?
				    5'd7 :
				    (fpu_div_fOperands_S0_D_OUT[50] ?
				       5'd8 :
				       (fpu_div_fOperands_S0_D_OUT[49] ?
					  5'd9 :
					  (fpu_div_fOperands_S0_D_OUT[48] ?
					     5'd10 :
					     (fpu_div_fOperands_S0_D_OUT[47] ?
						5'd11 :
						(fpu_div_fOperands_S0_D_OUT[46] ?
						   5'd12 :
						   (fpu_div_fOperands_S0_D_OUT[45] ?
						      5'd13 :
						      (fpu_div_fOperands_S0_D_OUT[44] ?
							 5'd14 :
							 (fpu_div_fOperands_S0_D_OUT[43] ?
							    5'd15 :
							    (fpu_div_fOperands_S0_D_OUT[42] ?
							       5'd16 :
							       (fpu_div_fOperands_S0_D_OUT[41] ?
								  5'd17 :
								  (fpu_div_fOperands_S0_D_OUT[40] ?
								     5'd18 :
								     (fpu_div_fOperands_S0_D_OUT[39] ?
									5'd19 :
									(fpu_div_fOperands_S0_D_OUT[38] ?
									   5'd20 :
									   (fpu_div_fOperands_S0_D_OUT[37] ?
									      5'd21 :
									      (fpu_div_fOperands_S0_D_OUT[36] ?
										 5'd22 :
										 (fpu_div_fOperands_S0_D_OUT[35] ?
										    5'd23 :
										    5'd24))))))))))))))))))))))) :
	       5'd0 ;
  assign b__h1378 = { fNext_1_D_OUT[115:87], 29'd0 } ;
  assign b__h15091 =
	     (fpu_div_fOperands_S0_D_OUT[33:26] == 8'd0) ?
	       (fpu_div_fOperands_S0_D_OUT[25] ?
		  5'd1 :
		  (fpu_div_fOperands_S0_D_OUT[24] ?
		     5'd2 :
		     (fpu_div_fOperands_S0_D_OUT[23] ?
			5'd3 :
			(fpu_div_fOperands_S0_D_OUT[22] ?
			   5'd4 :
			   (fpu_div_fOperands_S0_D_OUT[21] ?
			      5'd5 :
			      (fpu_div_fOperands_S0_D_OUT[20] ?
				 5'd6 :
				 (fpu_div_fOperands_S0_D_OUT[19] ?
				    5'd7 :
				    (fpu_div_fOperands_S0_D_OUT[18] ?
				       5'd8 :
				       (fpu_div_fOperands_S0_D_OUT[17] ?
					  5'd9 :
					  (fpu_div_fOperands_S0_D_OUT[16] ?
					     5'd10 :
					     (fpu_div_fOperands_S0_D_OUT[15] ?
						5'd11 :
						(fpu_div_fOperands_S0_D_OUT[14] ?
						   5'd12 :
						   (fpu_div_fOperands_S0_D_OUT[13] ?
						      5'd13 :
						      (fpu_div_fOperands_S0_D_OUT[12] ?
							 5'd14 :
							 (fpu_div_fOperands_S0_D_OUT[11] ?
							    5'd15 :
							    (fpu_div_fOperands_S0_D_OUT[10] ?
							       5'd16 :
							       (fpu_div_fOperands_S0_D_OUT[9] ?
								  5'd17 :
								  (fpu_div_fOperands_S0_D_OUT[8] ?
								     5'd18 :
								     (fpu_div_fOperands_S0_D_OUT[7] ?
									5'd19 :
									(fpu_div_fOperands_S0_D_OUT[6] ?
									   5'd20 :
									   (fpu_div_fOperands_S0_D_OUT[5] ?
									      5'd21 :
									      (fpu_div_fOperands_S0_D_OUT[4] ?
										 5'd22 :
										 (fpu_div_fOperands_S0_D_OUT[3] ?
										    5'd23 :
										    5'd24))))))))))))))))))))))) :
	       5'd0 ;
  assign b__h1689 = { fNext_2_D_OUT[115:87], 29'd0 } ;
  assign b__h2000 = { fNext_3_D_OUT[115:87], 29'd0 } ;
  assign b__h2311 = { fNext_4_D_OUT[115:87], 29'd0 } ;
  assign b__h2622 = { fNext_5_D_OUT[115:87], 29'd0 } ;
  assign b__h2933 = { fNext_6_D_OUT[115:87], 29'd0 } ;
  assign b__h3244 = { fNext_7_D_OUT[115:87], 29'd0 } ;
  assign b__h33960 = { 2'd0, rg_b[59:2] } ;
  assign b__h34073 =
	     { 2'd0,
	       IF_rg_index_192_EQ_31_207_OR_rg_res_196_BIT_60_ETC___d1216[59:2] } ;
  assign b__h3555 = { fNext_8_D_OUT[115:87], 29'd0 } ;
  assign b__h380 = { 1'd0, fRequest_D_OUT[27:0] } ;
  assign b__h3866 = { fNext_9_D_OUT[115:87], 29'd0 } ;
  assign b__h4177 = { fNext_10_D_OUT[115:87], 29'd0 } ;
  assign b__h4488 = { fNext_11_D_OUT[115:87], 29'd0 } ;
  assign b__h4799 = { fNext_12_D_OUT[115:87], 29'd0 } ;
  assign b__h5110 = { fNext_13_D_OUT[115:87], 29'd0 } ;
  assign b__h5421 = { fNext_14_D_OUT[115:87], 29'd0 } ;
  assign b__h5732 = { fNext_15_D_OUT[115:87], 29'd0 } ;
  assign b__h6043 = { fNext_16_D_OUT[115:87], 29'd0 } ;
  assign b__h6354 = { fNext_17_D_OUT[115:87], 29'd0 } ;
  assign b__h6665 = { fNext_18_D_OUT[115:87], 29'd0 } ;
  assign b__h6976 = { fNext_19_D_OUT[115:87], 29'd0 } ;
  assign b__h7287 = { fNext_20_D_OUT[115:87], 29'd0 } ;
  assign b__h756 = { fFirst_D_OUT[115:87], 29'd0 } ;
  assign b__h7598 = { fNext_21_D_OUT[115:87], 29'd0 } ;
  assign b__h7909 = { fNext_22_D_OUT[115:87], 29'd0 } ;
  assign b__h8220 = { fNext_23_D_OUT[115:87], 29'd0 } ;
  assign b__h8531 = { fNext_24_D_OUT[115:87], 29'd0 } ;
  assign b__h8842 = { fNext_25_D_OUT[115:87], 29'd0 } ;
  assign b__h9153 = { fNext_26_D_OUT[115:87], 29'd0 } ;
  assign b__h9464 = { fNext_27_D_OUT[115:87], 29'd0 } ;
  assign b__h9698 = { fNext_28_D_OUT[115:87], 29'd0 } ;
  assign din_exp3466_MINUS_127__q22 = din_exp__h83466 - 8'd127 ;
  assign din_exp__h83466 =
	     _898_MINUS_fpu_madd_fState_S3_first__933_BITS_9_ETC___d1944 ?
	       value__h83483[7:0] :
	       8'd0 ;
  assign din_inc___2_exp__h32994 = fpu_div_fState_S4_D_OUT[32:25] + 8'd1 ;
  assign din_inc___2_exp__h65057 = fpu_sqr_fState_S4_D_OUT[32:25] + 8'd1 ;
  assign din_inc___2_exp__h91540 = fpu_madd_fState_S8_D_OUT[33:26] + 8'd1 ;
  assign fNext_28_first__76_BITS_86_TO_58_78_PLUS_NEG_I_ETC___d481 =
	     fNext_28_D_OUT[86:58] + -(~fNext_28_D_OUT[86:58]) ;
  assign fpu_div_fOperands_S0D_OUT_BITS_33_TO_26_MINUS_ETC__q8 =
	     fpu_div_fOperands_S0_D_OUT[33:26] - 8'd127 ;
  assign fpu_div_fOperands_S0D_OUT_BITS_65_TO_58_MINUS_ETC__q7 =
	     fpu_div_fOperands_S0_D_OUT[65:58] - 8'd127 ;
  assign fpu_div_fOperands_S0_first__95_BITS_33_TO_26_0_ETC___d632 =
	     fpu_div_fOperands_S0_D_OUT[33:26] == 8'd0 &&
	     fpu_div_fOperands_S0_D_OUT[25:3] == 23'd0 ||
	     fpu_div_fOperands_S0_D_OUT[65:58] == 8'd255 &&
	     fpu_div_fOperands_S0_D_OUT[57:35] == 23'd0 ||
	     fpu_div_fOperands_S0_D_OUT[65:58] == 8'd0 &&
	     fpu_div_fOperands_S0_D_OUT[57:35] == 23'd0 ||
	     fpu_div_fOperands_S0_D_OUT[33:26] == 8'd255 &&
	     fpu_div_fOperands_S0_D_OUT[25:3] == 23'd0 ||
	     !IF_fpu_div_fOperands_S0_first__95_BITS_65_TO_5_ETC___d626 ||
	     IF_fpu_div_fOperands_S0_first__95_BITS_65_TO_5_ETC___d628 ;
  assign fpu_div_fOperands_S0_first__95_BITS_65_TO_58_9_ETC___d659 =
	     fpu_div_fOperands_S0_D_OUT[65:58] == 8'd255 &&
	     fpu_div_fOperands_S0_D_OUT[57:35] == 23'd0 ||
	     fpu_div_fOperands_S0_D_OUT[65:58] == 8'd0 &&
	     fpu_div_fOperands_S0_D_OUT[57:35] == 23'd0 ||
	     fpu_div_fOperands_S0_D_OUT[33:26] == 8'd255 &&
	     fpu_div_fOperands_S0_D_OUT[25:3] == 23'd0 ;
  assign fpu_div_fOperands_S0_first__95_BITS_65_TO_58_9_ETC___d694 =
	     fpu_div_fOperands_S0_D_OUT[65:58] == 8'd255 &&
	     fpu_div_fOperands_S0_D_OUT[57:35] == 23'd0 &&
	     fpu_div_fOperands_S0_D_OUT[33:26] == 8'd255 &&
	     fpu_div_fOperands_S0_D_OUT[25:3] == 23'd0 ||
	     fpu_div_fOperands_S0_D_OUT[65:58] == 8'd0 &&
	     fpu_div_fOperands_S0_D_OUT[57:35] == 23'd0 &&
	     fpu_div_fOperands_S0_D_OUT[33:26] == 8'd0 &&
	     fpu_div_fOperands_S0_D_OUT[25:3] == 23'd0 ;
  assign fpu_div_fOperands_S0_first__95_BITS_65_TO_58_9_ETC___d762 =
	     fpu_div_fOperands_S0_D_OUT[65:58] == 8'd255 &&
	     fpu_div_fOperands_S0_D_OUT[57:35] != 23'd0 &&
	     !fpu_div_fOperands_S0_D_OUT[57] ||
	     fpu_div_fOperands_S0_D_OUT[33:26] == 8'd255 &&
	     fpu_div_fOperands_S0_D_OUT[25:3] != 23'd0 &&
	     !fpu_div_fOperands_S0_D_OUT[25] ||
	     fpu_div_fOperands_S0_D_OUT[65:58] == 8'd255 &&
	     fpu_div_fOperands_S0_D_OUT[57] ||
	     fpu_div_fOperands_S0_D_OUT[33:26] == 8'd255 &&
	     fpu_div_fOperands_S0_D_OUT[25] ||
	     fpu_div_fOperands_S0_D_OUT[33:26] == 8'd0 &&
	     fpu_div_fOperands_S0_D_OUT[25:3] == 23'd0 ||
	     fpu_div_fOperands_S0_first__95_BITS_65_TO_58_9_ETC___d659 ;
  assign fpu_div_fOperands_S0_first__95_BIT_66_61_EQ_fp_ETC___d663 =
	     fpu_div_fOperands_S0_D_OUT[66] ==
	     fpu_div_fOperands_S0_D_OUT[34] ;
  assign fpu_div_fState_S3_first__38_BIT_60_55_CONCAT_I_ETC___d1072 =
	     { fpu_div_fState_S3_D_OUT[60],
	       IF_fpu_div_fState_S3_first__38_BITS_59_TO_52_3_ETC___d872 ?
		 IF_IF_fpu_div_fState_S3_first__38_BITS_59_TO_5_ETC___d1065 :
		 ((fpu_div_fState_S3_D_OUT[59:52] == 8'd255) ?
		    ((fpu_div_fState_S3_D_OUT[28:27] == 2'b0) ?
		       { _theResult___fst_exp__h31923,
			 fpu_div_fState_S3_D_OUT[51:29] } :
		       31'h7F7FFFFF) :
		    fpu_div_fState_S3_D_OUT[59:29]) } ;
  assign fpu_madd_fOperand_S0D_OUT_BITS_33_TO_26_MINUS_ETC__q35 =
	     fpu_madd_fOperand_S0_D_OUT[33:26] - 8'd127 ;
  assign fpu_madd_fOperand_S0D_OUT_BITS_65_TO_58_MINUS_ETC__q34 =
	     fpu_madd_fOperand_S0_D_OUT[65:58] - 8'd127 ;
  assign fpu_madd_fOperand_S0_first__769_BITS_65_TO_58__ETC___d1823 =
	     fpu_madd_fOperand_S0_D_OUT[65:58] == 8'd255 &&
	     fpu_madd_fOperand_S0_D_OUT[57:35] == 23'd0 ||
	     fpu_madd_fOperand_S0_D_OUT[33:26] == 8'd255 &&
	     fpu_madd_fOperand_S0_D_OUT[25:3] == 23'd0 ||
	     x__h65583 == 8'd0 && _theResult___fst_sfd__h65657 == 23'd0 &&
	     (fpu_madd_fOperand_S0_D_OUT[65:58] == 8'd0 &&
	      fpu_madd_fOperand_S0_D_OUT[57:35] == 23'd0 ||
	      fpu_madd_fOperand_S0_D_OUT[33:26] == 8'd0 &&
	      fpu_madd_fOperand_S0_D_OUT[25:3] == 23'd0) &&
	     fpu_madd_fOperand_S0_first__769_BIT_99_770_AND_ETC___d1821 ;
  assign fpu_madd_fOperand_S0_first__769_BITS_65_TO_58__ETC___d1870 =
	     fpu_madd_fOperand_S0_D_OUT[65:58] == 8'd255 &&
	     fpu_madd_fOperand_S0_D_OUT[57:35] == 23'd0 &&
	     fpu_madd_fOperand_S0_D_OUT[33:26] == 8'd0 &&
	     fpu_madd_fOperand_S0_D_OUT[25:3] == 23'd0 ||
	     fpu_madd_fOperand_S0_D_OUT[65:58] == 8'd0 &&
	     fpu_madd_fOperand_S0_D_OUT[57:35] == 23'd0 &&
	     fpu_madd_fOperand_S0_D_OUT[33:26] == 8'd255 &&
	     fpu_madd_fOperand_S0_D_OUT[25:3] == 23'd0 ;
  assign fpu_madd_fOperand_S0_first__769_BIT_99_770_AND_ETC___d1821 =
	     (fpu_madd_fOperand_S0_D_OUT[99] &&
	      fpu_madd_fOperand_S0_D_OUT[98]) ==
	     NOT_fpu_madd_fOperand_S0_first__769_BIT_66_817_ETC___d1820 ;
  assign fpu_madd_fProd_S3_first__945_SRL_IF_898_MINUS__ETC___d1948 =
	     fpu_madd_fProd_S3_D_OUT >>
	     _898_MINUS_fpu_madd_fState_S3_first__933_BITS_9_ETC___d1943 ;
  assign fpu_madd_fState_S3_first__933_BITS_51_TO_47_93_ETC___d2205 =
	     fpu_madd_fState_S3_D_OUT[51:47] |
	     { 2'd0,
	       sfdBC__h75325[47] &&
	       IF_IF_898_MINUS_fpu_madd_fState_S3_first__933__ETC___d1967 ==
	       9'd127,
	       _theResult___fst_exp__h83552 == 8'd0 &&
	       guardBC__h75329 != 2'd0,
	       sfdBC__h75325[47] &&
	       IF_IF_898_MINUS_fpu_madd_fState_S3_first__933__ETC___d1967 ==
	       9'd127 } ;
  assign fpu_madd_fState_S3_first__933_BITS_9_TO_0_937__ETC___d1938 =
	     (fpu_madd_fState_S3_D_OUT[9:0] ^ 10'h200) <= 10'd639 ;
  assign fpu_madd_fState_S3_first__933_BITS_9_TO_0_937__ETC___d1940 =
	     (fpu_madd_fState_S3_D_OUT[9:0] ^ 10'h200) < 10'd361 ;
  assign fpu_madd_fState_S4D_OUT_BITS_32_TO_25_MINUS_127__q25 =
	     fpu_madd_fState_S4_D_OUT[32:25] - 8'd127 ;
  assign fpu_madd_fState_S4D_OUT_BITS_64_TO_57_MINUS_127__q26 =
	     fpu_madd_fState_S4_D_OUT[64:57] - 8'd127 ;
  assign fpu_madd_fState_S5_first__299_BITS_27_TO_0_305_ETC___d2310 =
	     fpu_madd_fState_S5_D_OUT[27:0] >>
	     fpu_madd_fState_S5_D_OUT[65:56] ;
  assign fpu_madd_fState_S7_first__339_BITS_76_TO_72_34_ETC___d2512 =
	     fpu_madd_fState_S7_D_OUT[76:72] |
	     { 2'd0,
	       sfd__h85687[27] &&
	       IF_fpu_madd_fState_S7_first__339_BITS_65_TO_56_ETC___d2354 ==
	       9'd127,
	       _theResult___fst_exp__h90503 == 8'd0 && guard__h85691 != 2'd0,
	       sfd__h85687[27] &&
	       IF_fpu_madd_fState_S7_first__339_BITS_65_TO_56_ETC___d2354 ==
	       9'd127 } ;
  assign fpu_madd_fState_S8_first__530_BITS_43_TO_39_60_ETC___d2613 =
	     fpu_madd_fState_S8_D_OUT[43:39] |
	     { 2'd0,
	       IF_fpu_madd_fState_S8_first__530_BITS_33_TO_26_ETC___d2581 ==
	       8'd255 &&
	       ((fpu_madd_fState_S8_D_OUT[33:26] == 8'd255) ?
		  fpu_madd_fState_S8_D_OUT[25:3] :
		  _theResult___fst_sfd__h91534) ==
	       23'd0,
	       1'd0,
	       fpu_madd_fState_S8_D_OUT[33:26] != 8'd255 &&
	       fpu_madd_fState_S8_D_OUT[2:1] != 2'b0 } ;
  assign fpu_sqr_fOperand_S0D_OUT_BITS_33_TO_26_MINUS_127__q15 =
	     fpu_sqr_fOperand_S0_D_OUT[33:26] - 8'd127 ;
  assign fpu_sqr_fState_S3D_OUT_BITS_61_TO_54_MINUS_127__q17 =
	     fpu_sqr_fState_S3_D_OUT[61:54] - 8'd127 ;
  assign guardBC__h75329 =
	     (sfdBC__h75325[47] &&
	      IF_IF_898_MINUS_fpu_madd_fState_S3_first__933__ETC___d1967 ==
	      9'd127) ?
	       2'd3 :
	       _theResult___snd_fst__h83651 ;
  assign guard__h27006 =
	     (sfdin__h27178[28] &&
	      IF_IF_fpu_div_fState_S3_first__38_BITS_59_TO_5_ETC___d895 ==
	      9'd127) ?
	       2'd3 :
	       _theResult___snd_fst__h32078 ;
  assign guard__h58912 =
	     (fpu_sqr_fState_S3_D_OUT[30] &&
	      IF_fpu_sqr_fState_S3_first__455_BITS_61_TO_54__ETC___d1468 ==
	      9'd127) ?
	       2'd3 :
	       _theResult___snd_fst__h64124 ;
  assign guard__h84951 = fpu_madd_fState_S5_D_OUT[27:0] << x__h85055 ;
  assign guard__h85691 =
	     (sfd__h85687[27] &&
	      IF_fpu_madd_fState_S7_first__339_BITS_65_TO_56_ETC___d2354 ==
	      9'd127) ?
	       2'd3 :
	       _theResult___snd_fst__h90602 ;
  assign out_exp__h32906 =
	     fpu_div_fState_S4_D_OUT[2] ?
	       _theResult___exp__h32903 :
	       fpu_div_fState_S4_D_OUT[32:25] ;
  assign out_exp__h64969 =
	     fpu_sqr_fState_S4_D_OUT[2] ?
	       _theResult___exp__h64966 :
	       fpu_sqr_fState_S4_D_OUT[32:25] ;
  assign out_exp__h91458 =
	     fpu_madd_fState_S8_D_OUT[3] ?
	       _theResult___exp__h91455 :
	       fpu_madd_fState_S8_D_OUT[33:26] ;
  assign out_sfd__h32907 =
	     fpu_div_fState_S4_D_OUT[2] ?
	       _theResult___sfd__h32904 :
	       fpu_div_fState_S4_D_OUT[24:2] ;
  assign out_sfd__h64970 =
	     fpu_sqr_fState_S4_D_OUT[2] ?
	       _theResult___sfd__h64967 :
	       fpu_sqr_fState_S4_D_OUT[24:2] ;
  assign out_sfd__h91459 =
	     fpu_madd_fState_S8_D_OUT[3] ?
	       _theResult___sfd__h91456 :
	       fpu_madd_fState_S8_D_OUT[25:3] ;
  assign r__h34011 = r__h34015 + rg_b ;
  assign r__h34015 = { 1'd0, rg_r[59:1] } ;
  assign r__h34085 =
	     r__h34123 +
	     IF_rg_index_192_EQ_31_207_OR_rg_res_196_BIT_60_ETC___d1216 ;
  assign r__h34123 =
	     { 1'd0,
	       IF_rg_index_192_EQ_31_207_OR_rg_res_196_BIT_60_ETC___d1227[59:1] } ;
  assign result__h25914 = { _theResult____h25900[28:1], 1'd1 } ;
  assign result__h25945 =
	     { 1'd0,
	       value__h25958[27:1],
	       value__h25958[0] | sfdlsb__h25940 } ;
  assign result__h26095 = (fResponse_D_OUT[55:28] == 28'd0) ? 29'd0 : 29'd1 ;
  assign result__h58410 = { x__h58416[30:1], 1'd1 } ;
  assign result__h84956 =
	     { fpu_madd_fState_S5_first__299_BITS_27_TO_0_305_ETC___d2310[27:1],
	       fpu_madd_fState_S5_first__299_BITS_27_TO_0_305_ETC___d2310[0] |
	       guard__h84951 != 28'd0 } ;
  assign rg_s_220_ULT_rg_r_203_PLUS_rg_b_198_221___d1222 =
	     rg_s < sum__h33958 ;
  assign s__h34010 = rg_s - sum__h33958 ;
  assign s__h34084 =
	     IF_rg_index_192_EQ_31_207_OR_rg_res_196_BIT_60_ETC___d1239 -
	     sum__h34071 ;
  assign sfdA__h84164 =
	     { 1'b0,
	       fpu_madd_fState_S4_D_OUT[64:57] != 8'd0,
	       fpu_madd_fState_S4_D_OUT[56:34],
	       3'b0 } ;
  assign sfdA__h9983 =
	     { fpu_div_fOperands_S0_D_OUT[65:58] != 8'd0,
	       fpu_div_fOperands_S0_D_OUT[57:35] } ;
  assign sfdA__h9987 = sfdA__h9983 << b__h11175 ;
  assign sfdBC__h75325 =
	     _898_MINUS_fpu_madd_fState_S3_first__933_BITS_9_ETC___d1944 ?
	       fpu_madd_fProd_S3_D_OUT :
	       _theResult___fst__h76026 ;
  assign sfdBC__h84165 =
	     { 1'b0,
	       fpu_madd_fState_S4_D_OUT[32:25] != 8'd0,
	       fpu_madd_fState_S4_D_OUT[24:0],
	       1'b0 } ;
  assign sfdB__h9984 =
	     { fpu_div_fOperands_S0_D_OUT[33:26] != 8'd0,
	       fpu_div_fOperands_S0_D_OUT[25:3] } ;
  assign sfdB__h9989 = sfdB__h9984 << b__h15091 ;
  assign sfd___1__h43481 = { 1'd0, sfd__h34883[29:1] } ;
  assign sfd__h19066 = { 1'd1, fpu_div_fOperands_S0_D_OUT[56:35] } ;
  assign sfd__h19069 = { 1'd1, fpu_div_fOperands_S0_D_OUT[24:3] } ;
  assign sfd__h32613 =
	     { 1'b0,
	       fpu_div_fState_S4_D_OUT[32:25] != 8'd0,
	       fpu_div_fState_S4_D_OUT[24:2] } +
	     25'd1 ;
  assign sfd__h34881 = { value__h38985, 5'd0 } ;
  assign sfd__h34883 = sfd__h34881 << x__h43511 ;
  assign sfd__h34934 = { 1'd1, fpu_sqr_fOperand_S0_D_OUT[24:3] } ;
  assign sfd__h64676 =
	     { 1'b0,
	       fpu_sqr_fState_S4_D_OUT[32:25] != 8'd0,
	       fpu_sqr_fState_S4_D_OUT[24:2] } +
	     25'd1 ;
  assign sfd__h67233 = { 1'd1, _theResult___fst_sfd__h65657[21:0] } ;
  assign sfd__h67236 = { 1'd1, fpu_madd_fOperand_S0_D_OUT[56:35] } ;
  assign sfd__h67239 = { 1'd1, fpu_madd_fOperand_S0_D_OUT[24:3] } ;
  assign sfd__h85687 =
	     fpu_madd_fState_S7_D_OUT[67] ?
	       fpu_madd_fState_S7_D_OUT[27:0] :
	       fpu_madd_fState_S7_D_OUT[55:28] ;
  assign sfd__h91157 =
	     { 1'b0,
	       fpu_madd_fState_S8_D_OUT[33:26] != 8'd0,
	       fpu_madd_fState_S8_D_OUT[25:3] } +
	     25'd1 ;
  assign sfdin__h27178 =
	     (fpu_div_fState_S3_D_OUT[59:52] == 8'd255) ?
	       _theResult___snd_snd_snd__h27023 :
	       fpu_div_fState_S3_D_OUT[28:0] ;
  assign sfdin__h31966 =
	     sfdin__h27178[28] ?
	       _theResult___snd__h31989 :
	       _theResult___snd__h32004 ;
  assign sfdin__h64012 =
	     fpu_sqr_fState_S3_D_OUT[30] ?
	       _theResult___snd__h64035 :
	       _theResult___snd__h64050 ;
  assign sfdin__h83543 =
	     sfdBC__h75325[47] ?
	       _theResult___snd__h83566 :
	       _theResult___snd__h83580 ;
  assign sfdin__h90494 =
	     sfd__h85687[27] ?
	       _theResult___snd__h90517 :
	       _theResult___snd__h90531 ;
  assign sfdlsb__h25940 = x__h26034 != 29'd0 ;
  assign sfdlsb__h76024 = x__h76095 != 48'd0 ;
  assign sum__h33958 = rg_r + rg_b ;
  assign sum__h34071 =
	     IF_rg_index_192_EQ_31_207_OR_rg_res_196_BIT_60_ETC___d1227 +
	     IF_rg_index_192_EQ_31_207_OR_rg_res_196_BIT_60_ETC___d1216 ;
  assign theResult___fst_exp1929_MINUS_127__q10 =
	     _theResult___fst_exp__h31929 - 8'd127 ;
  assign v__h25858 =
	     (fResponse_D_OUT[27:0] == 28'd0) ?
	       _theResult____h25900 :
	       result__h25914 ;
  assign v__h58340 = (rg_s == 60'd0) ? x__h58416[30:0] : result__h58410 ;
  assign value0432_BITS_7_TO_0_MINUS_127__q27 = value__h90432[7:0] - 8'd127 ;
  assign value_BIT_23___h39081 = fpu_sqr_fOperand_S0_D_OUT[33:26] != 8'd0 ;
  assign value__h25010 =
	     IF_fpu_div_fOperands_S0_first__95_BITS_65_TO_5_ETC___d625 +
	     10'd127 ;
  assign value__h25065 = { 1'b0, sfdA__h9987 } ;
  assign value__h25186 =
	     10'd898 -
	     IF_fpu_div_fOperands_S0_first__95_BITS_65_TO_5_ETC___d625 ;
  assign value__h25958 =
	     fResponse_D_OUT[55:28] >> fpu_div_fState_S2_D_OUT[7:0] ;
  assign value__h38985 =
	     { 1'b0,
	       value_BIT_23___h39081,
	       fpu_sqr_fOperand_S0_D_OUT[25:3] } ;
  assign value__h83483 = fpu_madd_fState_S3_D_OUT[9:0] + 10'd127 ;
  assign value__h90432 = fpu_madd_fState_S7_D_OUT[65:56] + 10'd127 ;
  assign value__h9663 =
	     fNext_28_D_OUT[57] ?
	       fNext_28_D_OUT[57:0] + b__h9698 :
	       fNext_28_D_OUT[57:0] ;
  assign x__h25062 = { value__h25065, 31'd0 } ;
  assign x__h25123 = { sfdB__h9989, 4'b0 } ;
  assign x__h25177 =
	     (fpu_div_fOperands_S0_D_OUT[65:58] == 8'd255 &&
	      fpu_div_fOperands_S0_D_OUT[57:35] != 23'd0 &&
	      !fpu_div_fOperands_S0_D_OUT[57] ||
	      fpu_div_fOperands_S0_D_OUT[33:26] == 8'd255 &&
	      fpu_div_fOperands_S0_D_OUT[25:3] != 23'd0 &&
	      !fpu_div_fOperands_S0_D_OUT[25] ||
	      fpu_div_fOperands_S0_D_OUT[65:58] == 8'd255 &&
	      fpu_div_fOperands_S0_D_OUT[57] ||
	      fpu_div_fOperands_S0_D_OUT[33:26] == 8'd255 &&
	      fpu_div_fOperands_S0_D_OUT[25] ||
	      fpu_div_fOperands_S0_first__95_BITS_33_TO_26_0_ETC___d632) ?
	       8'd0 :
	       _theResult___fst__h24958 ;
  assign x__h26034 = { 1'd0, fResponse_D_OUT[55:28] } << x__h26041 ;
  assign x__h26041 = 8'd29 - fpu_div_fState_S2_D_OUT[7:0] ;
  assign x__h38586 = x__h38604 + 10'd128 ;
  assign x__h38604 =
	     { IF_fpu_sqr_fOperand_S0_first__262_BITS_33_TO_2_ETC__q16[8],
	       IF_fpu_sqr_fOperand_S0_first__262_BITS_33_TO_2_ETC__q16 } ;
  assign x__h43472 =
	     IF_fpu_sqr_fOperand_S0_first__262_BITS_33_TO_2_ETC___d1340[0] ?
	       sfd__h34883 :
	       sfd___1__h43481 ;
  assign x__h43511 =
	     IF_fpu_sqr_fOperand_S0_first__262_BITS_33_TO_2_ETC___d1338 -
	     5'd1 ;
  assign x__h57985 =
	     IF_fpu_sqr_fState_S1_first__364_BIT_29_370_THE_ETC___d1430[0] ?
	       IF_fpu_sqr_fState_S1_first__364_BIT_29_370_THE_ETC___d1430 +
	       6'd1 :
	       IF_fpu_sqr_fState_S1_first__364_BIT_29_370_THE_ETC___d1430 ;
  assign x__h58416 = rg_res[60] ? rg_res[59:0] : 60'd0 ;
  assign x__h65583 =
	     fpu_madd_fOperand_S0_D_OUT[99] ?
	       fpu_madd_fOperand_S0_D_OUT[97:90] :
	       8'd0 ;
  assign x__h73954 =
	     { fpu_madd_fOperand_S0_D_OUT[65:58] != 8'd0,
	       fpu_madd_fOperand_S0_D_OUT[57:35] } ;
  assign x__h73966 =
	     { fpu_madd_fOperand_S0_D_OUT[33:26] != 8'd0,
	       fpu_madd_fOperand_S0_D_OUT[25:3] } ;
  assign x__h76095 = fpu_madd_fProd_S3_D_OUT << x__h76128 ;
  assign x__h76128 =
	     10'd48 -
	     _898_MINUS_fpu_madd_fState_S3_first__933_BITS_9_ETC___d1943 ;
  assign x__h84532 =
	     { 1'b0,
	       NOT_fpu_madd_fState_S4_first__250_BIT_66_256_2_ETC___d2283 ?
		 { fpu_madd_fState_S4_D_OUT[32:25] != 8'd0,
		   fpu_madd_fState_S4_D_OUT[24:0],
		   1'b0 } :
		 { fpu_madd_fState_S4_D_OUT[64:57] != 8'd0,
		   fpu_madd_fState_S4_D_OUT[56:34],
		   3'b0 } } ;
  assign x__h84536 =
	     { 1'b0,
	       NOT_fpu_madd_fState_S4_first__250_BIT_66_256_2_ETC___d2283 ?
		 { fpu_madd_fState_S4_D_OUT[64:57] != 8'd0,
		   fpu_madd_fState_S4_D_OUT[56:34],
		   3'b0 } :
		 { fpu_madd_fState_S4_D_OUT[32:25] != 8'd0,
		   fpu_madd_fState_S4_D_OUT[24:0],
		   1'b0 } } ;
  assign x__h84943 =
	     fpu_madd_fState_S5_D_OUT[119] ?
	       fpu_madd_fState_S5_D_OUT[27:0] :
	       (((fpu_madd_fState_S5_D_OUT[65:56] ^ 10'h200) < 10'd540) ?
		  result__h84956 :
		  ((fpu_madd_fState_S5_D_OUT[27:0] == 28'd0) ?
		     fpu_madd_fState_S5_D_OUT[27:0] :
		     28'd1)) ;
  assign x__h85055 = 10'd28 - fpu_madd_fState_S5_D_OUT[65:56] ;
  assign x__h85447 =
	     fpu_madd_fState_S6_D_OUT[55:28] +
	     fpu_madd_fState_S6_D_OUT[27:0] ;
  assign x__h85456 =
	     fpu_madd_fState_S6_D_OUT[55:28] -
	     fpu_madd_fState_S6_D_OUT[27:0] ;
  assign x__h90885 = fpu_madd_fState_S7_D_OUT[109] ? 2'd0 : guard__h85691 ;
  always@(fpu_div_fState_S4_D_OUT or
	  out_sfd__h32907 or _theResult___sfd__h32904)
  begin
    case (fpu_div_fState_S4_D_OUT[1:0])
      2'b0, 2'b01:
	  CASE_fpu_div_fState_S4D_OUT_BITS_1_TO_0_0b0_f_ETC__q1 =
	      fpu_div_fState_S4_D_OUT[24:2];
      2'b10:
	  CASE_fpu_div_fState_S4D_OUT_BITS_1_TO_0_0b0_f_ETC__q1 =
	      out_sfd__h32907;
      2'b11:
	  CASE_fpu_div_fState_S4D_OUT_BITS_1_TO_0_0b0_f_ETC__q1 =
	      _theResult___sfd__h32904;
    endcase
  end
  always@(fpu_div_fState_S4_D_OUT or _theResult___sfd__h32904)
  begin
    case (fpu_div_fState_S4_D_OUT[1:0])
      2'b0:
	  CASE_fpu_div_fState_S4D_OUT_BITS_1_TO_0_0b0_f_ETC__q2 =
	      fpu_div_fState_S4_D_OUT[24:2];
      2'b01, 2'b10, 2'b11:
	  CASE_fpu_div_fState_S4D_OUT_BITS_1_TO_0_0b0_f_ETC__q2 =
	      _theResult___sfd__h32904;
    endcase
  end
  always@(fpu_div_fState_S4_D_OUT or
	  CASE_fpu_div_fState_S4D_OUT_BITS_1_TO_0_0b0_f_ETC__q1 or
	  CASE_fpu_div_fState_S4D_OUT_BITS_1_TO_0_0b0_f_ETC__q2 or
	  _theResult___sfd__h32904)
  begin
    case (fpu_div_fState_S4_D_OUT[36:34])
      3'd0:
	  _theResult___fst_sfd__h32982 =
	      CASE_fpu_div_fState_S4D_OUT_BITS_1_TO_0_0b0_f_ETC__q1;
      3'd1:
	  _theResult___fst_sfd__h32982 =
	      CASE_fpu_div_fState_S4D_OUT_BITS_1_TO_0_0b0_f_ETC__q2;
      3'd2:
	  _theResult___fst_sfd__h32982 =
	      (fpu_div_fState_S4_D_OUT[1:0] == 2'b0 ||
	       fpu_div_fState_S4_D_OUT[33]) ?
		fpu_div_fState_S4_D_OUT[24:2] :
		_theResult___sfd__h32904;
      3'd3:
	  _theResult___fst_sfd__h32982 =
	      (fpu_div_fState_S4_D_OUT[1:0] == 2'b0) ?
		fpu_div_fState_S4_D_OUT[24:2] :
		(fpu_div_fState_S4_D_OUT[33] ?
		   _theResult___sfd__h32904 :
		   fpu_div_fState_S4_D_OUT[24:2]);
      3'd4: _theResult___fst_sfd__h32982 = fpu_div_fState_S4_D_OUT[24:2];
      default: _theResult___fst_sfd__h32982 = 23'd0;
    endcase
  end
  always@(fpu_sqr_fState_S4_D_OUT or
	  out_sfd__h64970 or _theResult___sfd__h64967)
  begin
    case (fpu_sqr_fState_S4_D_OUT[1:0])
      2'b0, 2'b01:
	  CASE_fpu_sqr_fState_S4D_OUT_BITS_1_TO_0_0b0_f_ETC__q3 =
	      fpu_sqr_fState_S4_D_OUT[24:2];
      2'b10:
	  CASE_fpu_sqr_fState_S4D_OUT_BITS_1_TO_0_0b0_f_ETC__q3 =
	      out_sfd__h64970;
      2'b11:
	  CASE_fpu_sqr_fState_S4D_OUT_BITS_1_TO_0_0b0_f_ETC__q3 =
	      _theResult___sfd__h64967;
    endcase
  end
  always@(fpu_sqr_fState_S4_D_OUT or _theResult___sfd__h64967)
  begin
    case (fpu_sqr_fState_S4_D_OUT[1:0])
      2'b0:
	  CASE_fpu_sqr_fState_S4D_OUT_BITS_1_TO_0_0b0_f_ETC__q4 =
	      fpu_sqr_fState_S4_D_OUT[24:2];
      2'b01, 2'b10, 2'b11:
	  CASE_fpu_sqr_fState_S4D_OUT_BITS_1_TO_0_0b0_f_ETC__q4 =
	      _theResult___sfd__h64967;
    endcase
  end
  always@(fpu_sqr_fState_S4_D_OUT or
	  CASE_fpu_sqr_fState_S4D_OUT_BITS_1_TO_0_0b0_f_ETC__q3 or
	  CASE_fpu_sqr_fState_S4D_OUT_BITS_1_TO_0_0b0_f_ETC__q4 or
	  _theResult___sfd__h64967)
  begin
    case (fpu_sqr_fState_S4_D_OUT[36:34])
      3'd0:
	  _theResult___fst_sfd__h65045 =
	      CASE_fpu_sqr_fState_S4D_OUT_BITS_1_TO_0_0b0_f_ETC__q3;
      3'd1:
	  _theResult___fst_sfd__h65045 =
	      CASE_fpu_sqr_fState_S4D_OUT_BITS_1_TO_0_0b0_f_ETC__q4;
      3'd2:
	  _theResult___fst_sfd__h65045 =
	      (fpu_sqr_fState_S4_D_OUT[1:0] == 2'b0 ||
	       fpu_sqr_fState_S4_D_OUT[33]) ?
		fpu_sqr_fState_S4_D_OUT[24:2] :
		_theResult___sfd__h64967;
      3'd3:
	  _theResult___fst_sfd__h65045 =
	      (fpu_sqr_fState_S4_D_OUT[1:0] == 2'b0) ?
		fpu_sqr_fState_S4_D_OUT[24:2] :
		(fpu_sqr_fState_S4_D_OUT[33] ?
		   _theResult___sfd__h64967 :
		   fpu_sqr_fState_S4_D_OUT[24:2]);
      3'd4: _theResult___fst_sfd__h65045 = fpu_sqr_fState_S4_D_OUT[24:2];
      default: _theResult___fst_sfd__h65045 = 23'd0;
    endcase
  end
  always@(fpu_madd_fState_S8_D_OUT or
	  out_sfd__h91459 or _theResult___sfd__h91456)
  begin
    case (fpu_madd_fState_S8_D_OUT[2:1])
      2'b0, 2'b01:
	  CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q5 =
	      fpu_madd_fState_S8_D_OUT[25:3];
      2'b10:
	  CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q5 =
	      out_sfd__h91459;
      2'b11:
	  CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q5 =
	      _theResult___sfd__h91456;
    endcase
  end
  always@(fpu_madd_fState_S8_D_OUT or _theResult___sfd__h91456)
  begin
    case (fpu_madd_fState_S8_D_OUT[2:1])
      2'b0:
	  CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q6 =
	      fpu_madd_fState_S8_D_OUT[25:3];
      2'b01, 2'b10, 2'b11:
	  CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q6 =
	      _theResult___sfd__h91456;
    endcase
  end
  always@(fpu_madd_fState_S8_D_OUT or
	  CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q5 or
	  CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q6 or
	  _theResult___sfd__h91456)
  begin
    case (fpu_madd_fState_S8_D_OUT[38:36])
      3'd0:
	  _theResult___fst_sfd__h91534 =
	      CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q5;
      3'd1:
	  _theResult___fst_sfd__h91534 =
	      CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q6;
      3'd2:
	  _theResult___fst_sfd__h91534 =
	      (fpu_madd_fState_S8_D_OUT[2:1] == 2'b0 ||
	       fpu_madd_fState_S8_D_OUT[34]) ?
		fpu_madd_fState_S8_D_OUT[25:3] :
		_theResult___sfd__h91456;
      3'd3:
	  _theResult___fst_sfd__h91534 =
	      (fpu_madd_fState_S8_D_OUT[2:1] == 2'b0) ?
		fpu_madd_fState_S8_D_OUT[25:3] :
		(fpu_madd_fState_S8_D_OUT[34] ?
		   _theResult___sfd__h91456 :
		   fpu_madd_fState_S8_D_OUT[25:3]);
      3'd4: _theResult___fst_sfd__h91534 = fpu_madd_fState_S8_D_OUT[25:3];
      default: _theResult___fst_sfd__h91534 = 23'd0;
    endcase
  end
  always@(fpu_div_fOperands_S0_D_OUT or
	  fpu_div_fOperands_S0_first__95_BIT_66_61_EQ_fp_ETC___d663)
  begin
    case (fpu_div_fOperands_S0_D_OUT[2:0])
      3'd0, 3'd1: _theResult___fst_exp__h19396 = 8'd255;
      3'd2:
	  _theResult___fst_exp__h19396 =
	      fpu_div_fOperands_S0_first__95_BIT_66_61_EQ_fp_ETC___d663 ?
		8'd255 :
		8'd254;
      3'd3:
	  _theResult___fst_exp__h19396 =
	      fpu_div_fOperands_S0_first__95_BIT_66_61_EQ_fp_ETC___d663 ?
		8'd254 :
		8'd255;
      3'd4: _theResult___fst_exp__h19396 = 8'd254;
      default: _theResult___fst_exp__h19396 = 8'd0;
    endcase
  end
  always@(fpu_div_fOperands_S0_D_OUT or
	  fpu_div_fOperands_S0_first__95_BIT_66_61_EQ_fp_ETC___d663)
  begin
    case (fpu_div_fOperands_S0_D_OUT[2:0])
      3'd0, 3'd1: _theResult___fst_sfd__h19397 = 23'd0;
      3'd2:
	  _theResult___fst_sfd__h19397 =
	      fpu_div_fOperands_S0_first__95_BIT_66_61_EQ_fp_ETC___d663 ?
		23'd0 :
		23'd8388607;
      3'd3:
	  _theResult___fst_sfd__h19397 =
	      fpu_div_fOperands_S0_first__95_BIT_66_61_EQ_fp_ETC___d663 ?
		23'd8388607 :
		23'd0;
      3'd4: _theResult___fst_sfd__h19397 = 23'd8388607;
      default: _theResult___fst_sfd__h19397 = 23'd0;
    endcase
  end
  always@(fpu_div_fOperands_S0_D_OUT or
	  fpu_div_fOperands_S0_first__95_BIT_66_61_EQ_fp_ETC___d663)
  begin
    case (fpu_div_fOperands_S0_D_OUT[2:0])
      3'd0: _theResult___fst_sfd__h19683 = 23'd0;
      3'd1: _theResult___fst_sfd__h19683 = 23'd1;
      3'd2:
	  _theResult___fst_sfd__h19683 =
	      fpu_div_fOperands_S0_first__95_BIT_66_61_EQ_fp_ETC___d663 ?
		23'd1 :
		23'd0;
      3'd3:
	  _theResult___fst_sfd__h19683 =
	      fpu_div_fOperands_S0_first__95_BIT_66_61_EQ_fp_ETC___d663 ?
		23'd0 :
		23'd1;
      default: _theResult___fst_sfd__h19683 = 23'd0;
    endcase
  end
  always@(fpu_div_fOperands_S0_D_OUT or
	  fpu_div_fOperands_S0_first__95_BIT_66_61_EQ_fp_ETC___d663)
  begin
    case (fpu_div_fOperands_S0_D_OUT[2:0])
      3'd0, 3'd1, 3'd2, 3'd3:
	  CASE_fpu_div_fOperands_S0D_OUT_BITS_2_TO_0_0__ETC__q9 =
	      !fpu_div_fOperands_S0_first__95_BIT_66_61_EQ_fp_ETC___d663;
      default: CASE_fpu_div_fOperands_S0D_OUT_BITS_2_TO_0_0__ETC__q9 =
		   fpu_div_fOperands_S0_D_OUT[2:0] == 3'd4 &&
		   !fpu_div_fOperands_S0_first__95_BIT_66_61_EQ_fp_ETC___d663;
    endcase
  end
  always@(fpu_div_fState_S4_D_OUT or
	  out_exp__h32906 or _theResult___exp__h32903)
  begin
    case (fpu_div_fState_S4_D_OUT[1:0])
      2'b0, 2'b01:
	  CASE_fpu_div_fState_S4D_OUT_BITS_1_TO_0_0b0_f_ETC__q13 =
	      fpu_div_fState_S4_D_OUT[32:25];
      2'b10:
	  CASE_fpu_div_fState_S4D_OUT_BITS_1_TO_0_0b0_f_ETC__q13 =
	      out_exp__h32906;
      2'b11:
	  CASE_fpu_div_fState_S4D_OUT_BITS_1_TO_0_0b0_f_ETC__q13 =
	      _theResult___exp__h32903;
    endcase
  end
  always@(fpu_div_fState_S4_D_OUT or _theResult___exp__h32903)
  begin
    case (fpu_div_fState_S4_D_OUT[1:0])
      2'b0:
	  CASE_fpu_div_fState_S4D_OUT_BITS_1_TO_0_0b0_f_ETC__q14 =
	      fpu_div_fState_S4_D_OUT[32:25];
      2'b01, 2'b10, 2'b11:
	  CASE_fpu_div_fState_S4D_OUT_BITS_1_TO_0_0b0_f_ETC__q14 =
	      _theResult___exp__h32903;
    endcase
  end
  always@(fpu_div_fState_S4_D_OUT or
	  CASE_fpu_div_fState_S4D_OUT_BITS_1_TO_0_0b0_f_ETC__q13 or
	  CASE_fpu_div_fState_S4D_OUT_BITS_1_TO_0_0b0_f_ETC__q14 or
	  _theResult___exp__h32903)
  begin
    case (fpu_div_fState_S4_D_OUT[36:34])
      3'd0:
	  _theResult___fst_exp__h32981 =
	      CASE_fpu_div_fState_S4D_OUT_BITS_1_TO_0_0b0_f_ETC__q13;
      3'd1:
	  _theResult___fst_exp__h32981 =
	      CASE_fpu_div_fState_S4D_OUT_BITS_1_TO_0_0b0_f_ETC__q14;
      3'd2:
	  _theResult___fst_exp__h32981 =
	      (fpu_div_fState_S4_D_OUT[1:0] == 2'b0 ||
	       fpu_div_fState_S4_D_OUT[33]) ?
		fpu_div_fState_S4_D_OUT[32:25] :
		_theResult___exp__h32903;
      3'd3:
	  _theResult___fst_exp__h32981 =
	      (fpu_div_fState_S4_D_OUT[1:0] == 2'b0) ?
		fpu_div_fState_S4_D_OUT[32:25] :
		(fpu_div_fState_S4_D_OUT[33] ?
		   _theResult___exp__h32903 :
		   fpu_div_fState_S4_D_OUT[32:25]);
      3'd4: _theResult___fst_exp__h32981 = fpu_div_fState_S4_D_OUT[32:25];
      default: _theResult___fst_exp__h32981 = 8'd0;
    endcase
  end
  always@(fpu_sqr_fState_S4_D_OUT or
	  out_exp__h64969 or _theResult___exp__h64966)
  begin
    case (fpu_sqr_fState_S4_D_OUT[1:0])
      2'b0, 2'b01:
	  CASE_fpu_sqr_fState_S4D_OUT_BITS_1_TO_0_0b0_f_ETC__q20 =
	      fpu_sqr_fState_S4_D_OUT[32:25];
      2'b10:
	  CASE_fpu_sqr_fState_S4D_OUT_BITS_1_TO_0_0b0_f_ETC__q20 =
	      out_exp__h64969;
      2'b11:
	  CASE_fpu_sqr_fState_S4D_OUT_BITS_1_TO_0_0b0_f_ETC__q20 =
	      _theResult___exp__h64966;
    endcase
  end
  always@(fpu_sqr_fState_S4_D_OUT or _theResult___exp__h64966)
  begin
    case (fpu_sqr_fState_S4_D_OUT[1:0])
      2'b0:
	  CASE_fpu_sqr_fState_S4D_OUT_BITS_1_TO_0_0b0_f_ETC__q21 =
	      fpu_sqr_fState_S4_D_OUT[32:25];
      2'b01, 2'b10, 2'b11:
	  CASE_fpu_sqr_fState_S4D_OUT_BITS_1_TO_0_0b0_f_ETC__q21 =
	      _theResult___exp__h64966;
    endcase
  end
  always@(fpu_sqr_fState_S4_D_OUT or
	  CASE_fpu_sqr_fState_S4D_OUT_BITS_1_TO_0_0b0_f_ETC__q20 or
	  CASE_fpu_sqr_fState_S4D_OUT_BITS_1_TO_0_0b0_f_ETC__q21 or
	  _theResult___exp__h64966)
  begin
    case (fpu_sqr_fState_S4_D_OUT[36:34])
      3'd0:
	  _theResult___fst_exp__h65044 =
	      CASE_fpu_sqr_fState_S4D_OUT_BITS_1_TO_0_0b0_f_ETC__q20;
      3'd1:
	  _theResult___fst_exp__h65044 =
	      CASE_fpu_sqr_fState_S4D_OUT_BITS_1_TO_0_0b0_f_ETC__q21;
      3'd2:
	  _theResult___fst_exp__h65044 =
	      (fpu_sqr_fState_S4_D_OUT[1:0] == 2'b0 ||
	       fpu_sqr_fState_S4_D_OUT[33]) ?
		fpu_sqr_fState_S4_D_OUT[32:25] :
		_theResult___exp__h64966;
      3'd3:
	  _theResult___fst_exp__h65044 =
	      (fpu_sqr_fState_S4_D_OUT[1:0] == 2'b0) ?
		fpu_sqr_fState_S4_D_OUT[32:25] :
		(fpu_sqr_fState_S4_D_OUT[33] ?
		   _theResult___exp__h64966 :
		   fpu_sqr_fState_S4_D_OUT[32:25]);
      3'd4: _theResult___fst_exp__h65044 = fpu_sqr_fState_S4_D_OUT[32:25];
      default: _theResult___fst_exp__h65044 = 8'd0;
    endcase
  end
  always@(fpu_madd_fState_S8_D_OUT or
	  out_exp__h91458 or _theResult___exp__h91455)
  begin
    case (fpu_madd_fState_S8_D_OUT[2:1])
      2'b0, 2'b01:
	  CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q30 =
	      fpu_madd_fState_S8_D_OUT[33:26];
      2'b10:
	  CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q30 =
	      out_exp__h91458;
      2'b11:
	  CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q30 =
	      _theResult___exp__h91455;
    endcase
  end
  always@(fpu_madd_fState_S8_D_OUT or _theResult___exp__h91455)
  begin
    case (fpu_madd_fState_S8_D_OUT[2:1])
      2'b0:
	  CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q31 =
	      fpu_madd_fState_S8_D_OUT[33:26];
      2'b01, 2'b10, 2'b11:
	  CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q31 =
	      _theResult___exp__h91455;
    endcase
  end
  always@(fpu_madd_fState_S8_D_OUT or
	  CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q30 or
	  CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q31 or
	  _theResult___exp__h91455)
  begin
    case (fpu_madd_fState_S8_D_OUT[38:36])
      3'd0:
	  _theResult___fst_exp__h91533 =
	      CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q30;
      3'd1:
	  _theResult___fst_exp__h91533 =
	      CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q31;
      3'd2:
	  _theResult___fst_exp__h91533 =
	      (fpu_madd_fState_S8_D_OUT[2:1] == 2'b0 ||
	       fpu_madd_fState_S8_D_OUT[34]) ?
		fpu_madd_fState_S8_D_OUT[33:26] :
		_theResult___exp__h91455;
      3'd3:
	  _theResult___fst_exp__h91533 =
	      (fpu_madd_fState_S8_D_OUT[2:1] == 2'b0) ?
		fpu_madd_fState_S8_D_OUT[33:26] :
		(fpu_madd_fState_S8_D_OUT[34] ?
		   _theResult___exp__h91455 :
		   fpu_madd_fState_S8_D_OUT[33:26]);
      3'd4: _theResult___fst_exp__h91533 = fpu_madd_fState_S8_D_OUT[33:26];
      default: _theResult___fst_exp__h91533 = 8'd0;
    endcase
  end
  always@(fpu_madd_fState_S8_D_OUT)
  begin
    case (fpu_madd_fState_S8_D_OUT[2:1])
      2'b0, 2'b01, 2'b10:
	  CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q32 =
	      fpu_madd_fState_S8_D_OUT[34];
      2'd3:
	  CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q32 =
	      fpu_madd_fState_S8_D_OUT[2:1] == 2'b11 &&
	      fpu_madd_fState_S8_D_OUT[34];
    endcase
  end
  always@(fpu_madd_fState_S8_D_OUT or
	  CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q32)
  begin
    case (fpu_madd_fState_S8_D_OUT[38:36])
      3'd0:
	  CASE_fpu_madd_fState_S8D_OUT_BITS_38_TO_36_0__ETC__q33 =
	      CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q32;
      3'd1:
	  CASE_fpu_madd_fState_S8D_OUT_BITS_38_TO_36_0__ETC__q33 =
	      (fpu_madd_fState_S8_D_OUT[2:1] == 2'b0) ?
		fpu_madd_fState_S8_D_OUT[34] :
		(fpu_madd_fState_S8_D_OUT[2:1] == 2'b01 ||
		 fpu_madd_fState_S8_D_OUT[2:1] == 2'b10 ||
		 fpu_madd_fState_S8_D_OUT[2:1] == 2'b11) &&
		fpu_madd_fState_S8_D_OUT[34];
      3'd2, 3'd3:
	  CASE_fpu_madd_fState_S8D_OUT_BITS_38_TO_36_0__ETC__q33 =
	      fpu_madd_fState_S8_D_OUT[34];
      default: CASE_fpu_madd_fState_S8D_OUT_BITS_38_TO_36_0__ETC__q33 =
		   fpu_madd_fState_S8_D_OUT[38:36] == 3'd4 &&
		   fpu_madd_fState_S8_D_OUT[34];
    endcase
  end
  always@(fpu_madd_fState_S8_D_OUT or
	  IF_0b0_CONCAT_NOT_fpu_madd_fState_S8_first__53_ETC___d2635)
  begin
    case (fpu_madd_fState_S8_D_OUT[2:1])
      2'b0, 2'b01:
	  CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q36 =
	      fpu_madd_fState_S8_D_OUT[33:3];
      2'b10:
	  CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q36 =
	      fpu_madd_fState_S8_D_OUT[3] ?
		IF_0b0_CONCAT_NOT_fpu_madd_fState_S8_first__53_ETC___d2635 :
		fpu_madd_fState_S8_D_OUT[33:3];
      2'b11:
	  CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q36 =
	      IF_0b0_CONCAT_NOT_fpu_madd_fState_S8_first__53_ETC___d2635;
    endcase
  end
  always@(fpu_madd_fState_S8_D_OUT or
	  IF_0b0_CONCAT_NOT_fpu_madd_fState_S8_first__53_ETC___d2635)
  begin
    case (fpu_madd_fState_S8_D_OUT[2:1])
      2'b0:
	  CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q37 =
	      fpu_madd_fState_S8_D_OUT[33:3];
      2'b01, 2'b10, 2'b11:
	  CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q37 =
	      IF_0b0_CONCAT_NOT_fpu_madd_fState_S8_first__53_ETC___d2635;
    endcase
  end
  always@(fpu_madd_fState_S8_D_OUT or
	  CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q36 or
	  CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q37 or
	  IF_0b0_CONCAT_NOT_fpu_madd_fState_S8_first__53_ETC___d2635)
  begin
    case (fpu_madd_fState_S8_D_OUT[38:36])
      3'd0:
	  CASE_fpu_madd_fState_S8D_OUT_BITS_38_TO_36_0__ETC__q38 =
	      CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q36;
      3'd1:
	  CASE_fpu_madd_fState_S8D_OUT_BITS_38_TO_36_0__ETC__q38 =
	      CASE_fpu_madd_fState_S8D_OUT_BITS_2_TO_1_0b0__ETC__q37;
      3'd2:
	  CASE_fpu_madd_fState_S8D_OUT_BITS_38_TO_36_0__ETC__q38 =
	      (fpu_madd_fState_S8_D_OUT[2:1] == 2'b0 ||
	       fpu_madd_fState_S8_D_OUT[34]) ?
		fpu_madd_fState_S8_D_OUT[33:3] :
		IF_0b0_CONCAT_NOT_fpu_madd_fState_S8_first__53_ETC___d2635;
      3'd3:
	  CASE_fpu_madd_fState_S8D_OUT_BITS_38_TO_36_0__ETC__q38 =
	      (fpu_madd_fState_S8_D_OUT[2:1] == 2'b0) ?
		fpu_madd_fState_S8_D_OUT[33:3] :
		(fpu_madd_fState_S8_D_OUT[34] ?
		   IF_0b0_CONCAT_NOT_fpu_madd_fState_S8_first__53_ETC___d2635 :
		   fpu_madd_fState_S8_D_OUT[33:3]);
      3'd4:
	  CASE_fpu_madd_fState_S8D_OUT_BITS_38_TO_36_0__ETC__q38 =
	      fpu_madd_fState_S8_D_OUT[33:3];
      default: CASE_fpu_madd_fState_S8D_OUT_BITS_38_TO_36_0__ETC__q38 = 31'd0;
    endcase
  end
  always@(fpu_div_fState_S4_D_OUT)
  begin
    case (fpu_div_fState_S4_D_OUT[36:34])
      3'd2, 3'd3:
	  CASE_fpu_div_fState_S4D_OUT_BITS_36_TO_34_2_f_ETC__q40 =
	      fpu_div_fState_S4_D_OUT[33];
      default: CASE_fpu_div_fState_S4D_OUT_BITS_36_TO_34_2_f_ETC__q40 =
		   fpu_div_fState_S4_D_OUT[36:34] == 3'd4 &&
		   fpu_div_fState_S4_D_OUT[33];
    endcase
  end
  always@(fpu_div_fState_S4_D_OUT or
	  IF_0b0_CONCAT_NOT_fpu_div_fState_S4_first__078_ETC___d1115)
  begin
    case (fpu_div_fState_S4_D_OUT[36:34])
      3'd2:
	  CASE_fpu_div_fState_S4D_OUT_BITS_36_TO_34_2_I_ETC__q41 =
	      (fpu_div_fState_S4_D_OUT[1:0] == 2'b0 ||
	       fpu_div_fState_S4_D_OUT[33]) ?
		fpu_div_fState_S4_D_OUT[32:2] :
		IF_0b0_CONCAT_NOT_fpu_div_fState_S4_first__078_ETC___d1115;
      3'd3:
	  CASE_fpu_div_fState_S4D_OUT_BITS_36_TO_34_2_I_ETC__q41 =
	      (fpu_div_fState_S4_D_OUT[1:0] == 2'b0) ?
		fpu_div_fState_S4_D_OUT[32:2] :
		(fpu_div_fState_S4_D_OUT[33] ?
		   IF_0b0_CONCAT_NOT_fpu_div_fState_S4_first__078_ETC___d1115 :
		   fpu_div_fState_S4_D_OUT[32:2]);
      3'd4:
	  CASE_fpu_div_fState_S4D_OUT_BITS_36_TO_34_2_I_ETC__q41 =
	      fpu_div_fState_S4_D_OUT[32:2];
      default: CASE_fpu_div_fState_S4D_OUT_BITS_36_TO_34_2_I_ETC__q41 = 31'd0;
    endcase
  end
  always@(fpu_div_fState_S4_D_OUT)
  begin
    case (fpu_div_fState_S4_D_OUT[1:0])
      2'b0, 2'b01, 2'b10:
	  CASE_fpu_div_fState_S4D_OUT_BITS_1_TO_0_0b0_f_ETC__q42 =
	      fpu_div_fState_S4_D_OUT[33];
      2'd3:
	  CASE_fpu_div_fState_S4D_OUT_BITS_1_TO_0_0b0_f_ETC__q42 =
	      fpu_div_fState_S4_D_OUT[1:0] == 2'b11 &&
	      fpu_div_fState_S4_D_OUT[33];
    endcase
  end
  always@(fpu_div_fState_S4_D_OUT or
	  IF_0b0_CONCAT_NOT_fpu_div_fState_S4_first__078_ETC___d1115)
  begin
    case (fpu_div_fState_S4_D_OUT[1:0])
      2'b0, 2'b01:
	  CASE_fpu_div_fState_S4D_OUT_BITS_1_TO_0_0b0_f_ETC__q43 =
	      fpu_div_fState_S4_D_OUT[32:2];
      2'b10:
	  CASE_fpu_div_fState_S4D_OUT_BITS_1_TO_0_0b0_f_ETC__q43 =
	      fpu_div_fState_S4_D_OUT[2] ?
		IF_0b0_CONCAT_NOT_fpu_div_fState_S4_first__078_ETC___d1115 :
		fpu_div_fState_S4_D_OUT[32:2];
      2'b11:
	  CASE_fpu_div_fState_S4D_OUT_BITS_1_TO_0_0b0_f_ETC__q43 =
	      IF_0b0_CONCAT_NOT_fpu_div_fState_S4_first__078_ETC___d1115;
    endcase
  end
  always@(fpu_div_fState_S4_D_OUT or
	  IF_0b0_CONCAT_NOT_fpu_div_fState_S4_first__078_ETC___d1115)
  begin
    case (fpu_div_fState_S4_D_OUT[1:0])
      2'd0: CASE_fpu_div_fState_S4D_OUT_BITS_1_TO_0_0_0_0_ETC__q44 = 31'd0;
      2'b01, 2'b10, 2'b11:
	  CASE_fpu_div_fState_S4D_OUT_BITS_1_TO_0_0_0_0_ETC__q44 =
	      IF_0b0_CONCAT_NOT_fpu_div_fState_S4_first__078_ETC___d1115;
    endcase
  end
  always@(fpu_div_fState_S4_D_OUT or
	  CASE_fpu_div_fState_S4D_OUT_BITS_36_TO_34_2_f_ETC__q40 or
	  CASE_fpu_div_fState_S4D_OUT_BITS_36_TO_34_2_I_ETC__q41 or
	  CASE_fpu_div_fState_S4D_OUT_BITS_1_TO_0_0b0_f_ETC__q42 or
	  CASE_fpu_div_fState_S4D_OUT_BITS_1_TO_0_0b0_f_ETC__q43 or
	  CASE_fpu_div_fState_S4D_OUT_BITS_1_TO_0_0_0_0_ETC__q44)
  begin
    case (fpu_div_fState_S4_D_OUT[36:34])
      3'd0:
	  CASE_fpu_div_fState_S4D_OUT_BITS_36_TO_34_0_C_ETC__q45 =
	      { CASE_fpu_div_fState_S4D_OUT_BITS_1_TO_0_0b0_f_ETC__q42,
		CASE_fpu_div_fState_S4D_OUT_BITS_1_TO_0_0b0_f_ETC__q43 };
      3'd1:
	  CASE_fpu_div_fState_S4D_OUT_BITS_36_TO_34_0_C_ETC__q45 =
	      (fpu_div_fState_S4_D_OUT[1:0] == 2'b0) ?
		fpu_div_fState_S4_D_OUT[33:2] :
		{ (fpu_div_fState_S4_D_OUT[1:0] == 2'b01 ||
		   fpu_div_fState_S4_D_OUT[1:0] == 2'b10 ||
		   fpu_div_fState_S4_D_OUT[1:0] == 2'b11) &&
		  fpu_div_fState_S4_D_OUT[33],
		  CASE_fpu_div_fState_S4D_OUT_BITS_1_TO_0_0_0_0_ETC__q44 };
      default: CASE_fpu_div_fState_S4D_OUT_BITS_36_TO_34_0_C_ETC__q45 =
		   { CASE_fpu_div_fState_S4D_OUT_BITS_36_TO_34_2_f_ETC__q40,
		     CASE_fpu_div_fState_S4D_OUT_BITS_36_TO_34_2_I_ETC__q41 };
    endcase
  end
  always@(fpu_div_fState_S3_D_OUT)
  begin
    case (fpu_div_fState_S3_D_OUT[63:61])
      3'd0, 3'd1, 3'd2, 3'd3:
	  CASE_fpu_div_fState_S3D_OUT_BITS_63_TO_61_0_f_ETC__q46 =
	      fpu_div_fState_S3_D_OUT[60];
      default: CASE_fpu_div_fState_S3D_OUT_BITS_63_TO_61_0_f_ETC__q46 =
		   fpu_div_fState_S3_D_OUT[63:61] == 3'd4 &&
		   fpu_div_fState_S3_D_OUT[60];
    endcase
  end
  always@(fpu_div_fState_S3_D_OUT)
  begin
    case (fpu_div_fState_S3_D_OUT[63:61])
      3'd0, 3'd1:
	  CASE_fpu_div_fState_S3D_OUT_BITS_63_TO_61_0_2_ETC__q47 =
	      31'h7F800000;
      3'd2:
	  CASE_fpu_div_fState_S3D_OUT_BITS_63_TO_61_0_2_ETC__q47 =
	      fpu_div_fState_S3_D_OUT[60] ? 31'h7F7FFFFF : 31'h7F800000;
      3'd3:
	  CASE_fpu_div_fState_S3D_OUT_BITS_63_TO_61_0_2_ETC__q47 =
	      fpu_div_fState_S3_D_OUT[60] ? 31'h7F800000 : 31'h7F7FFFFF;
      3'd4:
	  CASE_fpu_div_fState_S3D_OUT_BITS_63_TO_61_0_2_ETC__q47 =
	      31'h7F7FFFFF;
      default: CASE_fpu_div_fState_S3D_OUT_BITS_63_TO_61_0_2_ETC__q47 = 31'd0;
    endcase
  end
  always@(iFifo_D_OUT)
  begin
    case (iFifo_D_OUT[3:0])
      4'd0, 4'd1:
	  CASE_iFifoD_OUT_BITS_3_TO_0_0_iFifoD_OUT_BIT_ETC__q48 =
	      iFifo_D_OUT[168:137];
      4'd5, 4'd7:
	  CASE_iFifoD_OUT_BITS_3_TO_0_0_iFifoD_OUT_BIT_ETC__q48 =
	      iFifo_D_OUT[38:7];
      4'd6:
	  CASE_iFifoD_OUT_BITS_3_TO_0_0_iFifoD_OUT_BIT_ETC__q48 =
	      { !iFifo_D_OUT[38], iFifo_D_OUT[37:7] };
      default: CASE_iFifoD_OUT_BITS_3_TO_0_0_iFifoD_OUT_BIT_ETC__q48 =
		   { !iFifo_D_OUT[38], iFifo_D_OUT[37:7] };
    endcase
  end
  always@(iFifo_D_OUT)
  begin
    case (iFifo_D_OUT[3:0])
      4'd0:
	  CASE_iFifoD_OUT_BITS_3_TO_0_0_iFifoD_OUT_BIT_ETC__q49 =
	      { iFifo_D_OUT[103:72], 32'd1065353216, iFifo_D_OUT[6:4] };
      4'd1:
	  CASE_iFifoD_OUT_BITS_3_TO_0_0_iFifoD_OUT_BIT_ETC__q49 =
	      { !iFifo_D_OUT[103],
		iFifo_D_OUT[102:72],
		32'd1065353216,
		iFifo_D_OUT[6:4] };
      default: CASE_iFifoD_OUT_BITS_3_TO_0_0_iFifoD_OUT_BIT_ETC__q49 =
		   { iFifo_D_OUT[168:137],
		     iFifo_D_OUT[103:72],
		     iFifo_D_OUT[6:4] };
    endcase
  end
  always@(fpu_sqr_fState_S4_D_OUT)
  begin
    case (fpu_sqr_fState_S4_D_OUT[36:34])
      3'd2, 3'd3:
	  CASE_fpu_sqr_fState_S4D_OUT_BITS_36_TO_34_2_f_ETC__q50 =
	      fpu_sqr_fState_S4_D_OUT[33];
      default: CASE_fpu_sqr_fState_S4D_OUT_BITS_36_TO_34_2_f_ETC__q50 =
		   fpu_sqr_fState_S4_D_OUT[36:34] == 3'd4 &&
		   fpu_sqr_fState_S4_D_OUT[33];
    endcase
  end
  always@(fpu_sqr_fState_S4_D_OUT or
	  IF_0b0_CONCAT_NOT_fpu_sqr_fState_S4_first__653_ETC___d1690)
  begin
    case (fpu_sqr_fState_S4_D_OUT[36:34])
      3'd2:
	  CASE_fpu_sqr_fState_S4D_OUT_BITS_36_TO_34_2_I_ETC__q51 =
	      (fpu_sqr_fState_S4_D_OUT[1:0] == 2'b0 ||
	       fpu_sqr_fState_S4_D_OUT[33]) ?
		fpu_sqr_fState_S4_D_OUT[32:2] :
		IF_0b0_CONCAT_NOT_fpu_sqr_fState_S4_first__653_ETC___d1690;
      3'd3:
	  CASE_fpu_sqr_fState_S4D_OUT_BITS_36_TO_34_2_I_ETC__q51 =
	      (fpu_sqr_fState_S4_D_OUT[1:0] == 2'b0) ?
		fpu_sqr_fState_S4_D_OUT[32:2] :
		(fpu_sqr_fState_S4_D_OUT[33] ?
		   IF_0b0_CONCAT_NOT_fpu_sqr_fState_S4_first__653_ETC___d1690 :
		   fpu_sqr_fState_S4_D_OUT[32:2]);
      3'd4:
	  CASE_fpu_sqr_fState_S4D_OUT_BITS_36_TO_34_2_I_ETC__q51 =
	      fpu_sqr_fState_S4_D_OUT[32:2];
      default: CASE_fpu_sqr_fState_S4D_OUT_BITS_36_TO_34_2_I_ETC__q51 = 31'd0;
    endcase
  end
  always@(fpu_sqr_fState_S4_D_OUT)
  begin
    case (fpu_sqr_fState_S4_D_OUT[1:0])
      2'b0, 2'b01, 2'b10:
	  CASE_fpu_sqr_fState_S4D_OUT_BITS_1_TO_0_0b0_f_ETC__q52 =
	      fpu_sqr_fState_S4_D_OUT[33];
      2'd3:
	  CASE_fpu_sqr_fState_S4D_OUT_BITS_1_TO_0_0b0_f_ETC__q52 =
	      fpu_sqr_fState_S4_D_OUT[1:0] == 2'b11 &&
	      fpu_sqr_fState_S4_D_OUT[33];
    endcase
  end
  always@(fpu_sqr_fState_S4_D_OUT or
	  IF_0b0_CONCAT_NOT_fpu_sqr_fState_S4_first__653_ETC___d1690)
  begin
    case (fpu_sqr_fState_S4_D_OUT[1:0])
      2'b0, 2'b01:
	  CASE_fpu_sqr_fState_S4D_OUT_BITS_1_TO_0_0b0_f_ETC__q53 =
	      fpu_sqr_fState_S4_D_OUT[32:2];
      2'b10:
	  CASE_fpu_sqr_fState_S4D_OUT_BITS_1_TO_0_0b0_f_ETC__q53 =
	      fpu_sqr_fState_S4_D_OUT[2] ?
		IF_0b0_CONCAT_NOT_fpu_sqr_fState_S4_first__653_ETC___d1690 :
		fpu_sqr_fState_S4_D_OUT[32:2];
      2'b11:
	  CASE_fpu_sqr_fState_S4D_OUT_BITS_1_TO_0_0b0_f_ETC__q53 =
	      IF_0b0_CONCAT_NOT_fpu_sqr_fState_S4_first__653_ETC___d1690;
    endcase
  end
  always@(fpu_sqr_fState_S4_D_OUT or
	  IF_0b0_CONCAT_NOT_fpu_sqr_fState_S4_first__653_ETC___d1690)
  begin
    case (fpu_sqr_fState_S4_D_OUT[1:0])
      2'd0: CASE_fpu_sqr_fState_S4D_OUT_BITS_1_TO_0_0_0_0_ETC__q54 = 31'd0;
      2'b01, 2'b10, 2'b11:
	  CASE_fpu_sqr_fState_S4D_OUT_BITS_1_TO_0_0_0_0_ETC__q54 =
	      IF_0b0_CONCAT_NOT_fpu_sqr_fState_S4_first__653_ETC___d1690;
    endcase
  end
  always@(fpu_sqr_fState_S4_D_OUT or
	  CASE_fpu_sqr_fState_S4D_OUT_BITS_36_TO_34_2_f_ETC__q50 or
	  CASE_fpu_sqr_fState_S4D_OUT_BITS_36_TO_34_2_I_ETC__q51 or
	  CASE_fpu_sqr_fState_S4D_OUT_BITS_1_TO_0_0b0_f_ETC__q52 or
	  CASE_fpu_sqr_fState_S4D_OUT_BITS_1_TO_0_0b0_f_ETC__q53 or
	  CASE_fpu_sqr_fState_S4D_OUT_BITS_1_TO_0_0_0_0_ETC__q54)
  begin
    case (fpu_sqr_fState_S4_D_OUT[36:34])
      3'd0:
	  CASE_fpu_sqr_fState_S4D_OUT_BITS_36_TO_34_0_C_ETC__q55 =
	      { CASE_fpu_sqr_fState_S4D_OUT_BITS_1_TO_0_0b0_f_ETC__q52,
		CASE_fpu_sqr_fState_S4D_OUT_BITS_1_TO_0_0b0_f_ETC__q53 };
      3'd1:
	  CASE_fpu_sqr_fState_S4D_OUT_BITS_36_TO_34_0_C_ETC__q55 =
	      (fpu_sqr_fState_S4_D_OUT[1:0] == 2'b0) ?
		fpu_sqr_fState_S4_D_OUT[33:2] :
		{ (fpu_sqr_fState_S4_D_OUT[1:0] == 2'b01 ||
		   fpu_sqr_fState_S4_D_OUT[1:0] == 2'b10 ||
		   fpu_sqr_fState_S4_D_OUT[1:0] == 2'b11) &&
		  fpu_sqr_fState_S4_D_OUT[33],
		  CASE_fpu_sqr_fState_S4D_OUT_BITS_1_TO_0_0_0_0_ETC__q54 };
      default: CASE_fpu_sqr_fState_S4D_OUT_BITS_36_TO_34_0_C_ETC__q55 =
		   { CASE_fpu_sqr_fState_S4D_OUT_BITS_36_TO_34_2_f_ETC__q50,
		     CASE_fpu_sqr_fState_S4D_OUT_BITS_36_TO_34_2_I_ETC__q51 };
    endcase
  end

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        crg_done <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rg_busy <= `BSV_ASSIGNMENT_DELAY 1'd0;
      end
    else
      begin
        if (crg_done_EN) crg_done <= `BSV_ASSIGNMENT_DELAY crg_done_D_IN;
	if (rg_busy_EN) rg_busy <= `BSV_ASSIGNMENT_DELAY rg_busy_D_IN;
      end
    if (rg_b_EN) rg_b <= `BSV_ASSIGNMENT_DELAY rg_b_D_IN;
    if (rg_index_EN) rg_index <= `BSV_ASSIGNMENT_DELAY rg_index_D_IN;
    if (rg_r_EN) rg_r <= `BSV_ASSIGNMENT_DELAY rg_r_D_IN;
    if (rg_res_EN) rg_res <= `BSV_ASSIGNMENT_DELAY rg_res_D_IN;
    if (rg_s_EN) rg_s <= `BSV_ASSIGNMENT_DELAY rg_s_D_IN;
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    crg_done = 1'h0;
    rg_b = 60'hAAAAAAAAAAAAAAA;
    rg_busy = 1'h0;
    rg_index = 5'h0A;
    rg_r = 60'hAAAAAAAAAAAAAAA;
    rg_res = 61'h0AAAAAAAAAAAAAAA;
    rg_s = 60'hAAAAAAAAAAAAAAA;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if (fpu_madd_fResult_S9_EMPTY_N && fpu_div_fResult_S5_EMPTY_N)
	$display("Error: \"FPU.bsv\", line 139, column 15: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_getResFromPipe] and\n  [RL_getResFromPipe_1] ) fired in the same clock cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if ((fpu_madd_fResult_S9_EMPTY_N || fpu_div_fResult_S5_EMPTY_N) &&
	  fpu_sqr_fResult_S5_EMPTY_N)
	$display("Error: \"FPU.bsv\", line 139, column 15: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_getResFromPipe,\n  RL_getResFromPipe_1] and [RL_getResFromPipe_2] ) fired in the same clock\n  cycle.\n");
  end
  // synopsys translate_on
endmodule  // mkFPU

