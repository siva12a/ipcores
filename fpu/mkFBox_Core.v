//
// Generated by Bluespec Compiler
//
//
// Ports:
// Name                         I/O  size props
// RDY_server_reset_request_put   O     1 reg
// RDY_server_reset_response_get  O     1 reg
// valid                          O     1
// word_fst                       O    64
// word_snd                       O     5
// verbosity                      I     4
// CLK                            I     1 clock
// RST_N                          I     1 reset
// req_opcode                     I     7
// req_f7                         I     7
// req_rm                         I     3
// req_rs2                        I     5
// req_v1                         I    64
// req_v2                         I    64
// req_v3                         I    64
// EN_server_reset_request_put    I     1
// EN_server_reset_response_get   I     1
// EN_req                         I     1
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkFBox_Core(verbosity,
		   CLK,
		   RST_N,

		   EN_server_reset_request_put,
		   RDY_server_reset_request_put,

		   EN_server_reset_response_get,
		   RDY_server_reset_response_get,

		   req_opcode,
		   req_f7,
		   req_rm,
		   req_rs2,
		   req_v1,
		   req_v2,
		   req_v3,
		   EN_req,

		   valid,

		   word_fst,

		   word_snd);
  input  [3 : 0] verbosity;
  input  CLK;
  input  RST_N;

  // action method server_reset_request_put
  input  EN_server_reset_request_put;
  output RDY_server_reset_request_put;

  // action method server_reset_response_get
  input  EN_server_reset_response_get;
  output RDY_server_reset_response_get;

  // action method req
  input  [6 : 0] req_opcode;
  input  [6 : 0] req_f7;
  input  [2 : 0] req_rm;
  input  [4 : 0] req_rs2;
  input  [63 : 0] req_v1;
  input  [63 : 0] req_v2;
  input  [63 : 0] req_v3;
  input  EN_req;

  // value method valid
  output valid;

  // value method word_fst
  output [63 : 0] word_fst;

  // value method word_snd
  output [4 : 0] word_snd;

  // signals for module outputs
  wire [63 : 0] word_fst;
  wire [4 : 0] word_snd;
  wire RDY_server_reset_request_put, RDY_server_reset_response_get, valid;

  // inlined wires
  wire [68 : 0] dw_result_wget;
  wire dw_valid_wget, dw_valid_whas;

  // register requestR
  reg [214 : 0] requestR;
  wire [214 : 0] requestR_D_IN;
  wire requestR_EN;

  // register resultR
  reg [69 : 0] resultR;
  reg [69 : 0] resultR_D_IN;
  wire resultR_EN;

  // register stateR
  reg [1 : 0] stateR;
  reg [1 : 0] stateR_D_IN;
  wire stateR_EN;

  // ports of submodule fpu
  reg [201 : 0] fpu_server_core_request_put;
  wire [69 : 0] fpu_server_core_response_get;
  wire fpu_EN_server_core_request_put,
       fpu_EN_server_core_response_get,
       fpu_EN_server_reset_request_put,
       fpu_EN_server_reset_response_get,
       fpu_RDY_server_core_request_put,
       fpu_RDY_server_core_response_get,
       fpu_RDY_server_reset_request_put,
       fpu_RDY_server_reset_response_get;

  // ports of submodule frmFpuF
  wire frmFpuF_CLR, frmFpuF_DEQ, frmFpuF_D_IN, frmFpuF_ENQ;

  // ports of submodule resetReqsF
  wire resetReqsF_CLR,
       resetReqsF_DEQ,
       resetReqsF_EMPTY_N,
       resetReqsF_ENQ,
       resetReqsF_FULL_N;

  // ports of submodule resetRspsF
  wire resetRspsF_CLR,
       resetRspsF_DEQ,
       resetRspsF_EMPTY_N,
       resetRspsF_ENQ,
       resetRspsF_FULL_N;

  // rule scheduling signals
  wire WILL_FIRE_RL_doFADD_S,
       WILL_FIRE_RL_doFCLASS_S,
       WILL_FIRE_RL_doFCVT_S_W,
       WILL_FIRE_RL_doFCVT_S_WU,
       WILL_FIRE_RL_doFCVT_WU_S,
       WILL_FIRE_RL_doFCVT_W_S,
       WILL_FIRE_RL_doFDIV_S,
       WILL_FIRE_RL_doFEQ_S,
       WILL_FIRE_RL_doFLE_S,
       WILL_FIRE_RL_doFLT_S,
       WILL_FIRE_RL_doFMADD_S,
       WILL_FIRE_RL_doFMAX_S,
       WILL_FIRE_RL_doFMIN_S,
       WILL_FIRE_RL_doFMSUB_S,
       WILL_FIRE_RL_doFMUL_S,
       WILL_FIRE_RL_doFMV_W_X,
       WILL_FIRE_RL_doFMV_X_W,
       WILL_FIRE_RL_doFNMADD_S,
       WILL_FIRE_RL_doFNMSUB_S,
       WILL_FIRE_RL_doFSGNJN_S,
       WILL_FIRE_RL_doFSGNJX_S,
       WILL_FIRE_RL_doFSGNJ_S,
       WILL_FIRE_RL_doFSQRT_S,
       WILL_FIRE_RL_doFSUB_S,
       WILL_FIRE_RL_rl_get_fpu_result,
       WILL_FIRE_RL_rl_reset_begin,
       WILL_FIRE_RL_rl_reset_end;

  // inputs to muxes for submodule ports
  wire [214 : 0] MUX_requestR_write_1__VAL_2;
  wire [201 : 0] MUX_fpu_server_core_request_put_1__VAL_1,
		 MUX_fpu_server_core_request_put_1__VAL_2,
		 MUX_fpu_server_core_request_put_1__VAL_3,
		 MUX_fpu_server_core_request_put_1__VAL_4,
		 MUX_fpu_server_core_request_put_1__VAL_5,
		 MUX_fpu_server_core_request_put_1__VAL_6,
		 MUX_fpu_server_core_request_put_1__VAL_7,
		 MUX_fpu_server_core_request_put_1__VAL_8,
		 MUX_fpu_server_core_request_put_1__VAL_9;
  wire [69 : 0] MUX_resultR_write_1__VAL_10,
		MUX_resultR_write_1__VAL_11,
		MUX_resultR_write_1__VAL_12,
		MUX_resultR_write_1__VAL_13,
		MUX_resultR_write_1__VAL_14,
		MUX_resultR_write_1__VAL_15,
		MUX_resultR_write_1__VAL_16,
		MUX_resultR_write_1__VAL_17,
		MUX_resultR_write_1__VAL_18,
		MUX_resultR_write_1__VAL_19,
		MUX_resultR_write_1__VAL_4,
		MUX_resultR_write_1__VAL_5,
		MUX_resultR_write_1__VAL_6,
		MUX_resultR_write_1__VAL_7,
		MUX_resultR_write_1__VAL_8,
		MUX_resultR_write_1__VAL_9;
  wire [68 : 0] MUX_dw_result_wset_1__VAL_1;

  // declarations used by system tasks
  // synopsys translate_off
  reg [31 : 0] v__h1190;
  reg [31 : 0] v__h1673;
  reg [31 : 0] v__h1860;
  reg [31 : 0] v__h2060;
  reg [31 : 0] v__h2274;
  reg [31 : 0] v__h2446;
  reg [31 : 0] v__h2618;
  reg [31 : 0] v__h2797;
  reg [31 : 0] v__h2984;
  reg [31 : 0] v__h3181;
  reg [31 : 0] v__h3364;
  reg [31 : 0] v__h3537;
  reg [31 : 0] v__h3726;
  reg [31 : 0] v__h10932;
  reg [31 : 0] v__h17820;
  reg [31 : 0] v__h19451;
  reg [31 : 0] v__h20238;
  reg [31 : 0] v__h22902;
  reg [31 : 0] v__h25463;
  reg [31 : 0] v__h25623;
  reg [31 : 0] v__h25799;
  reg [31 : 0] v__h27316;
  reg [31 : 0] v__h28421;
  reg [31 : 0] v__h29546;
  reg [31 : 0] v__h1184;
  reg [31 : 0] v__h1667;
  reg [31 : 0] v__h1854;
  reg [31 : 0] v__h2054;
  reg [31 : 0] v__h2268;
  reg [31 : 0] v__h2440;
  reg [31 : 0] v__h2612;
  reg [31 : 0] v__h2791;
  reg [31 : 0] v__h2978;
  reg [31 : 0] v__h3175;
  reg [31 : 0] v__h3358;
  reg [31 : 0] v__h3531;
  reg [31 : 0] v__h3720;
  reg [31 : 0] v__h10926;
  reg [31 : 0] v__h17814;
  reg [31 : 0] v__h19445;
  reg [31 : 0] v__h20232;
  reg [31 : 0] v__h22896;
  reg [31 : 0] v__h25457;
  reg [31 : 0] v__h25617;
  reg [31 : 0] v__h25793;
  reg [31 : 0] v__h27310;
  reg [31 : 0] v__h28415;
  reg [31 : 0] v__h29540;
  // synopsys translate_on

  // remaining internal signals
  reg [22 : 0] CASE_guard453_0b0_sfd___3443_BITS_31_TO_9_0b1__ETC__q19,
	       CASE_guard453_0b0_sfd___3443_BITS_31_TO_9_0b1__ETC__q20,
	       CASE_guard6375_0b0_sfd___36365_BITS_31_TO_9_0b_ETC__q27,
	       CASE_guard6375_0b0_sfd___36365_BITS_31_TO_9_0b_ETC__q28,
	       CASE_guard6901_0b0_sfd___36365_BITS_30_TO_8_0b_ETC__q25,
	       CASE_guard6901_0b0_sfd___36365_BITS_30_TO_8_0b_ETC__q26,
	       CASE_guard983_0b0_sfd___3443_BITS_30_TO_8_0b1__ETC__q21,
	       CASE_guard983_0b0_sfd___3443_BITS_30_TO_8_0b1__ETC__q22,
	       IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d434,
	       IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d452,
	       IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d753,
	       IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d768;
  reg [7 : 0] CASE_guard453_0b0_0_0b1_0_0b10_out_exp872_0b11_ETC__q12,
	      CASE_guard453_0b0_0_0b1_theResult___exp869_0b1_ETC__q11,
	      CASE_guard6375_0b0_0_0b1_0_0b10_out_exp6791_0b_ETC__q6,
	      CASE_guard6375_0b0_0_0b1_theResult___exp6788_0_ETC__q7,
	      CASE_guard6901_0b0_x6916_BITS_7_TO_0_0b1_theRe_ETC__q23,
	      CASE_guard6901_0b0_x6916_BITS_7_TO_0_0b1_x6916_ETC__q24,
	      CASE_guard983_0b0_x998_BITS_7_TO_0_0b1_theResu_ETC__q17,
	      CASE_guard983_0b0_x998_BITS_7_TO_0_0b1_x998_BI_ETC__q18,
	      CASE_requestR_BITS_194_TO_192_0x3_IF_guard6375_ETC__q8,
	      IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d382,
	      IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d411,
	      IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d730;
  reg [2 : 0] IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d45;
  reg CASE_guard453_0b0_requestR_BITS_191_TO_128_BIT_ETC__q13,
      CASE_guard983_0b0_requestR_BITS_191_TO_128_BIT_ETC__q15,
      CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q14,
      CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q16;
  wire [63 : 0] IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d1064,
		IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d1081,
		IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d1157,
		requestR_BITS_127_TO_64__q3,
		requestR_BITS_191_TO_128__q1,
		res___1__h29650,
		res___1__h29885,
		res___1__h29895,
		res___1__h29914,
		res__h21004,
		res__h21240,
		res__h26751,
		res__h28268,
		res__h29373,
		res__h29930,
		res__h30122,
		x__h11019,
		x__h17906,
		x__h19539,
		x__h20328,
		x__h22992,
		x__h25707,
		x__h25885,
		x__h27402,
		x__h28507,
		x__h29630,
		x__h30041,
		x__h3273,
		x__h3449,
		x__h3622,
		x__h3813;
  wire [56 : 0] IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d857,
		b__h18152,
		x__h18828,
		x__h19963;
  wire [32 : 0] _theResult_____2__h18087, out1___1__h18579;
  wire [31 : 0] IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d1059,
		IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d1060,
		IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d1075,
		IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d1077,
		IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d845,
		IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d916,
		IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d977,
		IF_NEG_SEXT_IF_requestR_3_BIT_214_4_THEN_reque_ETC___d912,
		IF_NEG_SEXT_IF_requestR_3_BIT_214_4_THEN_reque_ETC___d914,
		IF_NEG_SEXT_IF_requestR_3_BIT_214_4_THEN_reque_ETC___d975,
		requestR_BITS_191_TO_128_BITS_31_TO_0__q2,
		sfd___3__h16365,
		sfd___3__h9443,
		sfd__h3834,
		x__h17909,
		x__h19542,
		x__h3280,
		x__h3456,
		x__h3629,
		x__h3819;
  wire [24 : 0] sfd__h10013,
		sfd__h16392,
		sfd__h16931,
		sfd__h9470,
		value__h18154;
  wire [22 : 0] IF_IF_IF_IF_requestR_3_BIT_214_4_THEN_requestR_ETC___d428,
		IF_IF_IF_IF_requestR_3_BIT_214_4_THEN_requestR_ETC___d430,
		IF_IF_IF_IF_requestR_3_BIT_214_4_THEN_requestR_ETC___d446,
		IF_IF_IF_IF_requestR_3_BIT_214_4_THEN_requestR_ETC___d448,
		_theResult___fst_sfd__h10520,
		_theResult___fst_sfd__h10523,
		_theResult___fst_sfd__h16885,
		_theResult___fst_sfd__h17437,
		_theResult___fst_sfd__h17440,
		_theResult___fst_sfd__h9967,
		_theResult___sfd__h10423,
		_theResult___sfd__h16789,
		_theResult___sfd__h17341,
		_theResult___sfd__h9870,
		_theResult___snd_fst_sfd__h10526,
		_theResult___snd_fst_sfd__h17443,
		out_sfd__h10426,
		out_sfd__h16792,
		out_sfd__h17344,
		out_sfd__h9873;
  wire [19 : 0] NEG_SEXT_IF_requestR_3_BIT_214_4_THEN_requestR_ETC___d850,
		NEG_SEXT_IF_requestR_3_BIT_214_4_THEN_requestR_ETC___d882,
		NEG_SEXT_IF_requestR_3_BIT_214_4_THEN_requestR_ETC___d883,
		NEG_SEXT_IF_requestR_3_BIT_214_4_THEN_requestR_ETC___d948;
  wire [8 : 0] _32_MINUS_0_CONCAT_IF_IF_IF_requestR_3_BIT_214__ETC___d290,
	       _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_214_4_T_ETC___d649,
	       x__h16916,
	       x__h9998;
  wire [7 : 0] IF_IF_IF_IF_requestR_3_BIT_214_4_THEN_requestR_ETC___d379,
	       IF_IF_IF_IF_requestR_3_BIT_214_4_THEN_requestR_ETC___d405,
	       IF_IF_IF_IF_requestR_3_BIT_214_4_THEN_requestR_ETC___d407,
	       IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d417,
	       _theResult___exp__h10422,
	       _theResult___exp__h16788,
	       _theResult___exp__h17340,
	       _theResult___exp__h9869,
	       _theResult___fst_exp__h10519,
	       _theResult___fst_exp__h10522,
	       _theResult___fst_exp__h16884,
	       _theResult___fst_exp__h17436,
	       _theResult___fst_exp__h17439,
	       _theResult___fst_exp__h9966,
	       _theResult___snd_fst_exp__h10525,
	       _theResult___snd_fst_exp__h10528,
	       _theResult___snd_fst_exp__h10531,
	       _theResult___snd_fst_exp__h17442,
	       _theResult___snd_fst_exp__h17445,
	       _theResult___snd_fst_exp__h17448,
	       din_inc___2_exp__h10565,
	       din_inc___2_exp__h17478,
	       out_exp__h10425,
	       out_exp__h16791,
	       out_exp__h17343,
	       out_exp__h9872,
	       requestR_BITS_191_TO_128_BITS_30_TO_23_MINUS_127__q29;
  wire [6 : 0] requestR_BITS_206_TO_200__q32;
  wire [5 : 0] IF_IF_IF_requestR_3_BIT_214_4_THEN_requestR_3__ETC___d287,
	       IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d646;
  wire [4 : 0] x__h10691,
	       x__h17582,
	       x__h19242,
	       x__h20041,
	       x__h22360,
	       x__h28287;
  wire [1 : 0] IF_sfd___3443_BIT_7_THEN_2_ELSE_0__q10,
	       IF_sfd___3443_BIT_8_THEN_2_ELSE_0__q9,
	       IF_sfd___36365_BIT_7_THEN_2_ELSE_0__q5,
	       IF_sfd___36365_BIT_8_THEN_2_ELSE_0__q4,
	       IF_x8828_BIT_24_THEN_2_ELSE_0__q30,
	       IF_x9963_BIT_24_THEN_2_ELSE_0__q31,
	       guard__h16375,
	       guard__h16901,
	       guard__h18085,
	       guard__h18639,
	       guard__h19742,
	       guard__h9453,
	       guard__h9983;
  wire IF_32_MINUS_0_CONCAT_IF_IF_IF_requestR_3_BIT_2_ETC___d357,
       IF_32_MINUS_0_CONCAT_IF_IF_IF_requestR_3_BIT_2_ETC___d507,
       IF_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_214__ETC___d822,
       IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d1053,
       IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d498,
       IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d501,
       IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d510,
       IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d874,
       IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d906,
       IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d969,
       IF_NEG_SEXT_IF_requestR_3_BIT_214_4_THEN_reque_ETC___d938,
       IF_requestR_3_BIT_214_4_THEN_requestR_3_BITS_1_ETC___d1018,
       IF_requestR_3_BIT_214_4_THEN_requestR_3_BITS_1_ETC___d1029,
       IF_requestR_3_BIT_214_4_THEN_requestR_3_BITS_1_ETC___d1033,
       IF_requestR_3_BIT_214_4_THEN_requestR_3_BITS_1_ETC___d1042,
       IF_requestR_3_BIT_214_4_THEN_requestR_3_BITS_1_ETC___d1044,
       IF_requestR_3_BIT_214_4_THEN_requestR_3_BITS_1_ETC___d1045,
       IF_requestR_3_BIT_214_4_THEN_requestR_3_BITS_1_ETC___d1049,
       IF_requestR_3_BIT_214_4_THEN_requestR_3_BITS_1_ETC___d1050,
       IF_requestR_3_BIT_214_4_THEN_requestR_3_BITS_1_ETC___d1067,
       IF_requestR_3_BIT_214_4_THEN_requestR_3_BITS_1_ETC___d1107,
       IF_requestR_3_BIT_214_4_THEN_requestR_3_BITS_1_ETC___d1117,
       IF_requestR_3_BIT_214_4_THEN_requestR_3_BITS_1_ETC___d1122,
       IF_requestR_3_BIT_214_4_THEN_requestR_3_BITS_1_ETC___d813,
       IF_requestR_3_BIT_214_4_THEN_requestR_3_BITS_1_ETC___d816,
       IF_requestR_3_BIT_214_4_THEN_requestR_3_BITS_1_ETC___d825,
       IF_requestR_3_BIT_214_4_THEN_requestR_3_BITS_1_ETC___d987,
       IF_requestR_3_BIT_214_4_THEN_requestR_3_BITS_1_ETC___d998,
       NEG_SEXT_IF_requestR_3_BIT_214_4_THEN_requestR_ETC___d885,
       NEG_SEXT_IF_requestR_3_BIT_214_4_THEN_requestR_ETC___d950,
       NOT_IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_ETC___d295,
       NOT_IF_requestR_3_BIT_214_4_THEN_requestR_3_BI_ETC___d1057,
       NOT_IF_requestR_3_BIT_214_4_THEN_requestR_3_BI_ETC___d1118,
       NOT_IF_requestR_3_BIT_214_4_THEN_requestR_3_BI_ETC___d1143,
       NOT_IF_requestR_3_BIT_214_4_THEN_requestR_3_BI_ETC___d739,
       NOT_IF_requestR_3_BIT_214_4_THEN_requestR_3_BI_ETC___d927,
       NOT_IF_requestR_3_BIT_214_4_THEN_requestR_3_BI_ETC___d992,
       NOT_verbosity_ULE_1_6___d27,
       _32_MINUS_0_CONCAT_IF_IF_IF_requestR_3_BIT_214__ETC___d291,
       _32_MINUS_0_CONCAT_IF_IF_IF_requestR_3_BIT_214__ETC___d293,
       _32_MINUS_0_CONCAT_IF_IF_IF_requestR_3_BIT_214__ETC___d296,
       _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_214_4_T_ETC___d650,
       _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_214_4_T_ETC___d651,
       _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_214_4_T_ETC___d652;

  // action method server_reset_request_put
  assign RDY_server_reset_request_put = resetReqsF_FULL_N ;

  // action method server_reset_response_get
  assign RDY_server_reset_response_get = resetRspsF_EMPTY_N ;

  // value method valid
  assign valid = dw_valid_whas && dw_valid_wget ;

  // value method word_fst
  assign word_fst = dw_result_wget[68:5] ;

  // value method word_snd
  assign word_snd = dw_result_wget[4:0] ;

  // submodule fpu
  mkFPU fpu(.CLK(CLK),
	    .RST_N(RST_N),
	    .server_core_request_put(fpu_server_core_request_put),
	    .EN_server_core_request_put(fpu_EN_server_core_request_put),
	    .EN_server_core_response_get(fpu_EN_server_core_response_get),
	    .EN_server_reset_request_put(fpu_EN_server_reset_request_put),
	    .EN_server_reset_response_get(fpu_EN_server_reset_response_get),
	    .RDY_server_core_request_put(fpu_RDY_server_core_request_put),
	    .server_core_response_get(fpu_server_core_response_get),
	    .RDY_server_core_response_get(fpu_RDY_server_core_response_get),
	    .RDY_server_reset_request_put(fpu_RDY_server_reset_request_put),
	    .RDY_server_reset_response_get(fpu_RDY_server_reset_response_get));

  // submodule frmFpuF
  FIFO2 #(.width(32'd1), .guarded(1'd1)) frmFpuF(.RST(RST_N),
						 .CLK(CLK),
						 .D_IN(frmFpuF_D_IN),
						 .ENQ(frmFpuF_ENQ),
						 .DEQ(frmFpuF_DEQ),
						 .CLR(frmFpuF_CLR),
						 .D_OUT(),
						 .FULL_N(),
						 .EMPTY_N());

  // submodule resetReqsF
  FIFO20 #(.guarded(1'd1)) resetReqsF(.RST(RST_N),
				      .CLK(CLK),
				      .ENQ(resetReqsF_ENQ),
				      .DEQ(resetReqsF_DEQ),
				      .CLR(resetReqsF_CLR),
				      .FULL_N(resetReqsF_FULL_N),
				      .EMPTY_N(resetReqsF_EMPTY_N));

  // submodule resetRspsF
  FIFO20 #(.guarded(1'd1)) resetRspsF(.RST(RST_N),
				      .CLK(CLK),
				      .ENQ(resetRspsF_ENQ),
				      .DEQ(resetRspsF_DEQ),
				      .CLR(resetRspsF_CLR),
				      .FULL_N(resetRspsF_FULL_N),
				      .EMPTY_N(resetRspsF_EMPTY_N));

  // rule RL_rl_reset_end
  assign WILL_FIRE_RL_rl_reset_end =
	     fpu_RDY_server_reset_response_get && resetRspsF_FULL_N &&
	     stateR == 2'd0 ;

  // rule RL_doFADD_S
  assign WILL_FIRE_RL_doFADD_S =
	     fpu_RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h0 ;

  // rule RL_doFSUB_S
  assign WILL_FIRE_RL_doFSUB_S =
	     fpu_RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h04 ;

  // rule RL_doFMUL_S
  assign WILL_FIRE_RL_doFMUL_S =
	     fpu_RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h08 ;

  // rule RL_doFMADD_S
  assign WILL_FIRE_RL_doFMADD_S =
	     fpu_RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1000011 &&
	     requestR_BITS_206_TO_200__q32[1:0] == 2'd0 ;

  // rule RL_doFMSUB_S
  assign WILL_FIRE_RL_doFMSUB_S =
	     fpu_RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1000111 &&
	     requestR_BITS_206_TO_200__q32[1:0] == 2'd0 ;

  // rule RL_doFNMADD_S
  assign WILL_FIRE_RL_doFNMADD_S =
	     fpu_RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1001111 &&
	     requestR_BITS_206_TO_200__q32[1:0] == 2'd0 ;

  // rule RL_doFNMSUB_S
  assign WILL_FIRE_RL_doFNMSUB_S =
	     fpu_RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1001011 &&
	     requestR_BITS_206_TO_200__q32[1:0] == 2'd0 ;

  // rule RL_doFDIV_S
  assign WILL_FIRE_RL_doFDIV_S =
	     fpu_RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h0C ;

  // rule RL_doFSQRT_S
  assign WILL_FIRE_RL_doFSQRT_S =
	     fpu_RDY_server_core_request_put && requestR[214] &&
	     stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h2C ;

  // rule RL_doFSGNJ_S
  assign WILL_FIRE_RL_doFSGNJ_S =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h10 &&
	     requestR[194:192] == 3'h0 ;

  // rule RL_doFSGNJN_S
  assign WILL_FIRE_RL_doFSGNJN_S =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h10 &&
	     requestR[194:192] == 3'h1 ;

  // rule RL_doFSGNJX_S
  assign WILL_FIRE_RL_doFSGNJX_S =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h10 &&
	     requestR[194:192] == 3'h2 ;

  // rule RL_doFCVT_S_W
  assign WILL_FIRE_RL_doFCVT_S_W =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h68 &&
	     requestR[199:195] == 5'd0 ;

  // rule RL_doFCVT_S_WU
  assign WILL_FIRE_RL_doFCVT_S_WU =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h68 &&
	     requestR[199:195] == 5'd1 ;

  // rule RL_doFCVT_W_S
  assign WILL_FIRE_RL_doFCVT_W_S =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h60 &&
	     requestR[199:195] == 5'd0 ;

  // rule RL_doFCVT_WU_S
  assign WILL_FIRE_RL_doFCVT_WU_S =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h60 &&
	     requestR[199:195] == 5'd1 ;

  // rule RL_doFMIN_S
  assign WILL_FIRE_RL_doFMIN_S =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h14 &&
	     requestR[194:192] == 3'h0 ;

  // rule RL_doFMAX_S
  assign WILL_FIRE_RL_doFMAX_S =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h14 &&
	     requestR[194:192] == 3'h1 ;

  // rule RL_doFMV_W_X
  assign WILL_FIRE_RL_doFMV_W_X =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h78 &&
	     requestR[194:192] == 3'h0 ;

  // rule RL_doFMV_X_W
  assign WILL_FIRE_RL_doFMV_X_W =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h70 &&
	     requestR[194:192] == 3'h0 ;

  // rule RL_doFEQ_S
  assign WILL_FIRE_RL_doFEQ_S =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h50 &&
	     requestR[194:192] == 3'h2 ;

  // rule RL_doFLT_S
  assign WILL_FIRE_RL_doFLT_S =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h50 &&
	     requestR[194:192] == 3'h1 ;

  // rule RL_doFLE_S
  assign WILL_FIRE_RL_doFLE_S =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h50 &&
	     requestR[194:192] == 3'h0 ;

  // rule RL_doFCLASS_S
  assign WILL_FIRE_RL_doFCLASS_S =
	     requestR[214] && stateR == 2'd1 &&
	     requestR[213:207] == 7'b1010011 &&
	     requestR[206:200] == 7'h70 &&
	     requestR[194:192] == 3'h1 ;

  // rule RL_rl_get_fpu_result
  assign WILL_FIRE_RL_rl_get_fpu_result =
	     fpu_RDY_server_core_response_get && stateR == 2'd2 ;

  // rule RL_rl_reset_begin
  assign WILL_FIRE_RL_rl_reset_begin =
	     fpu_RDY_server_reset_request_put && resetReqsF_EMPTY_N ;

  // inputs to muxes for submodule ports
  assign MUX_dw_result_wset_1__VAL_1 =
	     { x__h30041, fpu_server_core_response_get[4:0] } ;
  assign MUX_fpu_server_core_request_put_1__VAL_1 =
	     { 1'd1,
	       requestR[191:128],
	       1'd1,
	       requestR[127:64],
	       65'h0AAAAAAAAAAAAAAAA,
	       IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d45,
	       4'd0 } ;
  assign MUX_fpu_server_core_request_put_1__VAL_2 =
	     { 1'd1,
	       requestR[191:128],
	       1'd1,
	       requestR[127:64],
	       65'h0AAAAAAAAAAAAAAAA,
	       IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d45,
	       4'd1 } ;
  assign MUX_fpu_server_core_request_put_1__VAL_3 =
	     { 1'd1,
	       requestR[191:128],
	       1'd1,
	       requestR[127:64],
	       65'h0AAAAAAAAAAAAAAAA,
	       IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d45,
	       4'd2 } ;
  assign MUX_fpu_server_core_request_put_1__VAL_4 =
	     { 1'd1,
	       requestR[191:128],
	       1'd1,
	       requestR[127:64],
	       1'd1,
	       requestR[63:0],
	       IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d45,
	       4'd5 } ;
  assign MUX_fpu_server_core_request_put_1__VAL_5 =
	     { 1'd1,
	       requestR[191:128],
	       1'd1,
	       requestR[127:64],
	       1'd1,
	       requestR[63:0],
	       IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d45,
	       4'd6 } ;
  assign MUX_fpu_server_core_request_put_1__VAL_6 =
	     { 1'd1,
	       requestR[191:128],
	       1'd1,
	       requestR[127:64],
	       1'd1,
	       requestR[63:0],
	       IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d45,
	       4'd7 } ;
  assign MUX_fpu_server_core_request_put_1__VAL_7 =
	     { 1'd1,
	       requestR[191:128],
	       1'd1,
	       requestR[127:64],
	       1'd1,
	       requestR[63:0],
	       IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d45,
	       4'd8 } ;
  assign MUX_fpu_server_core_request_put_1__VAL_8 =
	     { 1'd1,
	       requestR[191:128],
	       1'd1,
	       requestR[127:64],
	       65'h0AAAAAAAAAAAAAAAA,
	       IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d45,
	       4'd3 } ;
  assign MUX_fpu_server_core_request_put_1__VAL_9 =
	     { 1'd1,
	       requestR[191:128],
	       130'h15555555555555554AAAAAAAAAAAAAAAA,
	       IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d45,
	       4'd4 } ;
  assign MUX_requestR_write_1__VAL_2 =
	     { 1'd1,
	       req_opcode,
	       req_f7,
	       req_rs2,
	       req_rm,
	       req_v1,
	       req_v2,
	       req_v3 } ;
  assign MUX_resultR_write_1__VAL_4 =
	     { 1'd1, x__h30041, fpu_server_core_response_get[4:0] } ;
  assign MUX_resultR_write_1__VAL_5 = { 1'd1, x__h29630, 5'd0 } ;
  assign MUX_resultR_write_1__VAL_6 = { 1'd1, x__h28507, x__h28287 } ;
  assign MUX_resultR_write_1__VAL_7 = { 1'd1, x__h27402, x__h28287 } ;
  assign MUX_resultR_write_1__VAL_8 = { 1'd1, x__h25885, x__h22360 } ;
  assign MUX_resultR_write_1__VAL_9 = { 1'd1, x__h25707, 5'd0 } ;
  assign MUX_resultR_write_1__VAL_10 = { 1'd1, res__h21240, 5'd0 } ;
  assign MUX_resultR_write_1__VAL_11 = { 1'd1, x__h22992, x__h22360 } ;
  assign MUX_resultR_write_1__VAL_12 = { 1'd1, x__h20328, x__h22360 } ;
  assign MUX_resultR_write_1__VAL_13 = { 1'd1, x__h19539, x__h20041 } ;
  assign MUX_resultR_write_1__VAL_14 = { 1'd1, x__h17906, x__h19242 } ;
  assign MUX_resultR_write_1__VAL_15 = { 1'd1, x__h11019, x__h17582 } ;
  assign MUX_resultR_write_1__VAL_16 = { 1'd1, x__h3813, x__h10691 } ;
  assign MUX_resultR_write_1__VAL_17 = { 1'd1, x__h3622, 5'd0 } ;
  assign MUX_resultR_write_1__VAL_18 = { 1'd1, x__h3449, 5'd0 } ;
  assign MUX_resultR_write_1__VAL_19 = { 1'd1, x__h3273, 5'd0 } ;

  // inlined wires
  assign dw_valid_wget = stateR != 2'd3 || resultR[69] ;
  assign dw_valid_whas = stateR == 2'd3 || WILL_FIRE_RL_rl_get_fpu_result ;
  assign dw_result_wget =
	     WILL_FIRE_RL_rl_get_fpu_result ?
	       MUX_dw_result_wset_1__VAL_1 :
	       resultR[68:0] ;

  // register requestR
  assign requestR_D_IN =
	     WILL_FIRE_RL_rl_reset_begin ?
	       215'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA :
	       MUX_requestR_write_1__VAL_2 ;
  assign requestR_EN = WILL_FIRE_RL_rl_reset_begin || EN_req ;

  // register resultR
  always@(WILL_FIRE_RL_rl_reset_begin or
	  EN_req or
	  stateR or
	  WILL_FIRE_RL_rl_get_fpu_result or
	  MUX_resultR_write_1__VAL_4 or
	  WILL_FIRE_RL_doFCLASS_S or
	  MUX_resultR_write_1__VAL_5 or
	  WILL_FIRE_RL_doFLE_S or
	  MUX_resultR_write_1__VAL_6 or
	  WILL_FIRE_RL_doFLT_S or
	  MUX_resultR_write_1__VAL_7 or
	  WILL_FIRE_RL_doFEQ_S or
	  MUX_resultR_write_1__VAL_8 or
	  WILL_FIRE_RL_doFMV_X_W or
	  MUX_resultR_write_1__VAL_9 or
	  WILL_FIRE_RL_doFMV_W_X or
	  MUX_resultR_write_1__VAL_10 or
	  WILL_FIRE_RL_doFMAX_S or
	  MUX_resultR_write_1__VAL_11 or
	  WILL_FIRE_RL_doFMIN_S or
	  MUX_resultR_write_1__VAL_12 or
	  WILL_FIRE_RL_doFCVT_WU_S or
	  MUX_resultR_write_1__VAL_13 or
	  WILL_FIRE_RL_doFCVT_W_S or
	  MUX_resultR_write_1__VAL_14 or
	  WILL_FIRE_RL_doFCVT_S_WU or
	  MUX_resultR_write_1__VAL_15 or
	  WILL_FIRE_RL_doFCVT_S_W or
	  MUX_resultR_write_1__VAL_16 or
	  WILL_FIRE_RL_doFSGNJX_S or
	  MUX_resultR_write_1__VAL_17 or
	  WILL_FIRE_RL_doFSGNJN_S or
	  MUX_resultR_write_1__VAL_18 or
	  WILL_FIRE_RL_doFSGNJ_S or MUX_resultR_write_1__VAL_19)
  case (1'b1)
    WILL_FIRE_RL_rl_reset_begin || EN_req || stateR == 2'd3:
	resultR_D_IN = 70'h0AAAAAAAAAAAAAAAAA;
    WILL_FIRE_RL_rl_get_fpu_result: resultR_D_IN = MUX_resultR_write_1__VAL_4;
    WILL_FIRE_RL_doFCLASS_S: resultR_D_IN = MUX_resultR_write_1__VAL_5;
    WILL_FIRE_RL_doFLE_S: resultR_D_IN = MUX_resultR_write_1__VAL_6;
    WILL_FIRE_RL_doFLT_S: resultR_D_IN = MUX_resultR_write_1__VAL_7;
    WILL_FIRE_RL_doFEQ_S: resultR_D_IN = MUX_resultR_write_1__VAL_8;
    WILL_FIRE_RL_doFMV_X_W: resultR_D_IN = MUX_resultR_write_1__VAL_9;
    WILL_FIRE_RL_doFMV_W_X: resultR_D_IN = MUX_resultR_write_1__VAL_10;
    WILL_FIRE_RL_doFMAX_S: resultR_D_IN = MUX_resultR_write_1__VAL_11;
    WILL_FIRE_RL_doFMIN_S: resultR_D_IN = MUX_resultR_write_1__VAL_12;
    WILL_FIRE_RL_doFCVT_WU_S: resultR_D_IN = MUX_resultR_write_1__VAL_13;
    WILL_FIRE_RL_doFCVT_W_S: resultR_D_IN = MUX_resultR_write_1__VAL_14;
    WILL_FIRE_RL_doFCVT_S_WU: resultR_D_IN = MUX_resultR_write_1__VAL_15;
    WILL_FIRE_RL_doFCVT_S_W: resultR_D_IN = MUX_resultR_write_1__VAL_16;
    WILL_FIRE_RL_doFSGNJX_S: resultR_D_IN = MUX_resultR_write_1__VAL_17;
    WILL_FIRE_RL_doFSGNJN_S: resultR_D_IN = MUX_resultR_write_1__VAL_18;
    WILL_FIRE_RL_doFSGNJ_S: resultR_D_IN = MUX_resultR_write_1__VAL_19;
    default: resultR_D_IN = 70'h2AAAAAAAAAAAAAAAAA /* unspecified value */ ;
  endcase
  assign resultR_EN =
	     stateR == 2'd3 || WILL_FIRE_RL_rl_reset_begin || EN_req ||
	     WILL_FIRE_RL_doFSGNJ_S ||
	     WILL_FIRE_RL_doFSGNJN_S ||
	     WILL_FIRE_RL_doFSGNJX_S ||
	     WILL_FIRE_RL_doFCVT_S_W ||
	     WILL_FIRE_RL_doFCVT_S_WU ||
	     WILL_FIRE_RL_doFCVT_W_S ||
	     WILL_FIRE_RL_doFCVT_WU_S ||
	     WILL_FIRE_RL_doFMIN_S ||
	     WILL_FIRE_RL_doFMAX_S ||
	     WILL_FIRE_RL_doFMV_W_X ||
	     WILL_FIRE_RL_doFMV_X_W ||
	     WILL_FIRE_RL_doFEQ_S ||
	     WILL_FIRE_RL_doFLT_S ||
	     WILL_FIRE_RL_doFLE_S ||
	     WILL_FIRE_RL_doFCLASS_S ||
	     WILL_FIRE_RL_rl_get_fpu_result ;

  // register stateR
  always@(WILL_FIRE_RL_rl_reset_begin or
	  EN_req or
	  WILL_FIRE_RL_rl_get_fpu_result or
	  WILL_FIRE_RL_doFCLASS_S or
	  WILL_FIRE_RL_doFLE_S or
	  WILL_FIRE_RL_doFLT_S or
	  WILL_FIRE_RL_doFEQ_S or
	  WILL_FIRE_RL_doFMV_X_W or
	  WILL_FIRE_RL_doFMV_W_X or
	  WILL_FIRE_RL_doFMAX_S or
	  WILL_FIRE_RL_doFMIN_S or
	  WILL_FIRE_RL_doFCVT_WU_S or
	  WILL_FIRE_RL_doFCVT_W_S or
	  WILL_FIRE_RL_doFCVT_S_WU or
	  WILL_FIRE_RL_doFCVT_S_W or
	  WILL_FIRE_RL_doFSGNJX_S or
	  WILL_FIRE_RL_doFSGNJN_S or
	  WILL_FIRE_RL_doFSGNJ_S or
	  WILL_FIRE_RL_doFSQRT_S or
	  WILL_FIRE_RL_doFDIV_S or
	  WILL_FIRE_RL_doFNMSUB_S or
	  WILL_FIRE_RL_doFNMADD_S or
	  WILL_FIRE_RL_doFMSUB_S or
	  WILL_FIRE_RL_doFMADD_S or
	  WILL_FIRE_RL_doFMUL_S or
	  WILL_FIRE_RL_doFSUB_S or
	  WILL_FIRE_RL_doFADD_S or WILL_FIRE_RL_rl_reset_end)
  case (1'b1)
    WILL_FIRE_RL_rl_reset_begin: stateR_D_IN = 2'd0;
    EN_req: stateR_D_IN = 2'd1;
    WILL_FIRE_RL_rl_get_fpu_result || WILL_FIRE_RL_doFCLASS_S ||
    WILL_FIRE_RL_doFLE_S ||
    WILL_FIRE_RL_doFLT_S ||
    WILL_FIRE_RL_doFEQ_S ||
    WILL_FIRE_RL_doFMV_X_W ||
    WILL_FIRE_RL_doFMV_W_X ||
    WILL_FIRE_RL_doFMAX_S ||
    WILL_FIRE_RL_doFMIN_S ||
    WILL_FIRE_RL_doFCVT_WU_S ||
    WILL_FIRE_RL_doFCVT_W_S ||
    WILL_FIRE_RL_doFCVT_S_WU ||
    WILL_FIRE_RL_doFCVT_S_W ||
    WILL_FIRE_RL_doFSGNJX_S ||
    WILL_FIRE_RL_doFSGNJN_S ||
    WILL_FIRE_RL_doFSGNJ_S:
	stateR_D_IN = 2'd3;
    WILL_FIRE_RL_doFSQRT_S || WILL_FIRE_RL_doFDIV_S ||
    WILL_FIRE_RL_doFNMSUB_S ||
    WILL_FIRE_RL_doFNMADD_S ||
    WILL_FIRE_RL_doFMSUB_S ||
    WILL_FIRE_RL_doFMADD_S ||
    WILL_FIRE_RL_doFMUL_S ||
    WILL_FIRE_RL_doFSUB_S ||
    WILL_FIRE_RL_doFADD_S:
	stateR_D_IN = 2'd2;
    WILL_FIRE_RL_rl_reset_end: stateR_D_IN = 2'd1;
    default: stateR_D_IN = 2'b10 /* unspecified value */ ;
  endcase
  assign stateR_EN =
	     WILL_FIRE_RL_rl_reset_begin || WILL_FIRE_RL_rl_reset_end ||
	     EN_req ||
	     WILL_FIRE_RL_doFSQRT_S ||
	     WILL_FIRE_RL_doFDIV_S ||
	     WILL_FIRE_RL_doFNMSUB_S ||
	     WILL_FIRE_RL_doFNMADD_S ||
	     WILL_FIRE_RL_doFMSUB_S ||
	     WILL_FIRE_RL_doFMADD_S ||
	     WILL_FIRE_RL_doFMUL_S ||
	     WILL_FIRE_RL_doFSUB_S ||
	     WILL_FIRE_RL_doFADD_S ||
	     WILL_FIRE_RL_rl_get_fpu_result ||
	     WILL_FIRE_RL_doFCLASS_S ||
	     WILL_FIRE_RL_doFLE_S ||
	     WILL_FIRE_RL_doFLT_S ||
	     WILL_FIRE_RL_doFEQ_S ||
	     WILL_FIRE_RL_doFMV_X_W ||
	     WILL_FIRE_RL_doFMV_W_X ||
	     WILL_FIRE_RL_doFMAX_S ||
	     WILL_FIRE_RL_doFMIN_S ||
	     WILL_FIRE_RL_doFCVT_WU_S ||
	     WILL_FIRE_RL_doFCVT_W_S ||
	     WILL_FIRE_RL_doFCVT_S_WU ||
	     WILL_FIRE_RL_doFCVT_S_W ||
	     WILL_FIRE_RL_doFSGNJX_S ||
	     WILL_FIRE_RL_doFSGNJN_S ||
	     WILL_FIRE_RL_doFSGNJ_S ;

  // submodule fpu
  always@(WILL_FIRE_RL_doFADD_S or
	  MUX_fpu_server_core_request_put_1__VAL_1 or
	  WILL_FIRE_RL_doFSUB_S or
	  MUX_fpu_server_core_request_put_1__VAL_2 or
	  WILL_FIRE_RL_doFMUL_S or
	  MUX_fpu_server_core_request_put_1__VAL_3 or
	  WILL_FIRE_RL_doFMADD_S or
	  MUX_fpu_server_core_request_put_1__VAL_4 or
	  WILL_FIRE_RL_doFMSUB_S or
	  MUX_fpu_server_core_request_put_1__VAL_5 or
	  WILL_FIRE_RL_doFNMADD_S or
	  MUX_fpu_server_core_request_put_1__VAL_6 or
	  WILL_FIRE_RL_doFNMSUB_S or
	  MUX_fpu_server_core_request_put_1__VAL_7 or
	  WILL_FIRE_RL_doFDIV_S or
	  MUX_fpu_server_core_request_put_1__VAL_8 or
	  WILL_FIRE_RL_doFSQRT_S or MUX_fpu_server_core_request_put_1__VAL_9)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_doFADD_S:
	  fpu_server_core_request_put =
	      MUX_fpu_server_core_request_put_1__VAL_1;
      WILL_FIRE_RL_doFSUB_S:
	  fpu_server_core_request_put =
	      MUX_fpu_server_core_request_put_1__VAL_2;
      WILL_FIRE_RL_doFMUL_S:
	  fpu_server_core_request_put =
	      MUX_fpu_server_core_request_put_1__VAL_3;
      WILL_FIRE_RL_doFMADD_S:
	  fpu_server_core_request_put =
	      MUX_fpu_server_core_request_put_1__VAL_4;
      WILL_FIRE_RL_doFMSUB_S:
	  fpu_server_core_request_put =
	      MUX_fpu_server_core_request_put_1__VAL_5;
      WILL_FIRE_RL_doFNMADD_S:
	  fpu_server_core_request_put =
	      MUX_fpu_server_core_request_put_1__VAL_6;
      WILL_FIRE_RL_doFNMSUB_S:
	  fpu_server_core_request_put =
	      MUX_fpu_server_core_request_put_1__VAL_7;
      WILL_FIRE_RL_doFDIV_S:
	  fpu_server_core_request_put =
	      MUX_fpu_server_core_request_put_1__VAL_8;
      WILL_FIRE_RL_doFSQRT_S:
	  fpu_server_core_request_put =
	      MUX_fpu_server_core_request_put_1__VAL_9;
      default: fpu_server_core_request_put =
		   202'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign fpu_EN_server_core_request_put =
	     WILL_FIRE_RL_doFADD_S || WILL_FIRE_RL_doFSUB_S ||
	     WILL_FIRE_RL_doFMUL_S ||
	     WILL_FIRE_RL_doFMADD_S ||
	     WILL_FIRE_RL_doFMSUB_S ||
	     WILL_FIRE_RL_doFNMADD_S ||
	     WILL_FIRE_RL_doFNMSUB_S ||
	     WILL_FIRE_RL_doFDIV_S ||
	     WILL_FIRE_RL_doFSQRT_S ;
  assign fpu_EN_server_core_response_get = WILL_FIRE_RL_rl_get_fpu_result ;
  assign fpu_EN_server_reset_request_put = WILL_FIRE_RL_rl_reset_begin ;
  assign fpu_EN_server_reset_response_get = WILL_FIRE_RL_rl_reset_end ;

  // submodule frmFpuF
  assign frmFpuF_D_IN = 1'b0 ;
  assign frmFpuF_ENQ = 1'b0 ;
  assign frmFpuF_DEQ = 1'b0 ;
  assign frmFpuF_CLR = WILL_FIRE_RL_rl_reset_begin ;

  // submodule resetReqsF
  assign resetReqsF_ENQ = EN_server_reset_request_put ;
  assign resetReqsF_DEQ = WILL_FIRE_RL_rl_reset_begin ;
  assign resetReqsF_CLR = 1'b0 ;

  // submodule resetRspsF
  assign resetRspsF_ENQ = WILL_FIRE_RL_rl_reset_end ;
  assign resetRspsF_DEQ = EN_server_reset_response_get ;
  assign resetRspsF_CLR = 1'b0 ;

  // remaining internal signals
  assign IF_32_MINUS_0_CONCAT_IF_IF_IF_requestR_3_BIT_2_ETC___d357 =
	     _32_MINUS_0_CONCAT_IF_IF_IF_requestR_3_BIT_214__ETC___d296 ?
	       ((requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
		 requestR[194:192] != 3'h3 &&
		 requestR[194:192] != 3'h4) ?
		  CASE_guard453_0b0_requestR_BITS_191_TO_128_BIT_ETC__q13 :
		  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q14) :
	       ((x__h9998[7:0] == 8'd255) ?
		  requestR_BITS_191_TO_128__q1[31] :
		  ((requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
		    requestR[194:192] != 3'h3 &&
		    requestR[194:192] != 3'h4) ?
		     CASE_guard983_0b0_requestR_BITS_191_TO_128_BIT_ETC__q15 :
		     CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q16)) ;
  assign IF_32_MINUS_0_CONCAT_IF_IF_IF_requestR_3_BIT_2_ETC___d507 =
	     _32_MINUS_0_CONCAT_IF_IF_IF_requestR_3_BIT_214__ETC___d296 ?
	       guard__h9453 != 2'b0 :
	       x__h9998[7:0] != 8'd255 && guard__h9983 != 2'b0 ;
  assign IF_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_214__ETC___d822 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_214_4_T_ETC___d652 ?
	       guard__h16375 != 2'b0 :
	       x__h16916[7:0] != 8'd255 && guard__h16901 != 2'b0 ;
  assign IF_IF_IF_IF_requestR_3_BIT_214_4_THEN_requestR_ETC___d379 =
	     (guard__h9453 == 2'b0) ?
	       8'd0 :
	       (requestR_BITS_191_TO_128__q1[31] ?
		  _theResult___exp__h9869 :
		  8'd0) ;
  assign IF_IF_IF_IF_requestR_3_BIT_214_4_THEN_requestR_ETC___d405 =
	     (guard__h9983 == 2'b0 || requestR_BITS_191_TO_128__q1[31]) ?
	       x__h9998[7:0] :
	       _theResult___exp__h10422 ;
  assign IF_IF_IF_IF_requestR_3_BIT_214_4_THEN_requestR_ETC___d407 =
	     (guard__h9983 == 2'b0) ?
	       x__h9998[7:0] :
	       (requestR_BITS_191_TO_128__q1[31] ?
		  _theResult___exp__h10422 :
		  x__h9998[7:0]) ;
  assign IF_IF_IF_IF_requestR_3_BIT_214_4_THEN_requestR_ETC___d428 =
	     (guard__h9453 == 2'b0 || requestR_BITS_191_TO_128__q1[31]) ?
	       sfd___3__h9443[31:9] :
	       _theResult___sfd__h9870 ;
  assign IF_IF_IF_IF_requestR_3_BIT_214_4_THEN_requestR_ETC___d430 =
	     (guard__h9453 == 2'b0) ?
	       sfd___3__h9443[31:9] :
	       (requestR_BITS_191_TO_128__q1[31] ?
		  _theResult___sfd__h9870 :
		  sfd___3__h9443[31:9]) ;
  assign IF_IF_IF_IF_requestR_3_BIT_214_4_THEN_requestR_ETC___d446 =
	     (guard__h9983 == 2'b0 || requestR_BITS_191_TO_128__q1[31]) ?
	       sfd___3__h9443[30:8] :
	       _theResult___sfd__h10423 ;
  assign IF_IF_IF_IF_requestR_3_BIT_214_4_THEN_requestR_ETC___d448 =
	     (guard__h9983 == 2'b0) ?
	       sfd___3__h9443[30:8] :
	       (requestR_BITS_191_TO_128__q1[31] ?
		  _theResult___sfd__h10423 :
		  sfd___3__h9443[30:8]) ;
  assign IF_IF_IF_requestR_3_BIT_214_4_THEN_requestR_3__ETC___d287 =
	     sfd__h3834[31] ?
	       6'd0 :
	       (sfd__h3834[30] ?
		  6'd1 :
		  (sfd__h3834[29] ?
		     6'd2 :
		     (sfd__h3834[28] ?
			6'd3 :
			(sfd__h3834[27] ?
			   6'd4 :
			   (sfd__h3834[26] ?
			      6'd5 :
			      (sfd__h3834[25] ?
				 6'd6 :
				 (sfd__h3834[24] ?
				    6'd7 :
				    (sfd__h3834[23] ?
				       6'd8 :
				       (sfd__h3834[22] ?
					  6'd9 :
					  (sfd__h3834[21] ?
					     6'd10 :
					     (sfd__h3834[20] ?
						6'd11 :
						(sfd__h3834[19] ?
						   6'd12 :
						   (sfd__h3834[18] ?
						      6'd13 :
						      (sfd__h3834[17] ?
							 6'd14 :
							 (sfd__h3834[16] ?
							    6'd15 :
							    (sfd__h3834[15] ?
							       6'd16 :
							       (sfd__h3834[14] ?
								  6'd17 :
								  (sfd__h3834[13] ?
								     6'd18 :
								     (sfd__h3834[12] ?
									6'd19 :
									(sfd__h3834[11] ?
									   6'd20 :
									   (sfd__h3834[10] ?
									      6'd21 :
									      (sfd__h3834[9] ?
										 6'd22 :
										 (sfd__h3834[8] ?
										    6'd23 :
										    (sfd__h3834[7] ?
										       6'd24 :
										       (sfd__h3834[6] ?
											  6'd25 :
											  (sfd__h3834[5] ?
											     6'd26 :
											     (sfd__h3834[4] ?
												6'd27 :
												(sfd__h3834[3] ?
												   6'd28 :
												   (sfd__h3834[2] ?
												      6'd29 :
												      (sfd__h3834[1] ?
													 6'd30 :
													 (sfd__h3834[0] ?
													    6'd31 :
													    6'd32))))))))))))))))))))))))))))))) ;
  assign IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d1053 =
	     requestR_BITS_191_TO_128__q1[31] ?
	       !IF_requestR_3_BIT_214_4_THEN_requestR_3_BITS_1_ETC___d1042 ||
	       IF_requestR_3_BIT_214_4_THEN_requestR_3_BITS_1_ETC___d1044 &&
	       !IF_requestR_3_BIT_214_4_THEN_requestR_3_BITS_1_ETC___d1045 :
	       IF_requestR_3_BIT_214_4_THEN_requestR_3_BITS_1_ETC___d1049 ||
	       IF_requestR_3_BIT_214_4_THEN_requestR_3_BITS_1_ETC___d1044 &&
	       IF_requestR_3_BIT_214_4_THEN_requestR_3_BITS_1_ETC___d1050 ;
  assign IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d1059 =
	     IF_requestR_3_BIT_214_4_THEN_requestR_3_BITS_1_ETC___d1033 ?
	       requestR_BITS_127_TO_64__q3[31:0] :
	       (NOT_IF_requestR_3_BIT_214_4_THEN_requestR_3_BI_ETC___d1057 ?
		  requestR_BITS_191_TO_128__q1[31:0] :
		  requestR_BITS_127_TO_64__q3[31:0]) ;
  assign IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d1060 =
	     (requestR_BITS_127_TO_64__q3[30:23] == 8'd255 &&
	      requestR_BITS_127_TO_64__q3[22] ||
	      IF_requestR_3_BIT_214_4_THEN_requestR_3_BITS_1_ETC___d1029) ?
	       requestR_BITS_191_TO_128__q1[31:0] :
	       IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d1059 ;
  assign IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d1064 =
	     (requestR_BITS_127_TO_64__q3[30:23] == 8'd255 &&
	      requestR_BITS_127_TO_64__q3[22:0] != 23'd0 &&
	      !requestR_BITS_127_TO_64__q3[22]) ?
	       res__h21240 :
	       ((requestR_BITS_191_TO_128__q1[30:23] == 8'd255 &&
		 requestR_BITS_191_TO_128__q1[22] &&
		 requestR_BITS_127_TO_64__q3[30:23] == 8'd255 &&
		 requestR_BITS_127_TO_64__q3[22]) ?
		  64'hFFFFFFFF7FC00000 :
		  { 32'hFFFFFFFF,
		    (requestR_BITS_191_TO_128__q1[30:23] == 8'd255 &&
		     requestR_BITS_191_TO_128__q1[22]) ?
		      requestR_BITS_127_TO_64__q3[31:0] :
		      IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d1060 }) ;
  assign IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d1075 =
	     IF_requestR_3_BIT_214_4_THEN_requestR_3_BITS_1_ETC___d1033 ?
	       requestR_BITS_191_TO_128__q1[31:0] :
	       (NOT_IF_requestR_3_BIT_214_4_THEN_requestR_3_BI_ETC___d1057 ?
		  requestR_BITS_127_TO_64__q3[31:0] :
		  requestR_BITS_191_TO_128__q1[31:0]) ;
  assign IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d1077 =
	     (requestR_BITS_127_TO_64__q3[30:23] == 8'd255 &&
	      requestR_BITS_127_TO_64__q3[22]) ?
	       requestR_BITS_191_TO_128__q1[31:0] :
	       (IF_requestR_3_BIT_214_4_THEN_requestR_3_BITS_1_ETC___d1029 ?
		  requestR_BITS_127_TO_64__q3[31:0] :
		  IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d1075) ;
  assign IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d1081 =
	     (requestR_BITS_127_TO_64__q3[30:23] == 8'd255 &&
	      requestR_BITS_127_TO_64__q3[22:0] != 23'd0 &&
	      !requestR_BITS_127_TO_64__q3[22]) ?
	       res__h21240 :
	       ((requestR_BITS_191_TO_128__q1[30:23] == 8'd255 &&
		 requestR_BITS_191_TO_128__q1[22] &&
		 requestR_BITS_127_TO_64__q3[30:23] == 8'd255 &&
		 requestR_BITS_127_TO_64__q3[22]) ?
		  64'hFFFFFFFF7FC00000 :
		  { 32'hFFFFFFFF,
		    (requestR_BITS_191_TO_128__q1[30:23] == 8'd255 &&
		     requestR_BITS_191_TO_128__q1[22]) ?
		      requestR_BITS_127_TO_64__q3[31:0] :
		      IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d1077 }) ;
  assign IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d1157 =
	     (requestR_BITS_191_TO_128__q1[30:23] == 8'd0 &&
	      requestR_BITS_191_TO_128__q1[22:0] == 23'd0) ?
	       res___1__h29895 :
	       ((requestR_BITS_191_TO_128__q1[30:23] == 8'd0) ?
		  res___1__h29914 :
		  res__h29930) ;
  assign IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d417 =
	     (requestR_BITS_191_TO_128__q1[31:0] == 32'd0 ||
	      !sfd__h3834[31] && !sfd__h3834[30] && !sfd__h3834[29] &&
	      !sfd__h3834[28] &&
	      !sfd__h3834[27] &&
	      !sfd__h3834[26] &&
	      !sfd__h3834[25] &&
	      !sfd__h3834[24] &&
	      !sfd__h3834[23] &&
	      !sfd__h3834[22] &&
	      !sfd__h3834[21] &&
	      !sfd__h3834[20] &&
	      !sfd__h3834[19] &&
	      !sfd__h3834[18] &&
	      !sfd__h3834[17] &&
	      !sfd__h3834[16] &&
	      !sfd__h3834[15] &&
	      !sfd__h3834[14] &&
	      !sfd__h3834[13] &&
	      !sfd__h3834[12] &&
	      !sfd__h3834[11] &&
	      !sfd__h3834[10] &&
	      !sfd__h3834[9] &&
	      !sfd__h3834[8] &&
	      !sfd__h3834[7] &&
	      !sfd__h3834[6] &&
	      !sfd__h3834[5] &&
	      !sfd__h3834[4] &&
	      !sfd__h3834[3] &&
	      !sfd__h3834[2] &&
	      !sfd__h3834[1] &&
	      !sfd__h3834[0]) ?
	       8'd0 :
	       _theResult___snd_fst_exp__h10531 ;
  assign IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d498 =
	     (sfd__h3834[31] || sfd__h3834[30] || sfd__h3834[29] ||
	      sfd__h3834[28] ||
	      sfd__h3834[27] ||
	      sfd__h3834[26] ||
	      sfd__h3834[25] ||
	      sfd__h3834[24] ||
	      sfd__h3834[23] ||
	      sfd__h3834[22] ||
	      sfd__h3834[21] ||
	      sfd__h3834[20] ||
	      sfd__h3834[19] ||
	      sfd__h3834[18] ||
	      sfd__h3834[17] ||
	      sfd__h3834[16] ||
	      sfd__h3834[15] ||
	      sfd__h3834[14] ||
	      sfd__h3834[13] ||
	      sfd__h3834[12] ||
	      sfd__h3834[11] ||
	      sfd__h3834[10] ||
	      sfd__h3834[9] ||
	      sfd__h3834[8] ||
	      sfd__h3834[7] ||
	      sfd__h3834[6] ||
	      sfd__h3834[5] ||
	      sfd__h3834[4] ||
	      sfd__h3834[3] ||
	      sfd__h3834[2] ||
	      sfd__h3834[1] ||
	      sfd__h3834[0]) &&
	     (!_32_MINUS_0_CONCAT_IF_IF_IF_requestR_3_BIT_214__ETC___d291 ||
	      !_32_MINUS_0_CONCAT_IF_IF_IF_requestR_3_BIT_214__ETC___d293 &&
	      !_32_MINUS_0_CONCAT_IF_IF_IF_requestR_3_BIT_214__ETC___d296 &&
	      _theResult___fst_exp__h10522 == 8'd255 &&
	      _theResult___fst_sfd__h10523 == 23'd0) ;
  assign IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d501 =
	     (sfd__h3834[31] || sfd__h3834[30] || sfd__h3834[29] ||
	      sfd__h3834[28] ||
	      sfd__h3834[27] ||
	      sfd__h3834[26] ||
	      sfd__h3834[25] ||
	      sfd__h3834[24] ||
	      sfd__h3834[23] ||
	      sfd__h3834[22] ||
	      sfd__h3834[21] ||
	      sfd__h3834[20] ||
	      sfd__h3834[19] ||
	      sfd__h3834[18] ||
	      sfd__h3834[17] ||
	      sfd__h3834[16] ||
	      sfd__h3834[15] ||
	      sfd__h3834[14] ||
	      sfd__h3834[13] ||
	      sfd__h3834[12] ||
	      sfd__h3834[11] ||
	      sfd__h3834[10] ||
	      sfd__h3834[9] ||
	      sfd__h3834[8] ||
	      sfd__h3834[7] ||
	      sfd__h3834[6] ||
	      sfd__h3834[5] ||
	      sfd__h3834[4] ||
	      sfd__h3834[3] ||
	      sfd__h3834[2] ||
	      sfd__h3834[1] ||
	      sfd__h3834[0]) &&
	     _32_MINUS_0_CONCAT_IF_IF_IF_requestR_3_BIT_214__ETC___d291 &&
	     _32_MINUS_0_CONCAT_IF_IF_IF_requestR_3_BIT_214__ETC___d293 ;
  assign IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d510 =
	     (sfd__h3834[31] || sfd__h3834[30] || sfd__h3834[29] ||
	      sfd__h3834[28] ||
	      sfd__h3834[27] ||
	      sfd__h3834[26] ||
	      sfd__h3834[25] ||
	      sfd__h3834[24] ||
	      sfd__h3834[23] ||
	      sfd__h3834[22] ||
	      sfd__h3834[21] ||
	      sfd__h3834[20] ||
	      sfd__h3834[19] ||
	      sfd__h3834[18] ||
	      sfd__h3834[17] ||
	      sfd__h3834[16] ||
	      sfd__h3834[15] ||
	      sfd__h3834[14] ||
	      sfd__h3834[13] ||
	      sfd__h3834[12] ||
	      sfd__h3834[11] ||
	      sfd__h3834[10] ||
	      sfd__h3834[9] ||
	      sfd__h3834[8] ||
	      sfd__h3834[7] ||
	      sfd__h3834[6] ||
	      sfd__h3834[5] ||
	      sfd__h3834[4] ||
	      sfd__h3834[3] ||
	      sfd__h3834[2] ||
	      sfd__h3834[1] ||
	      sfd__h3834[0]) &&
	     _32_MINUS_0_CONCAT_IF_IF_IF_requestR_3_BIT_214__ETC___d291 &&
	     !_32_MINUS_0_CONCAT_IF_IF_IF_requestR_3_BIT_214__ETC___d293 &&
	     IF_32_MINUS_0_CONCAT_IF_IF_IF_requestR_3_BIT_2_ETC___d507 ;
  assign IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d646 =
	     requestR_BITS_191_TO_128__q1[31] ?
	       6'd0 :
	       (requestR_BITS_191_TO_128__q1[30] ?
		  6'd1 :
		  (requestR_BITS_191_TO_128__q1[29] ?
		     6'd2 :
		     (requestR_BITS_191_TO_128__q1[28] ?
			6'd3 :
			(requestR_BITS_191_TO_128__q1[27] ?
			   6'd4 :
			   (requestR_BITS_191_TO_128__q1[26] ?
			      6'd5 :
			      (requestR_BITS_191_TO_128__q1[25] ?
				 6'd6 :
				 (requestR_BITS_191_TO_128__q1[24] ?
				    6'd7 :
				    (requestR_BITS_191_TO_128__q1[23] ?
				       6'd8 :
				       (requestR_BITS_191_TO_128__q1[22] ?
					  6'd9 :
					  (requestR_BITS_191_TO_128__q1[21] ?
					     6'd10 :
					     (requestR_BITS_191_TO_128__q1[20] ?
						6'd11 :
						(requestR_BITS_191_TO_128__q1[19] ?
						   6'd12 :
						   (requestR_BITS_191_TO_128__q1[18] ?
						      6'd13 :
						      (requestR_BITS_191_TO_128__q1[17] ?
							 6'd14 :
							 (requestR_BITS_191_TO_128__q1[16] ?
							    6'd15 :
							    (requestR_BITS_191_TO_128__q1[15] ?
							       6'd16 :
							       (requestR_BITS_191_TO_128__q1[14] ?
								  6'd17 :
								  (requestR_BITS_191_TO_128__q1[13] ?
								     6'd18 :
								     (requestR_BITS_191_TO_128__q1[12] ?
									6'd19 :
									(requestR_BITS_191_TO_128__q1[11] ?
									   6'd20 :
									   (requestR_BITS_191_TO_128__q1[10] ?
									      6'd21 :
									      (requestR_BITS_191_TO_128__q1[9] ?
										 6'd22 :
										 (requestR_BITS_191_TO_128__q1[8] ?
										    6'd23 :
										    (requestR_BITS_191_TO_128__q1[7] ?
										       6'd24 :
										       (requestR_BITS_191_TO_128__q1[6] ?
											  6'd25 :
											  (requestR_BITS_191_TO_128__q1[5] ?
											     6'd26 :
											     (requestR_BITS_191_TO_128__q1[4] ?
												6'd27 :
												(requestR_BITS_191_TO_128__q1[3] ?
												   6'd28 :
												   (requestR_BITS_191_TO_128__q1[2] ?
												      6'd29 :
												      (requestR_BITS_191_TO_128__q1[1] ?
													 6'd30 :
													 (requestR_BITS_191_TO_128__q1[0] ?
													    6'd31 :
													    6'd32))))))))))))))))))))))))))))))) ;
  assign IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d845 =
	     requestR_BITS_191_TO_128__q1[31] ? 32'h80000000 : 32'h7FFFFFFF ;
  assign IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d857 =
	     requestR_BITS_191_TO_128__q1[31] ? -b__h18152 : b__h18152 ;
  assign IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d874 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       ((guard__h18085 == 2'b10) ?
		  IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d857[24] :
		  guard__h18085 == 2'b11) :
	       ((requestR[194:192] == 3'h3) ?
		  guard__h18085 != 2'd0 :
		  requestR[194:192] == 3'h1 &&
		  IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d857[56] &&
		  guard__h18085 != 2'd0) ;
  assign IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d906 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       ((guard__h18639 == 2'b10) ?
		  x__h18828[25] :
		  guard__h18639 == 2'b11) :
	       ((requestR[194:192] == 3'h3) ?
		  guard__h18639 != 2'd0 :
		  requestR[194:192] == 3'h1 && x__h18828[56] &&
		  guard__h18639 != 2'd0) ;
  assign IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d916 =
	     (requestR_BITS_191_TO_128__q1[30:23] == 8'd255 &&
	      requestR_BITS_191_TO_128__q1[22:0] == 23'd0) ?
	       IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d845 :
	       ((requestR_BITS_191_TO_128__q1[30:23] == 8'd0 &&
		 requestR_BITS_191_TO_128__q1[22:0] == 23'd0) ?
		  32'd0 :
		  IF_NEG_SEXT_IF_requestR_3_BIT_214_4_THEN_reque_ETC___d914) ;
  assign IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d969 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       ((guard__h19742 == 2'b10) ?
		  x__h19963[25] :
		  guard__h19742 == 2'b11) :
	       requestR[194:192] == 3'h3 && guard__h19742 != 2'd0 ;
  assign IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d977 =
	     (requestR_BITS_191_TO_128__q1[30:23] == 8'd0 &&
	      requestR_BITS_191_TO_128__q1[22:0] == 23'd0) ?
	       32'd0 :
	       (NEG_SEXT_IF_requestR_3_BIT_214_4_THEN_requestR_ETC___d948[19] ?
		  32'hFFFFFFFF :
		  IF_NEG_SEXT_IF_requestR_3_BIT_214_4_THEN_reque_ETC___d975) ;
  assign IF_NEG_SEXT_IF_requestR_3_BIT_214_4_THEN_reque_ETC___d912 =
	     NEG_SEXT_IF_requestR_3_BIT_214_4_THEN_requestR_ETC___d885 ?
	       (IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d906 ?
		  ((x__h18828[56:25] == 32'h7FFFFFFF) ?
		     x__h18828[56:25] :
		     x__h18828[56:25] + 32'd1) :
		  x__h18828[56:25]) :
	       32'd0 ;
  assign IF_NEG_SEXT_IF_requestR_3_BIT_214_4_THEN_reque_ETC___d914 =
	     (NEG_SEXT_IF_requestR_3_BIT_214_4_THEN_requestR_ETC___d850 ==
	      20'd1048545) ?
	       ((_theResult_____2__h18087[32:31] == 2'b11) ?
		  _theResult_____2__h18087[31:0] :
		  IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d845) :
	       (NEG_SEXT_IF_requestR_3_BIT_214_4_THEN_requestR_ETC___d883[19] ?
		  IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d845 :
		  IF_NEG_SEXT_IF_requestR_3_BIT_214_4_THEN_reque_ETC___d912) ;
  assign IF_NEG_SEXT_IF_requestR_3_BIT_214_4_THEN_reque_ETC___d938 =
	     (NEG_SEXT_IF_requestR_3_BIT_214_4_THEN_requestR_ETC___d850 ==
	      20'd1048545) ?
	       _theResult_____2__h18087[32:31] == 2'b11 &&
	       guard__h18085 != 2'd0 :
	       !NEG_SEXT_IF_requestR_3_BIT_214_4_THEN_requestR_ETC___d883[19] &&
	       (!NEG_SEXT_IF_requestR_3_BIT_214_4_THEN_requestR_ETC___d885 ||
		guard__h18639 != 2'd0) ;
  assign IF_NEG_SEXT_IF_requestR_3_BIT_214_4_THEN_reque_ETC___d975 =
	     NEG_SEXT_IF_requestR_3_BIT_214_4_THEN_requestR_ETC___d950 ?
	       (IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d969 ?
		  ((x__h19963[56:25] == 32'hFFFFFFFF) ?
		     x__h19963[56:25] :
		     x__h19963[56:25] + 32'd1) :
		  x__h19963[56:25]) :
	       32'd0 ;
  assign IF_requestR_3_BIT_214_4_THEN_requestR_3_BITS_1_ETC___d1018 =
	     requestR_BITS_191_TO_128__q1[30:23] == 8'd255 &&
	     requestR_BITS_191_TO_128__q1[22:0] != 23'd0 &&
	     !requestR_BITS_191_TO_128__q1[22] &&
	     requestR_BITS_127_TO_64__q3[30:23] == 8'd255 &&
	     requestR_BITS_127_TO_64__q3[22:0] != 23'd0 &&
	     !requestR_BITS_127_TO_64__q3[22] ;
  assign IF_requestR_3_BIT_214_4_THEN_requestR_3_BITS_1_ETC___d1029 =
	     requestR_BITS_191_TO_128__q1[30:23] == 8'd0 &&
	     requestR_BITS_191_TO_128__q1[22:0] == 23'd0 &&
	     requestR_BITS_191_TO_128__q1[31] &&
	     requestR_BITS_127_TO_64__q3[30:23] == 8'd0 &&
	     requestR_BITS_127_TO_64__q3[22:0] == 23'd0 &&
	     !requestR_BITS_127_TO_64__q3[31] ;
  assign IF_requestR_3_BIT_214_4_THEN_requestR_3_BITS_1_ETC___d1033 =
	     requestR_BITS_127_TO_64__q3[30:23] == 8'd0 &&
	     requestR_BITS_127_TO_64__q3[22:0] == 23'd0 &&
	     requestR_BITS_127_TO_64__q3[31] &&
	     requestR_BITS_191_TO_128__q1[30:23] == 8'd0 &&
	     requestR_BITS_191_TO_128__q1[22:0] == 23'd0 &&
	     !requestR_BITS_191_TO_128__q1[31] ;
  assign IF_requestR_3_BIT_214_4_THEN_requestR_3_BITS_1_ETC___d1042 =
	     requestR_BITS_191_TO_128__q1[30:23] <=
	     requestR_BITS_127_TO_64__q3[30:23] ;
  assign IF_requestR_3_BIT_214_4_THEN_requestR_3_BITS_1_ETC___d1044 =
	     requestR_BITS_191_TO_128__q1[30:23] ==
	     requestR_BITS_127_TO_64__q3[30:23] ;
  assign IF_requestR_3_BIT_214_4_THEN_requestR_3_BITS_1_ETC___d1045 =
	     requestR_BITS_191_TO_128__q1[22:0] <=
	     requestR_BITS_127_TO_64__q3[22:0] ;
  assign IF_requestR_3_BIT_214_4_THEN_requestR_3_BITS_1_ETC___d1049 =
	     requestR_BITS_191_TO_128__q1[30:23] <
	     requestR_BITS_127_TO_64__q3[30:23] ;
  assign IF_requestR_3_BIT_214_4_THEN_requestR_3_BITS_1_ETC___d1050 =
	     requestR_BITS_191_TO_128__q1[22:0] <
	     requestR_BITS_127_TO_64__q3[22:0] ;
  assign IF_requestR_3_BIT_214_4_THEN_requestR_3_BITS_1_ETC___d1067 =
	     requestR_BITS_191_TO_128__q1[30:23] == 8'd255 &&
	     requestR_BITS_191_TO_128__q1[22:0] != 23'd0 &&
	     !requestR_BITS_191_TO_128__q1[22] ||
	     requestR_BITS_127_TO_64__q3[30:23] == 8'd255 &&
	     requestR_BITS_127_TO_64__q3[22:0] != 23'd0 &&
	     !requestR_BITS_127_TO_64__q3[22] ;
  assign IF_requestR_3_BIT_214_4_THEN_requestR_3_BITS_1_ETC___d1107 =
	     IF_requestR_3_BIT_214_4_THEN_requestR_3_BITS_1_ETC___d1067 ||
	     requestR_BITS_191_TO_128__q1[30:23] == 8'd255 &&
	     requestR_BITS_191_TO_128__q1[22] ||
	     requestR_BITS_127_TO_64__q3[30:23] == 8'd255 &&
	     requestR_BITS_127_TO_64__q3[22] ;
  assign IF_requestR_3_BIT_214_4_THEN_requestR_3_BITS_1_ETC___d1117 =
	     IF_requestR_3_BIT_214_4_THEN_requestR_3_BITS_1_ETC___d1042 &&
	     (!IF_requestR_3_BIT_214_4_THEN_requestR_3_BITS_1_ETC___d1044 ||
	      IF_requestR_3_BIT_214_4_THEN_requestR_3_BITS_1_ETC___d1045) &&
	     !IF_requestR_3_BIT_214_4_THEN_requestR_3_BITS_1_ETC___d1049 &&
	     (!IF_requestR_3_BIT_214_4_THEN_requestR_3_BITS_1_ETC___d1044 ||
	      !IF_requestR_3_BIT_214_4_THEN_requestR_3_BITS_1_ETC___d1050) ;
  assign IF_requestR_3_BIT_214_4_THEN_requestR_3_BITS_1_ETC___d1122 =
	     requestR_BITS_191_TO_128__q1[30:23] == 8'd0 &&
	     requestR_BITS_191_TO_128__q1[22:0] == 23'd0 &&
	     requestR_BITS_127_TO_64__q3[30:23] == 8'd0 &&
	     requestR_BITS_127_TO_64__q3[22:0] == 23'd0 ||
	     (!requestR_BITS_191_TO_128__q1[31] ||
	      requestR_BITS_127_TO_64__q3[31]) &&
	     (requestR_BITS_191_TO_128__q1[31] ||
	      !requestR_BITS_127_TO_64__q3[31]) &&
	     (requestR_BITS_191_TO_128__q1[31] ?
		IF_requestR_3_BIT_214_4_THEN_requestR_3_BITS_1_ETC___d1117 :
		NOT_IF_requestR_3_BIT_214_4_THEN_requestR_3_BI_ETC___d1118) ;
  assign IF_requestR_3_BIT_214_4_THEN_requestR_3_BITS_1_ETC___d813 =
	     (requestR_BITS_191_TO_128__q1[31] ||
	      requestR_BITS_191_TO_128__q1[30] ||
	      requestR_BITS_191_TO_128__q1[29] ||
	      requestR_BITS_191_TO_128__q1[28] ||
	      requestR_BITS_191_TO_128__q1[27] ||
	      requestR_BITS_191_TO_128__q1[26] ||
	      requestR_BITS_191_TO_128__q1[25] ||
	      requestR_BITS_191_TO_128__q1[24] ||
	      requestR_BITS_191_TO_128__q1[23] ||
	      requestR_BITS_191_TO_128__q1[22] ||
	      requestR_BITS_191_TO_128__q1[21] ||
	      requestR_BITS_191_TO_128__q1[20] ||
	      requestR_BITS_191_TO_128__q1[19] ||
	      requestR_BITS_191_TO_128__q1[18] ||
	      requestR_BITS_191_TO_128__q1[17] ||
	      requestR_BITS_191_TO_128__q1[16] ||
	      requestR_BITS_191_TO_128__q1[15] ||
	      requestR_BITS_191_TO_128__q1[14] ||
	      requestR_BITS_191_TO_128__q1[13] ||
	      requestR_BITS_191_TO_128__q1[12] ||
	      requestR_BITS_191_TO_128__q1[11] ||
	      requestR_BITS_191_TO_128__q1[10] ||
	      requestR_BITS_191_TO_128__q1[9] ||
	      requestR_BITS_191_TO_128__q1[8] ||
	      requestR_BITS_191_TO_128__q1[7] ||
	      requestR_BITS_191_TO_128__q1[6] ||
	      requestR_BITS_191_TO_128__q1[5] ||
	      requestR_BITS_191_TO_128__q1[4] ||
	      requestR_BITS_191_TO_128__q1[3] ||
	      requestR_BITS_191_TO_128__q1[2] ||
	      requestR_BITS_191_TO_128__q1[1] ||
	      requestR_BITS_191_TO_128__q1[0]) &&
	     (!_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_214_4_T_ETC___d650 ||
	      !_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_214_4_T_ETC___d651 &&
	      !_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_214_4_T_ETC___d652 &&
	      _theResult___fst_exp__h17439 == 8'd255 &&
	      _theResult___fst_sfd__h17440 == 23'd0) ;
  assign IF_requestR_3_BIT_214_4_THEN_requestR_3_BITS_1_ETC___d816 =
	     (requestR_BITS_191_TO_128__q1[31] ||
	      requestR_BITS_191_TO_128__q1[30] ||
	      requestR_BITS_191_TO_128__q1[29] ||
	      requestR_BITS_191_TO_128__q1[28] ||
	      requestR_BITS_191_TO_128__q1[27] ||
	      requestR_BITS_191_TO_128__q1[26] ||
	      requestR_BITS_191_TO_128__q1[25] ||
	      requestR_BITS_191_TO_128__q1[24] ||
	      requestR_BITS_191_TO_128__q1[23] ||
	      requestR_BITS_191_TO_128__q1[22] ||
	      requestR_BITS_191_TO_128__q1[21] ||
	      requestR_BITS_191_TO_128__q1[20] ||
	      requestR_BITS_191_TO_128__q1[19] ||
	      requestR_BITS_191_TO_128__q1[18] ||
	      requestR_BITS_191_TO_128__q1[17] ||
	      requestR_BITS_191_TO_128__q1[16] ||
	      requestR_BITS_191_TO_128__q1[15] ||
	      requestR_BITS_191_TO_128__q1[14] ||
	      requestR_BITS_191_TO_128__q1[13] ||
	      requestR_BITS_191_TO_128__q1[12] ||
	      requestR_BITS_191_TO_128__q1[11] ||
	      requestR_BITS_191_TO_128__q1[10] ||
	      requestR_BITS_191_TO_128__q1[9] ||
	      requestR_BITS_191_TO_128__q1[8] ||
	      requestR_BITS_191_TO_128__q1[7] ||
	      requestR_BITS_191_TO_128__q1[6] ||
	      requestR_BITS_191_TO_128__q1[5] ||
	      requestR_BITS_191_TO_128__q1[4] ||
	      requestR_BITS_191_TO_128__q1[3] ||
	      requestR_BITS_191_TO_128__q1[2] ||
	      requestR_BITS_191_TO_128__q1[1] ||
	      requestR_BITS_191_TO_128__q1[0]) &&
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_214_4_T_ETC___d650 &&
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_214_4_T_ETC___d651 ;
  assign IF_requestR_3_BIT_214_4_THEN_requestR_3_BITS_1_ETC___d825 =
	     (requestR_BITS_191_TO_128__q1[31] ||
	      requestR_BITS_191_TO_128__q1[30] ||
	      requestR_BITS_191_TO_128__q1[29] ||
	      requestR_BITS_191_TO_128__q1[28] ||
	      requestR_BITS_191_TO_128__q1[27] ||
	      requestR_BITS_191_TO_128__q1[26] ||
	      requestR_BITS_191_TO_128__q1[25] ||
	      requestR_BITS_191_TO_128__q1[24] ||
	      requestR_BITS_191_TO_128__q1[23] ||
	      requestR_BITS_191_TO_128__q1[22] ||
	      requestR_BITS_191_TO_128__q1[21] ||
	      requestR_BITS_191_TO_128__q1[20] ||
	      requestR_BITS_191_TO_128__q1[19] ||
	      requestR_BITS_191_TO_128__q1[18] ||
	      requestR_BITS_191_TO_128__q1[17] ||
	      requestR_BITS_191_TO_128__q1[16] ||
	      requestR_BITS_191_TO_128__q1[15] ||
	      requestR_BITS_191_TO_128__q1[14] ||
	      requestR_BITS_191_TO_128__q1[13] ||
	      requestR_BITS_191_TO_128__q1[12] ||
	      requestR_BITS_191_TO_128__q1[11] ||
	      requestR_BITS_191_TO_128__q1[10] ||
	      requestR_BITS_191_TO_128__q1[9] ||
	      requestR_BITS_191_TO_128__q1[8] ||
	      requestR_BITS_191_TO_128__q1[7] ||
	      requestR_BITS_191_TO_128__q1[6] ||
	      requestR_BITS_191_TO_128__q1[5] ||
	      requestR_BITS_191_TO_128__q1[4] ||
	      requestR_BITS_191_TO_128__q1[3] ||
	      requestR_BITS_191_TO_128__q1[2] ||
	      requestR_BITS_191_TO_128__q1[1] ||
	      requestR_BITS_191_TO_128__q1[0]) &&
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_214_4_T_ETC___d650 &&
	     !_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_214_4_T_ETC___d651 &&
	     IF_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_214__ETC___d822 ;
  assign IF_requestR_3_BIT_214_4_THEN_requestR_3_BITS_1_ETC___d987 =
	     requestR_BITS_191_TO_128__q1[30:23] == 8'd255 &&
	     requestR_BITS_191_TO_128__q1[22:0] != 23'd0 ||
	     requestR_BITS_191_TO_128__q1[30:23] == 8'd255 &&
	     requestR_BITS_191_TO_128__q1[22:0] == 23'd0 ||
	     (requestR_BITS_191_TO_128__q1[30:23] != 8'd0 ||
	      requestR_BITS_191_TO_128__q1[22:0] != 23'd0) &&
	     (NEG_SEXT_IF_requestR_3_BIT_214_4_THEN_requestR_ETC___d948[19] ||
	      NEG_SEXT_IF_requestR_3_BIT_214_4_THEN_requestR_ETC___d950 &&
	      IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d969 &&
	      x__h19963[56:25] == 32'hFFFFFFFF) ;
  assign IF_requestR_3_BIT_214_4_THEN_requestR_3_BITS_1_ETC___d998 =
	     { IF_requestR_3_BIT_214_4_THEN_requestR_3_BITS_1_ETC___d987,
	       3'd0,
	       (requestR_BITS_191_TO_128__q1[30:23] != 8'd255 ||
		requestR_BITS_191_TO_128__q1[22:0] == 23'd0) &&
	       (requestR_BITS_191_TO_128__q1[30:23] != 8'd255 ||
		requestR_BITS_191_TO_128__q1[22:0] != 23'd0) &&
	       NOT_IF_requestR_3_BIT_214_4_THEN_requestR_3_BI_ETC___d992 } ==
	     5'd0 ||
	     IF_requestR_3_BIT_214_4_THEN_requestR_3_BITS_1_ETC___d987 ;
  assign IF_sfd___3443_BIT_7_THEN_2_ELSE_0__q10 =
	     sfd___3__h9443[7] ? 2'd2 : 2'd0 ;
  assign IF_sfd___3443_BIT_8_THEN_2_ELSE_0__q9 =
	     sfd___3__h9443[8] ? 2'd2 : 2'd0 ;
  assign IF_sfd___36365_BIT_7_THEN_2_ELSE_0__q5 =
	     sfd___3__h16365[7] ? 2'd2 : 2'd0 ;
  assign IF_sfd___36365_BIT_8_THEN_2_ELSE_0__q4 =
	     sfd___3__h16365[8] ? 2'd2 : 2'd0 ;
  assign IF_x8828_BIT_24_THEN_2_ELSE_0__q30 = x__h18828[24] ? 2'd2 : 2'd0 ;
  assign IF_x9963_BIT_24_THEN_2_ELSE_0__q31 = x__h19963[24] ? 2'd2 : 2'd0 ;
  assign NEG_SEXT_IF_requestR_3_BIT_214_4_THEN_requestR_ETC___d850 =
	     -{ {12{requestR_BITS_191_TO_128_BITS_30_TO_23_MINUS_127__q29[7]}},
		requestR_BITS_191_TO_128_BITS_30_TO_23_MINUS_127__q29 } ;
  assign NEG_SEXT_IF_requestR_3_BIT_214_4_THEN_requestR_ETC___d882 =
	     NEG_SEXT_IF_requestR_3_BIT_214_4_THEN_requestR_ETC___d850 +
	     20'd32 ;
  assign NEG_SEXT_IF_requestR_3_BIT_214_4_THEN_requestR_ETC___d883 =
	     NEG_SEXT_IF_requestR_3_BIT_214_4_THEN_requestR_ETC___d882 -
	     20'd2 ;
  assign NEG_SEXT_IF_requestR_3_BIT_214_4_THEN_requestR_ETC___d885 =
	     (NEG_SEXT_IF_requestR_3_BIT_214_4_THEN_requestR_ETC___d883 ^
	      20'h80000) <=
	     20'd524320 ;
  assign NEG_SEXT_IF_requestR_3_BIT_214_4_THEN_requestR_ETC___d948 =
	     NEG_SEXT_IF_requestR_3_BIT_214_4_THEN_requestR_ETC___d882 -
	     20'd1 ;
  assign NEG_SEXT_IF_requestR_3_BIT_214_4_THEN_requestR_ETC___d950 =
	     (NEG_SEXT_IF_requestR_3_BIT_214_4_THEN_requestR_ETC___d948 ^
	      20'h80000) <=
	     20'd524320 ;
  assign NOT_IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_ETC___d295 =
	     !sfd__h3834[31] && !sfd__h3834[30] && !sfd__h3834[29] &&
	     !sfd__h3834[28] &&
	     !sfd__h3834[27] &&
	     !sfd__h3834[26] &&
	     !sfd__h3834[25] &&
	     !sfd__h3834[24] &&
	     !sfd__h3834[23] &&
	     !sfd__h3834[22] &&
	     !sfd__h3834[21] &&
	     !sfd__h3834[20] &&
	     !sfd__h3834[19] &&
	     !sfd__h3834[18] &&
	     !sfd__h3834[17] &&
	     !sfd__h3834[16] &&
	     !sfd__h3834[15] &&
	     !sfd__h3834[14] &&
	     !sfd__h3834[13] &&
	     !sfd__h3834[12] &&
	     !sfd__h3834[11] &&
	     !sfd__h3834[10] &&
	     !sfd__h3834[9] &&
	     !sfd__h3834[8] &&
	     !sfd__h3834[7] &&
	     !sfd__h3834[6] &&
	     !sfd__h3834[5] &&
	     !sfd__h3834[4] &&
	     !sfd__h3834[3] &&
	     !sfd__h3834[2] &&
	     !sfd__h3834[1] &&
	     !sfd__h3834[0] ||
	     !_32_MINUS_0_CONCAT_IF_IF_IF_requestR_3_BIT_214__ETC___d291 ||
	     _32_MINUS_0_CONCAT_IF_IF_IF_requestR_3_BIT_214__ETC___d293 ;
  assign NOT_IF_requestR_3_BIT_214_4_THEN_requestR_3_BI_ETC___d1057 =
	     (requestR_BITS_191_TO_128__q1[30:23] != 8'd255 ||
	      requestR_BITS_191_TO_128__q1[22:0] == 23'd0) &&
	     (requestR_BITS_127_TO_64__q3[30:23] != 8'd255 ||
	      requestR_BITS_127_TO_64__q3[22:0] == 23'd0) &&
	     (requestR_BITS_191_TO_128__q1[30:23] != 8'd0 ||
	      requestR_BITS_191_TO_128__q1[22:0] != 23'd0 ||
	      requestR_BITS_127_TO_64__q3[30:23] != 8'd0 ||
	      requestR_BITS_127_TO_64__q3[22:0] != 23'd0) &&
	     (requestR_BITS_191_TO_128__q1[31] &&
	      !requestR_BITS_127_TO_64__q3[31] ||
	      (requestR_BITS_191_TO_128__q1[31] ||
	       !requestR_BITS_127_TO_64__q3[31]) &&
	      IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d1053) ;
  assign NOT_IF_requestR_3_BIT_214_4_THEN_requestR_3_BI_ETC___d1118 =
	     !IF_requestR_3_BIT_214_4_THEN_requestR_3_BITS_1_ETC___d1049 &&
	     (!IF_requestR_3_BIT_214_4_THEN_requestR_3_BITS_1_ETC___d1044 ||
	      !IF_requestR_3_BIT_214_4_THEN_requestR_3_BITS_1_ETC___d1050) &&
	     IF_requestR_3_BIT_214_4_THEN_requestR_3_BITS_1_ETC___d1042 &&
	     (!IF_requestR_3_BIT_214_4_THEN_requestR_3_BITS_1_ETC___d1044 ||
	      IF_requestR_3_BIT_214_4_THEN_requestR_3_BITS_1_ETC___d1045) ;
  assign NOT_IF_requestR_3_BIT_214_4_THEN_requestR_3_BI_ETC___d1143 =
	     (requestR_BITS_191_TO_128__q1[30:23] != 8'd255 ||
	      requestR_BITS_191_TO_128__q1[22:0] == 23'd0) &&
	     (requestR_BITS_127_TO_64__q3[30:23] != 8'd255 ||
	      requestR_BITS_127_TO_64__q3[22:0] == 23'd0) &&
	     (requestR_BITS_191_TO_128__q1[31] &&
	      !requestR_BITS_127_TO_64__q3[31] ||
	      (requestR_BITS_191_TO_128__q1[31] ||
	       !requestR_BITS_127_TO_64__q3[31]) &&
	      IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d1053 ||
	      IF_requestR_3_BIT_214_4_THEN_requestR_3_BITS_1_ETC___d1122) ;
  assign NOT_IF_requestR_3_BIT_214_4_THEN_requestR_3_BI_ETC___d739 =
	     !requestR_BITS_191_TO_128__q1[31] &&
	     !requestR_BITS_191_TO_128__q1[30] &&
	     !requestR_BITS_191_TO_128__q1[29] &&
	     !requestR_BITS_191_TO_128__q1[28] &&
	     !requestR_BITS_191_TO_128__q1[27] &&
	     !requestR_BITS_191_TO_128__q1[26] &&
	     !requestR_BITS_191_TO_128__q1[25] &&
	     !requestR_BITS_191_TO_128__q1[24] &&
	     !requestR_BITS_191_TO_128__q1[23] &&
	     !requestR_BITS_191_TO_128__q1[22] &&
	     !requestR_BITS_191_TO_128__q1[21] &&
	     !requestR_BITS_191_TO_128__q1[20] &&
	     !requestR_BITS_191_TO_128__q1[19] &&
	     !requestR_BITS_191_TO_128__q1[18] &&
	     !requestR_BITS_191_TO_128__q1[17] &&
	     !requestR_BITS_191_TO_128__q1[16] &&
	     !requestR_BITS_191_TO_128__q1[15] &&
	     !requestR_BITS_191_TO_128__q1[14] &&
	     !requestR_BITS_191_TO_128__q1[13] &&
	     !requestR_BITS_191_TO_128__q1[12] &&
	     !requestR_BITS_191_TO_128__q1[11] &&
	     !requestR_BITS_191_TO_128__q1[10] &&
	     !requestR_BITS_191_TO_128__q1[9] &&
	     !requestR_BITS_191_TO_128__q1[8] &&
	     !requestR_BITS_191_TO_128__q1[7] &&
	     !requestR_BITS_191_TO_128__q1[6] &&
	     !requestR_BITS_191_TO_128__q1[5] &&
	     !requestR_BITS_191_TO_128__q1[4] &&
	     !requestR_BITS_191_TO_128__q1[3] &&
	     !requestR_BITS_191_TO_128__q1[2] &&
	     !requestR_BITS_191_TO_128__q1[1] &&
	     !requestR_BITS_191_TO_128__q1[0] ||
	     !_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_214_4_T_ETC___d650 ||
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_214_4_T_ETC___d651 ;
  assign NOT_IF_requestR_3_BIT_214_4_THEN_requestR_3_BI_ETC___d927 =
	     (requestR_BITS_191_TO_128__q1[30:23] != 8'd0 ||
	      requestR_BITS_191_TO_128__q1[22:0] != 23'd0) &&
	     ((NEG_SEXT_IF_requestR_3_BIT_214_4_THEN_requestR_ETC___d850 ==
	       20'd1048545) ?
		_theResult_____2__h18087[32:31] != 2'b11 :
		NEG_SEXT_IF_requestR_3_BIT_214_4_THEN_requestR_ETC___d883[19] ||
		NEG_SEXT_IF_requestR_3_BIT_214_4_THEN_requestR_ETC___d885 &&
		IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d906 &&
		x__h18828[56:25] == 32'h7FFFFFFF) ;
  assign NOT_IF_requestR_3_BIT_214_4_THEN_requestR_3_BI_ETC___d992 =
	     (requestR_BITS_191_TO_128__q1[30:23] != 8'd0 ||
	      requestR_BITS_191_TO_128__q1[22:0] != 23'd0) &&
	     !NEG_SEXT_IF_requestR_3_BIT_214_4_THEN_requestR_ETC___d948[19] &&
	     (!NEG_SEXT_IF_requestR_3_BIT_214_4_THEN_requestR_ETC___d950 ||
	      guard__h19742 != 2'd0) ;
  assign NOT_verbosity_ULE_1_6___d27 = verbosity > 4'd1 ;
  assign _32_MINUS_0_CONCAT_IF_IF_IF_requestR_3_BIT_214__ETC___d290 =
	     (9'd32 -
	      { 3'd0,
		IF_IF_IF_requestR_3_BIT_214_4_THEN_requestR_3__ETC___d287 }) -
	     9'd1 ;
  assign _32_MINUS_0_CONCAT_IF_IF_IF_requestR_3_BIT_214__ETC___d291 =
	     (_32_MINUS_0_CONCAT_IF_IF_IF_requestR_3_BIT_214__ETC___d290 ^
	      9'h100) <=
	     9'd383 ;
  assign _32_MINUS_0_CONCAT_IF_IF_IF_requestR_3_BIT_214__ETC___d293 =
	     (_32_MINUS_0_CONCAT_IF_IF_IF_requestR_3_BIT_214__ETC___d290 ^
	      9'h100) <
	     9'd107 ;
  assign _32_MINUS_0_CONCAT_IF_IF_IF_requestR_3_BIT_214__ETC___d296 =
	     (_32_MINUS_0_CONCAT_IF_IF_IF_requestR_3_BIT_214__ETC___d290 ^
	      9'h100) <
	     9'd130 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_214_4_T_ETC___d649 =
	     (9'd32 -
	      { 3'd0,
		IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d646 }) -
	     9'd1 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_214_4_T_ETC___d650 =
	     (_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_214_4_T_ETC___d649 ^
	      9'h100) <=
	     9'd383 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_214_4_T_ETC___d651 =
	     (_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_214_4_T_ETC___d649 ^
	      9'h100) <
	     9'd107 ;
  assign _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_214_4_T_ETC___d652 =
	     (_32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_214_4_T_ETC___d649 ^
	      9'h100) <
	     9'd130 ;
  assign _theResult_____2__h18087 =
	     IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d874 ?
	       out1___1__h18579 :
	       IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d857[56:24] ;
  assign _theResult___exp__h10422 =
	     sfd__h10013[24] ?
	       ((x__h9998[7:0] == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h10565) :
	       ((x__h9998[7:0] == 8'd0 && sfd__h10013[24:23] == 2'b01) ?
		  8'd1 :
		  x__h9998[7:0]) ;
  assign _theResult___exp__h16788 =
	     (sfd__h16392[24] || sfd__h16392[24:23] == 2'b01) ? 8'd1 : 8'd0 ;
  assign _theResult___exp__h17340 =
	     sfd__h16931[24] ?
	       ((x__h16916[7:0] == 8'd254) ?
		  8'd255 :
		  din_inc___2_exp__h17478) :
	       ((x__h16916[7:0] == 8'd0 && sfd__h16931[24:23] == 2'b01) ?
		  8'd1 :
		  x__h16916[7:0]) ;
  assign _theResult___exp__h9869 =
	     (sfd__h9470[24] || sfd__h9470[24:23] == 2'b01) ? 8'd1 : 8'd0 ;
  assign _theResult___fst_exp__h10519 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard983_0b0_x998_BITS_7_TO_0_0b1_x998_BI_ETC__q18 :
	       IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d411 ;
  assign _theResult___fst_exp__h10522 =
	     (x__h9998[7:0] == 8'd255) ?
	       x__h9998[7:0] :
	       _theResult___fst_exp__h10519 ;
  assign _theResult___fst_exp__h16884 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard6375_0b0_0_0b1_0_0b10_out_exp6791_0b_ETC__q6 :
	       CASE_requestR_BITS_194_TO_192_0x3_IF_guard6375_ETC__q8 ;
  assign _theResult___fst_exp__h17436 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard6901_0b0_x6916_BITS_7_TO_0_0b1_x6916_ETC__q24 :
	       IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d730 ;
  assign _theResult___fst_exp__h17439 =
	     (x__h16916[7:0] == 8'd255) ?
	       x__h16916[7:0] :
	       _theResult___fst_exp__h17436 ;
  assign _theResult___fst_exp__h9966 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard453_0b0_0_0b1_0_0b10_out_exp872_0b11_ETC__q12 :
	       IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d382 ;
  assign _theResult___fst_sfd__h10520 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard983_0b0_sfd___3443_BITS_30_TO_8_0b1__ETC__q22 :
	       IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d452 ;
  assign _theResult___fst_sfd__h10523 =
	     (x__h9998[7:0] == 8'd255) ?
	       sfd___3__h9443[30:8] :
	       _theResult___fst_sfd__h10520 ;
  assign _theResult___fst_sfd__h16885 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard6375_0b0_sfd___36365_BITS_31_TO_9_0b_ETC__q28 :
	       IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d753 ;
  assign _theResult___fst_sfd__h17437 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard6901_0b0_sfd___36365_BITS_30_TO_8_0b_ETC__q26 :
	       IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d768 ;
  assign _theResult___fst_sfd__h17440 =
	     (x__h16916[7:0] == 8'd255) ?
	       sfd___3__h16365[30:8] :
	       _theResult___fst_sfd__h17437 ;
  assign _theResult___fst_sfd__h9967 =
	     (requestR[194:192] != 3'h1 && requestR[194:192] != 3'h2 &&
	      requestR[194:192] != 3'h3 &&
	      requestR[194:192] != 3'h4) ?
	       CASE_guard453_0b0_sfd___3443_BITS_31_TO_9_0b1__ETC__q20 :
	       IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d434 ;
  assign _theResult___sfd__h10423 =
	     sfd__h10013[24] ?
	       ((x__h9998[7:0] == 8'd254) ? 23'd0 : sfd__h10013[23:1]) :
	       sfd__h10013[22:0] ;
  assign _theResult___sfd__h16789 =
	     sfd__h16392[24] ? sfd__h16392[23:1] : sfd__h16392[22:0] ;
  assign _theResult___sfd__h17341 =
	     sfd__h16931[24] ?
	       ((x__h16916[7:0] == 8'd254) ? 23'd0 : sfd__h16931[23:1]) :
	       sfd__h16931[22:0] ;
  assign _theResult___sfd__h9870 =
	     sfd__h9470[24] ? sfd__h9470[23:1] : sfd__h9470[22:0] ;
  assign _theResult___snd_fst_exp__h10525 =
	     _32_MINUS_0_CONCAT_IF_IF_IF_requestR_3_BIT_214__ETC___d296 ?
	       _theResult___fst_exp__h9966 :
	       _theResult___fst_exp__h10522 ;
  assign _theResult___snd_fst_exp__h10528 =
	     _32_MINUS_0_CONCAT_IF_IF_IF_requestR_3_BIT_214__ETC___d293 ?
	       8'd0 :
	       _theResult___snd_fst_exp__h10525 ;
  assign _theResult___snd_fst_exp__h10531 =
	     _32_MINUS_0_CONCAT_IF_IF_IF_requestR_3_BIT_214__ETC___d291 ?
	       _theResult___snd_fst_exp__h10528 :
	       8'd255 ;
  assign _theResult___snd_fst_exp__h17442 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_214_4_T_ETC___d652 ?
	       _theResult___fst_exp__h16884 :
	       _theResult___fst_exp__h17439 ;
  assign _theResult___snd_fst_exp__h17445 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_214_4_T_ETC___d651 ?
	       8'd0 :
	       _theResult___snd_fst_exp__h17442 ;
  assign _theResult___snd_fst_exp__h17448 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_214_4_T_ETC___d650 ?
	       _theResult___snd_fst_exp__h17445 :
	       8'd255 ;
  assign _theResult___snd_fst_sfd__h10526 =
	     _32_MINUS_0_CONCAT_IF_IF_IF_requestR_3_BIT_214__ETC___d296 ?
	       _theResult___fst_sfd__h9967 :
	       _theResult___fst_sfd__h10523 ;
  assign _theResult___snd_fst_sfd__h17443 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_214_4_T_ETC___d652 ?
	       _theResult___fst_sfd__h16885 :
	       _theResult___fst_sfd__h17440 ;
  assign b__h18152 = { value__h18154, 32'd0 } ;
  assign din_inc___2_exp__h10565 = x__h9998[7:0] + 8'd1 ;
  assign din_inc___2_exp__h17478 = x__h16916[7:0] + 8'd1 ;
  assign guard__h16375 =
	     { IF_sfd___36365_BIT_8_THEN_2_ELSE_0__q4[1],
	       { sfd___3__h16365[7:0], 23'd0 } != 31'd0 } ;
  assign guard__h16901 =
	     { IF_sfd___36365_BIT_7_THEN_2_ELSE_0__q5[1],
	       { sfd___3__h16365[6:0], 24'd0 } != 31'd0 } ;
  assign guard__h18085 =
	     { IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d857[23],
	       { IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d857[22:0],
		 33'd0 } !=
	       56'd0 } ;
  assign guard__h18639 =
	     { IF_x8828_BIT_24_THEN_2_ELSE_0__q30[1],
	       { x__h18828[23:0], 32'd0 } != 56'd0 } ;
  assign guard__h19742 =
	     { IF_x9963_BIT_24_THEN_2_ELSE_0__q31[1],
	       { x__h19963[23:0], 32'd0 } != 56'd0 } ;
  assign guard__h9453 =
	     { IF_sfd___3443_BIT_8_THEN_2_ELSE_0__q9[1],
	       { sfd___3__h9443[7:0], 23'd0 } != 31'd0 } ;
  assign guard__h9983 =
	     { IF_sfd___3443_BIT_7_THEN_2_ELSE_0__q10[1],
	       { sfd___3__h9443[6:0], 24'd0 } != 31'd0 } ;
  assign out1___1__h18579 =
	     IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d857[56:24] +
	     33'd1 ;
  assign out_exp__h10425 =
	     sfd___3__h9443[8] ? _theResult___exp__h10422 : x__h9998[7:0] ;
  assign out_exp__h16791 =
	     sfd___3__h16365[9] ? _theResult___exp__h16788 : 8'd0 ;
  assign out_exp__h17343 =
	     sfd___3__h16365[8] ? _theResult___exp__h17340 : x__h16916[7:0] ;
  assign out_exp__h9872 = sfd___3__h9443[9] ? _theResult___exp__h9869 : 8'd0 ;
  assign out_sfd__h10426 =
	     sfd___3__h9443[8] ?
	       _theResult___sfd__h10423 :
	       sfd___3__h9443[30:8] ;
  assign out_sfd__h16792 =
	     sfd___3__h16365[9] ?
	       _theResult___sfd__h16789 :
	       sfd___3__h16365[31:9] ;
  assign out_sfd__h17344 =
	     sfd___3__h16365[8] ?
	       _theResult___sfd__h17341 :
	       sfd___3__h16365[30:8] ;
  assign out_sfd__h9873 =
	     sfd___3__h9443[9] ?
	       _theResult___sfd__h9870 :
	       sfd___3__h9443[31:9] ;
  assign requestR_BITS_127_TO_64__q3 = requestR[127:64] ;
  assign requestR_BITS_191_TO_128_BITS_30_TO_23_MINUS_127__q29 =
	     requestR_BITS_191_TO_128__q1[30:23] - 8'd127 ;
  assign requestR_BITS_191_TO_128_BITS_31_TO_0__q2 =
	     requestR_BITS_191_TO_128__q1[31:0] ;
  assign requestR_BITS_191_TO_128__q1 = requestR[191:128] ;
  assign requestR_BITS_206_TO_200__q32 = requestR[206:200] ;
  assign res___1__h29650 =
	     (requestR_BITS_191_TO_128__q1[30:23] == 8'd255 &&
	      requestR_BITS_191_TO_128__q1[22]) ?
	       64'd512 :
	       64'd256 ;
  assign res___1__h29885 =
	     requestR_BITS_191_TO_128__q1[31] ? 64'd1 : 64'd128 ;
  assign res___1__h29895 = requestR_BITS_191_TO_128__q1[31] ? 64'd8 : 64'd16 ;
  assign res___1__h29914 = requestR_BITS_191_TO_128__q1[31] ? 64'd4 : 64'd32 ;
  assign res__h21004 = { 32'hFFFFFFFF, requestR_BITS_127_TO_64__q3[31:0] } ;
  assign res__h21240 = { 32'hFFFFFFFF, requestR_BITS_191_TO_128__q1[31:0] } ;
  assign res__h26751 =
	     ((requestR_BITS_191_TO_128__q1[30:23] != 8'd255 ||
	       requestR_BITS_191_TO_128__q1[22:0] == 23'd0) &&
	      (requestR_BITS_127_TO_64__q3[30:23] != 8'd255 ||
	       requestR_BITS_127_TO_64__q3[22:0] == 23'd0) &&
	      IF_requestR_3_BIT_214_4_THEN_requestR_3_BITS_1_ETC___d1122) ?
	       64'd1 :
	       64'd0 ;
  assign res__h28268 =
	     NOT_IF_requestR_3_BIT_214_4_THEN_requestR_3_BI_ETC___d1057 ?
	       64'd1 :
	       64'd0 ;
  assign res__h29373 =
	     NOT_IF_requestR_3_BIT_214_4_THEN_requestR_3_BI_ETC___d1143 ?
	       64'd1 :
	       64'd0 ;
  assign res__h29930 = requestR_BITS_191_TO_128__q1[31] ? 64'd2 : 64'd64 ;
  assign res__h30122 = { 32'hFFFFFFFF, fpu_server_core_response_get[36:5] } ;
  assign sfd___3__h16365 =
	     requestR_BITS_191_TO_128__q1[31:0] <<
	     IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d646 ;
  assign sfd___3__h9443 =
	     sfd__h3834 <<
	     IF_IF_IF_requestR_3_BIT_214_4_THEN_requestR_3__ETC___d287 ;
  assign sfd__h10013 =
	     { 1'b0, x__h9998[7:0] != 8'd0, sfd___3__h9443[30:8] } + 25'd1 ;
  assign sfd__h16392 = { 2'd0, sfd___3__h16365[31:9] } + 25'd1 ;
  assign sfd__h16931 =
	     { 1'b0, x__h16916[7:0] != 8'd0, sfd___3__h16365[30:8] } + 25'd1 ;
  assign sfd__h3834 =
	     requestR_BITS_191_TO_128__q1[31] ?
	       -requestR_BITS_191_TO_128__q1[31:0] :
	       requestR_BITS_191_TO_128__q1[31:0] ;
  assign sfd__h9470 = { 2'd0, sfd___3__h9443[31:9] } + 25'd1 ;
  assign value__h18154 =
	     { 1'b0,
	       requestR_BITS_191_TO_128__q1[30:23] != 8'd0,
	       requestR_BITS_191_TO_128__q1[22:0] } ;
  assign x__h10691 =
	     { 2'd0,
	       requestR_BITS_191_TO_128__q1[31:0] != 32'd0 &&
	       IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d498,
	       requestR_BITS_191_TO_128__q1[31:0] != 32'd0 &&
	       IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d501,
	       requestR_BITS_191_TO_128__q1[31:0] != 32'd0 &&
	       IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d510 } ;
  assign x__h11019 =
	     { 33'h1FFFFFFFE,
	       (requestR_BITS_191_TO_128__q1[31:0] == 32'd0) ?
		 8'd0 :
		 _theResult___snd_fst_exp__h17448,
	       (requestR_BITS_191_TO_128__q1[31:0] == 32'd0 ||
		NOT_IF_requestR_3_BIT_214_4_THEN_requestR_3_BI_ETC___d739) ?
		 23'd0 :
		 _theResult___snd_fst_sfd__h17443 } ;
  assign x__h16916 =
	     _32_MINUS_0_CONCAT_IF_IF_requestR_3_BIT_214_4_T_ETC___d649 +
	     9'd127 ;
  assign x__h17582 =
	     { 2'd0,
	       requestR_BITS_191_TO_128__q1[31:0] != 32'd0 &&
	       IF_requestR_3_BIT_214_4_THEN_requestR_3_BITS_1_ETC___d813,
	       requestR_BITS_191_TO_128__q1[31:0] != 32'd0 &&
	       IF_requestR_3_BIT_214_4_THEN_requestR_3_BITS_1_ETC___d816,
	       requestR_BITS_191_TO_128__q1[31:0] != 32'd0 &&
	       IF_requestR_3_BIT_214_4_THEN_requestR_3_BITS_1_ETC___d825 } ;
  assign x__h17906 = { {32{x__h17909[31]}}, x__h17909 } ;
  assign x__h17909 =
	     (requestR_BITS_191_TO_128__q1[30:23] == 8'd255 &&
	      requestR_BITS_191_TO_128__q1[22:0] != 23'd0 ||
	      !requestR_BITS_191_TO_128__q1[31] &&
	      requestR_BITS_191_TO_128__q1[30:23] == 8'd255 &&
	      requestR_BITS_191_TO_128__q1[22:0] == 23'd0) ?
	       32'h7FFFFFFF :
	       IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d916 ;
  assign x__h18828 =
	     IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d857 >>
	     NEG_SEXT_IF_requestR_3_BIT_214_4_THEN_requestR_ETC___d883 |
	     ~(57'h1FFFFFFFFFFFFFF >>
	       NEG_SEXT_IF_requestR_3_BIT_214_4_THEN_requestR_ETC___d883) &
	     {57{IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d857[56]}} ;
  assign x__h19242 =
	     { requestR_BITS_191_TO_128__q1[30:23] == 8'd255 &&
	       requestR_BITS_191_TO_128__q1[22:0] != 23'd0 ||
	       requestR_BITS_191_TO_128__q1[30:23] == 8'd255 &&
	       requestR_BITS_191_TO_128__q1[22:0] == 23'd0 ||
	       NOT_IF_requestR_3_BIT_214_4_THEN_requestR_3_BI_ETC___d927,
	       3'd0,
	       (requestR_BITS_191_TO_128__q1[30:23] != 8'd255 ||
		requestR_BITS_191_TO_128__q1[22:0] == 23'd0) &&
	       (requestR_BITS_191_TO_128__q1[30:23] != 8'd255 ||
		requestR_BITS_191_TO_128__q1[22:0] != 23'd0) &&
	       (requestR_BITS_191_TO_128__q1[30:23] != 8'd0 ||
		requestR_BITS_191_TO_128__q1[22:0] != 23'd0) &&
	       IF_NEG_SEXT_IF_requestR_3_BIT_214_4_THEN_reque_ETC___d938 } ;
  assign x__h19539 = { {32{x__h19542[31]}}, x__h19542 } ;
  assign x__h19542 =
	     (requestR_BITS_191_TO_128__q1[30:23] == 8'd255 &&
	      requestR_BITS_191_TO_128__q1[22:0] != 23'd0 ||
	      !requestR_BITS_191_TO_128__q1[31] &&
	      requestR_BITS_191_TO_128__q1[30:23] == 8'd255 &&
	      requestR_BITS_191_TO_128__q1[22:0] == 23'd0) ?
	       32'hFFFFFFFF :
	       (requestR_BITS_191_TO_128__q1[31] ?
		  32'd0 :
		  ((requestR_BITS_191_TO_128__q1[30:23] == 8'd255 &&
		    requestR_BITS_191_TO_128__q1[22:0] == 23'd0) ?
		     32'hFFFFFFFF :
		     IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d977)) ;
  assign x__h19963 =
	     { requestR_BITS_191_TO_128__q1[30:23] != 8'd0,
	       requestR_BITS_191_TO_128__q1[22:0],
	       33'd0 } >>
	     NEG_SEXT_IF_requestR_3_BIT_214_4_THEN_requestR_ETC___d948 ;
  assign x__h20041 =
	     { requestR_BITS_191_TO_128__q1[31] ?
		 IF_requestR_3_BIT_214_4_THEN_requestR_3_BITS_1_ETC___d998 :
		 IF_requestR_3_BIT_214_4_THEN_requestR_3_BITS_1_ETC___d987,
	       3'd0,
	       (requestR_BITS_191_TO_128__q1[30:23] != 8'd255 ||
		requestR_BITS_191_TO_128__q1[22:0] == 23'd0) &&
	       (requestR_BITS_191_TO_128__q1[30:23] != 8'd255 ||
		requestR_BITS_191_TO_128__q1[22:0] != 23'd0) &&
	       NOT_IF_requestR_3_BIT_214_4_THEN_requestR_3_BI_ETC___d992 } ;
  assign x__h20328 =
	     IF_requestR_3_BIT_214_4_THEN_requestR_3_BITS_1_ETC___d1018 ?
	       64'hFFFFFFFF7FC00000 :
	       ((requestR_BITS_191_TO_128__q1[30:23] == 8'd255 &&
		 requestR_BITS_191_TO_128__q1[22:0] != 23'd0 &&
		 !requestR_BITS_191_TO_128__q1[22]) ?
		  res__h21004 :
		  IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d1064) ;
  assign x__h22360 =
	     { IF_requestR_3_BIT_214_4_THEN_requestR_3_BITS_1_ETC___d1067,
	       4'd0 } ;
  assign x__h22992 =
	     IF_requestR_3_BIT_214_4_THEN_requestR_3_BITS_1_ETC___d1018 ?
	       64'hFFFFFFFF7FC00000 :
	       ((requestR_BITS_191_TO_128__q1[30:23] == 8'd255 &&
		 requestR_BITS_191_TO_128__q1[22:0] != 23'd0 &&
		 !requestR_BITS_191_TO_128__q1[22]) ?
		  res__h21004 :
		  IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d1081) ;
  assign x__h25707 =
	     { {32{requestR_BITS_191_TO_128_BITS_31_TO_0__q2[31]}},
	       requestR_BITS_191_TO_128_BITS_31_TO_0__q2 } ;
  assign x__h25885 =
	     IF_requestR_3_BIT_214_4_THEN_requestR_3_BITS_1_ETC___d1107 ?
	       64'd0 :
	       res__h26751 ;
  assign x__h27402 =
	     IF_requestR_3_BIT_214_4_THEN_requestR_3_BITS_1_ETC___d1107 ?
	       64'd0 :
	       res__h28268 ;
  assign x__h28287 =
	     { requestR_BITS_191_TO_128__q1[30:23] == 8'd255 &&
	       requestR_BITS_191_TO_128__q1[22:0] != 23'd0 ||
	       requestR_BITS_127_TO_64__q3[30:23] == 8'd255 &&
	       requestR_BITS_127_TO_64__q3[22:0] != 23'd0,
	       4'd0 } ;
  assign x__h28507 =
	     IF_requestR_3_BIT_214_4_THEN_requestR_3_BITS_1_ETC___d1107 ?
	       64'd0 :
	       res__h29373 ;
  assign x__h29630 =
	     (requestR_BITS_191_TO_128__q1[30:23] == 8'd255 &&
	      requestR_BITS_191_TO_128__q1[22:0] != 23'd0) ?
	       res___1__h29650 :
	       ((requestR_BITS_191_TO_128__q1[30:23] == 8'd255 &&
		 requestR_BITS_191_TO_128__q1[22:0] == 23'd0) ?
		  res___1__h29885 :
		  IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d1157) ;
  assign x__h30041 =
	     fpu_server_core_response_get[69] ?
	       ((fpu_server_core_response_get[35:28] == 8'd255 &&
		 fpu_server_core_response_get[27:5] != 23'd0) ?
		  64'hFFFFFFFF7FC00000 :
		  res__h30122) :
	       ((fpu_server_core_response_get[67:57] == 11'd2047 &&
		 fpu_server_core_response_get[56:5] != 52'd0) ?
		  64'h7FF8000000000000 :
		  fpu_server_core_response_get[68:5]) ;
  assign x__h3273 = { 32'hFFFFFFFF, x__h3280 } ;
  assign x__h3280 =
	     { requestR_BITS_127_TO_64__q3[31],
	       requestR_BITS_191_TO_128__q1[30:0] } ;
  assign x__h3449 = { 32'hFFFFFFFF, x__h3456 } ;
  assign x__h3456 =
	     { !requestR_BITS_127_TO_64__q3[31],
	       requestR_BITS_191_TO_128__q1[30:0] } ;
  assign x__h3622 = { 32'hFFFFFFFF, x__h3629 } ;
  assign x__h3629 =
	     { requestR_BITS_191_TO_128__q1[31] !=
	       requestR_BITS_127_TO_64__q3[31],
	       requestR_BITS_191_TO_128__q1[30:0] } ;
  assign x__h3813 = { 32'hFFFFFFFF, x__h3819 } ;
  assign x__h3819 =
	     { requestR_BITS_191_TO_128__q1[31:0] != 32'd0 &&
	       (NOT_IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_ETC___d295 ?
		  requestR_BITS_191_TO_128__q1[31] :
		  IF_32_MINUS_0_CONCAT_IF_IF_IF_requestR_3_BIT_2_ETC___d357),
	       IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d417,
	       (requestR_BITS_191_TO_128__q1[31:0] == 32'd0 ||
		NOT_IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_ETC___d295) ?
		 23'd0 :
		 _theResult___snd_fst_sfd__h10526 } ;
  assign x__h9998 =
	     _32_MINUS_0_CONCAT_IF_IF_IF_requestR_3_BIT_214__ETC___d290 +
	     9'd127 ;
  always@(guard__h16375 or out_exp__h16791 or _theResult___exp__h16788)
  begin
    case (guard__h16375)
      2'b0, 2'b01:
	  CASE_guard6375_0b0_0_0b1_0_0b10_out_exp6791_0b_ETC__q6 = 8'd0;
      2'b10:
	  CASE_guard6375_0b0_0_0b1_0_0b10_out_exp6791_0b_ETC__q6 =
	      out_exp__h16791;
      2'b11:
	  CASE_guard6375_0b0_0_0b1_0_0b10_out_exp6791_0b_ETC__q6 =
	      _theResult___exp__h16788;
    endcase
  end
  always@(guard__h16375 or _theResult___exp__h16788)
  begin
    case (guard__h16375)
      2'b0: CASE_guard6375_0b0_0_0b1_theResult___exp6788_0_ETC__q7 = 8'd0;
      2'b01, 2'b10, 2'b11:
	  CASE_guard6375_0b0_0_0b1_theResult___exp6788_0_ETC__q7 =
	      _theResult___exp__h16788;
    endcase
  end
  always@(requestR or
	  guard__h16375 or
	  _theResult___exp__h16788 or
	  CASE_guard6375_0b0_0_0b1_theResult___exp6788_0_ETC__q7)
  begin
    case (requestR[194:192])
      3'h3:
	  CASE_requestR_BITS_194_TO_192_0x3_IF_guard6375_ETC__q8 =
	      (guard__h16375 == 2'b0) ? 8'd0 : _theResult___exp__h16788;
      3'h4:
	  CASE_requestR_BITS_194_TO_192_0x3_IF_guard6375_ETC__q8 =
	      CASE_guard6375_0b0_0_0b1_theResult___exp6788_0_ETC__q7;
      default: CASE_requestR_BITS_194_TO_192_0x3_IF_guard6375_ETC__q8 = 8'd0;
    endcase
  end
  always@(requestR)
  begin
    case (requestR[194:192])
      3'h0:
	  IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d45 =
	      requestR[194:192];
      3'h1: IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d45 = 3'd4;
      3'h2: IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d45 = 3'd3;
      3'h3: IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d45 = 3'd2;
      3'h4: IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d45 = 3'd1;
      default: IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d45 =
		   3'd0;
    endcase
  end
  always@(guard__h9453 or _theResult___exp__h9869)
  begin
    case (guard__h9453)
      2'b0: CASE_guard453_0b0_0_0b1_theResult___exp869_0b1_ETC__q11 = 8'd0;
      2'b01, 2'b10, 2'b11:
	  CASE_guard453_0b0_0_0b1_theResult___exp869_0b1_ETC__q11 =
	      _theResult___exp__h9869;
    endcase
  end
  always@(requestR or
	  IF_IF_IF_IF_requestR_3_BIT_214_4_THEN_requestR_ETC___d379 or
	  guard__h9453 or
	  requestR_BITS_191_TO_128__q1 or
	  _theResult___exp__h9869 or
	  CASE_guard453_0b0_0_0b1_theResult___exp869_0b1_ETC__q11)
  begin
    case (requestR[194:192])
      3'h2:
	  IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d382 =
	      IF_IF_IF_IF_requestR_3_BIT_214_4_THEN_requestR_ETC___d379;
      3'h3:
	  IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d382 =
	      (guard__h9453 == 2'b0 || requestR_BITS_191_TO_128__q1[31]) ?
		8'd0 :
		_theResult___exp__h9869;
      3'h4:
	  IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d382 =
	      CASE_guard453_0b0_0_0b1_theResult___exp869_0b1_ETC__q11;
      default: IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d382 =
		   8'd0;
    endcase
  end
  always@(guard__h9453 or out_exp__h9872 or _theResult___exp__h9869)
  begin
    case (guard__h9453)
      2'b0, 2'b01:
	  CASE_guard453_0b0_0_0b1_0_0b10_out_exp872_0b11_ETC__q12 = 8'd0;
      2'b10:
	  CASE_guard453_0b0_0_0b1_0_0b10_out_exp872_0b11_ETC__q12 =
	      out_exp__h9872;
      2'b11:
	  CASE_guard453_0b0_0_0b1_0_0b10_out_exp872_0b11_ETC__q12 =
	      _theResult___exp__h9869;
    endcase
  end
  always@(guard__h9453 or requestR_BITS_191_TO_128__q1)
  begin
    case (guard__h9453)
      2'b0, 2'b01, 2'b10:
	  CASE_guard453_0b0_requestR_BITS_191_TO_128_BIT_ETC__q13 =
	      requestR_BITS_191_TO_128__q1[31];
      2'd3:
	  CASE_guard453_0b0_requestR_BITS_191_TO_128_BIT_ETC__q13 =
	      guard__h9453 == 2'b11 && requestR_BITS_191_TO_128__q1[31];
    endcase
  end
  always@(requestR or requestR_BITS_191_TO_128__q1 or guard__h9453)
  begin
    case (requestR[194:192])
      3'h2, 3'h3:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q14 =
	      requestR_BITS_191_TO_128__q1[31];
      3'h4:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q14 =
	      (guard__h9453 == 2'b0) ?
		requestR_BITS_191_TO_128__q1[31] :
		(guard__h9453 == 2'b01 || guard__h9453 == 2'b10 ||
		 guard__h9453 == 2'b11) &&
		requestR_BITS_191_TO_128__q1[31];
      default: CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q14 =
		   requestR[194:192] == 3'h1 &&
		   requestR_BITS_191_TO_128__q1[31];
    endcase
  end
  always@(guard__h9983 or requestR_BITS_191_TO_128__q1)
  begin
    case (guard__h9983)
      2'b0, 2'b01, 2'b10:
	  CASE_guard983_0b0_requestR_BITS_191_TO_128_BIT_ETC__q15 =
	      requestR_BITS_191_TO_128__q1[31];
      2'd3:
	  CASE_guard983_0b0_requestR_BITS_191_TO_128_BIT_ETC__q15 =
	      guard__h9983 == 2'b11 && requestR_BITS_191_TO_128__q1[31];
    endcase
  end
  always@(requestR or requestR_BITS_191_TO_128__q1 or guard__h9983)
  begin
    case (requestR[194:192])
      3'h2, 3'h3:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q16 =
	      requestR_BITS_191_TO_128__q1[31];
      3'h4:
	  CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q16 =
	      (guard__h9983 == 2'b0) ?
		requestR_BITS_191_TO_128__q1[31] :
		(guard__h9983 == 2'b01 || guard__h9983 == 2'b10 ||
		 guard__h9983 == 2'b11) &&
		requestR_BITS_191_TO_128__q1[31];
      default: CASE_requestR_BITS_194_TO_192_0x2_requestR_BIT_ETC__q16 =
		   requestR[194:192] == 3'h1 &&
		   requestR_BITS_191_TO_128__q1[31];
    endcase
  end
  always@(guard__h9983 or x__h9998 or _theResult___exp__h10422)
  begin
    case (guard__h9983)
      2'b0:
	  CASE_guard983_0b0_x998_BITS_7_TO_0_0b1_theResu_ETC__q17 =
	      x__h9998[7:0];
      2'b01, 2'b10, 2'b11:
	  CASE_guard983_0b0_x998_BITS_7_TO_0_0b1_theResu_ETC__q17 =
	      _theResult___exp__h10422;
    endcase
  end
  always@(requestR or
	  x__h9998 or
	  IF_IF_IF_IF_requestR_3_BIT_214_4_THEN_requestR_ETC___d407 or
	  IF_IF_IF_IF_requestR_3_BIT_214_4_THEN_requestR_ETC___d405 or
	  CASE_guard983_0b0_x998_BITS_7_TO_0_0b1_theResu_ETC__q17)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d411 =
	      x__h9998[7:0];
      3'h2:
	  IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d411 =
	      IF_IF_IF_IF_requestR_3_BIT_214_4_THEN_requestR_ETC___d407;
      3'h3:
	  IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d411 =
	      IF_IF_IF_IF_requestR_3_BIT_214_4_THEN_requestR_ETC___d405;
      3'h4:
	  IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d411 =
	      CASE_guard983_0b0_x998_BITS_7_TO_0_0b1_theResu_ETC__q17;
      default: IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d411 =
		   8'd0;
    endcase
  end
  always@(guard__h9983 or
	  x__h9998 or out_exp__h10425 or _theResult___exp__h10422)
  begin
    case (guard__h9983)
      2'b0, 2'b01:
	  CASE_guard983_0b0_x998_BITS_7_TO_0_0b1_x998_BI_ETC__q18 =
	      x__h9998[7:0];
      2'b10:
	  CASE_guard983_0b0_x998_BITS_7_TO_0_0b1_x998_BI_ETC__q18 =
	      out_exp__h10425;
      2'b11:
	  CASE_guard983_0b0_x998_BITS_7_TO_0_0b1_x998_BI_ETC__q18 =
	      _theResult___exp__h10422;
    endcase
  end
  always@(guard__h9453 or sfd___3__h9443 or _theResult___sfd__h9870)
  begin
    case (guard__h9453)
      2'b0:
	  CASE_guard453_0b0_sfd___3443_BITS_31_TO_9_0b1__ETC__q19 =
	      sfd___3__h9443[31:9];
      2'b01, 2'b10, 2'b11:
	  CASE_guard453_0b0_sfd___3443_BITS_31_TO_9_0b1__ETC__q19 =
	      _theResult___sfd__h9870;
    endcase
  end
  always@(requestR or
	  sfd___3__h9443 or
	  IF_IF_IF_IF_requestR_3_BIT_214_4_THEN_requestR_ETC___d430 or
	  IF_IF_IF_IF_requestR_3_BIT_214_4_THEN_requestR_ETC___d428 or
	  CASE_guard453_0b0_sfd___3443_BITS_31_TO_9_0b1__ETC__q19)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d434 =
	      sfd___3__h9443[31:9];
      3'h2:
	  IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d434 =
	      IF_IF_IF_IF_requestR_3_BIT_214_4_THEN_requestR_ETC___d430;
      3'h3:
	  IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d434 =
	      IF_IF_IF_IF_requestR_3_BIT_214_4_THEN_requestR_ETC___d428;
      3'h4:
	  IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d434 =
	      CASE_guard453_0b0_sfd___3443_BITS_31_TO_9_0b1__ETC__q19;
      default: IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d434 =
		   23'd0;
    endcase
  end
  always@(guard__h9453 or
	  sfd___3__h9443 or out_sfd__h9873 or _theResult___sfd__h9870)
  begin
    case (guard__h9453)
      2'b0, 2'b01:
	  CASE_guard453_0b0_sfd___3443_BITS_31_TO_9_0b1__ETC__q20 =
	      sfd___3__h9443[31:9];
      2'b10:
	  CASE_guard453_0b0_sfd___3443_BITS_31_TO_9_0b1__ETC__q20 =
	      out_sfd__h9873;
      2'b11:
	  CASE_guard453_0b0_sfd___3443_BITS_31_TO_9_0b1__ETC__q20 =
	      _theResult___sfd__h9870;
    endcase
  end
  always@(guard__h9983 or sfd___3__h9443 or _theResult___sfd__h10423)
  begin
    case (guard__h9983)
      2'b0:
	  CASE_guard983_0b0_sfd___3443_BITS_30_TO_8_0b1__ETC__q21 =
	      sfd___3__h9443[30:8];
      2'b01, 2'b10, 2'b11:
	  CASE_guard983_0b0_sfd___3443_BITS_30_TO_8_0b1__ETC__q21 =
	      _theResult___sfd__h10423;
    endcase
  end
  always@(requestR or
	  sfd___3__h9443 or
	  IF_IF_IF_IF_requestR_3_BIT_214_4_THEN_requestR_ETC___d448 or
	  IF_IF_IF_IF_requestR_3_BIT_214_4_THEN_requestR_ETC___d446 or
	  CASE_guard983_0b0_sfd___3443_BITS_30_TO_8_0b1__ETC__q21)
  begin
    case (requestR[194:192])
      3'h1:
	  IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d452 =
	      sfd___3__h9443[30:8];
      3'h2:
	  IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d452 =
	      IF_IF_IF_IF_requestR_3_BIT_214_4_THEN_requestR_ETC___d448;
      3'h3:
	  IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d452 =
	      IF_IF_IF_IF_requestR_3_BIT_214_4_THEN_requestR_ETC___d446;
      3'h4:
	  IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d452 =
	      CASE_guard983_0b0_sfd___3443_BITS_30_TO_8_0b1__ETC__q21;
      default: IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d452 =
		   23'd0;
    endcase
  end
  always@(guard__h9983 or
	  sfd___3__h9443 or out_sfd__h10426 or _theResult___sfd__h10423)
  begin
    case (guard__h9983)
      2'b0, 2'b01:
	  CASE_guard983_0b0_sfd___3443_BITS_30_TO_8_0b1__ETC__q22 =
	      sfd___3__h9443[30:8];
      2'b10:
	  CASE_guard983_0b0_sfd___3443_BITS_30_TO_8_0b1__ETC__q22 =
	      out_sfd__h10426;
      2'b11:
	  CASE_guard983_0b0_sfd___3443_BITS_30_TO_8_0b1__ETC__q22 =
	      _theResult___sfd__h10423;
    endcase
  end
  always@(guard__h16901 or x__h16916 or _theResult___exp__h17340)
  begin
    case (guard__h16901)
      2'b0:
	  CASE_guard6901_0b0_x6916_BITS_7_TO_0_0b1_theRe_ETC__q23 =
	      x__h16916[7:0];
      2'b01, 2'b10, 2'b11:
	  CASE_guard6901_0b0_x6916_BITS_7_TO_0_0b1_theRe_ETC__q23 =
	      _theResult___exp__h17340;
    endcase
  end
  always@(requestR or
	  x__h16916 or
	  guard__h16901 or
	  _theResult___exp__h17340 or
	  CASE_guard6901_0b0_x6916_BITS_7_TO_0_0b1_theRe_ETC__q23)
  begin
    case (requestR[194:192])
      3'h1, 3'h2:
	  IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d730 =
	      x__h16916[7:0];
      3'h3:
	  IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d730 =
	      (guard__h16901 == 2'b0) ?
		x__h16916[7:0] :
		_theResult___exp__h17340;
      3'h4:
	  IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d730 =
	      CASE_guard6901_0b0_x6916_BITS_7_TO_0_0b1_theRe_ETC__q23;
      default: IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d730 =
		   8'd0;
    endcase
  end
  always@(guard__h16901 or
	  x__h16916 or out_exp__h17343 or _theResult___exp__h17340)
  begin
    case (guard__h16901)
      2'b0, 2'b01:
	  CASE_guard6901_0b0_x6916_BITS_7_TO_0_0b1_x6916_ETC__q24 =
	      x__h16916[7:0];
      2'b10:
	  CASE_guard6901_0b0_x6916_BITS_7_TO_0_0b1_x6916_ETC__q24 =
	      out_exp__h17343;
      2'b11:
	  CASE_guard6901_0b0_x6916_BITS_7_TO_0_0b1_x6916_ETC__q24 =
	      _theResult___exp__h17340;
    endcase
  end
  always@(guard__h16901 or sfd___3__h16365 or _theResult___sfd__h17341)
  begin
    case (guard__h16901)
      2'b0:
	  CASE_guard6901_0b0_sfd___36365_BITS_30_TO_8_0b_ETC__q25 =
	      sfd___3__h16365[30:8];
      2'b01, 2'b10, 2'b11:
	  CASE_guard6901_0b0_sfd___36365_BITS_30_TO_8_0b_ETC__q25 =
	      _theResult___sfd__h17341;
    endcase
  end
  always@(requestR or
	  sfd___3__h16365 or
	  guard__h16901 or
	  _theResult___sfd__h17341 or
	  CASE_guard6901_0b0_sfd___36365_BITS_30_TO_8_0b_ETC__q25)
  begin
    case (requestR[194:192])
      3'h1, 3'h2:
	  IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d768 =
	      sfd___3__h16365[30:8];
      3'h3:
	  IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d768 =
	      (guard__h16901 == 2'b0) ?
		sfd___3__h16365[30:8] :
		_theResult___sfd__h17341;
      3'h4:
	  IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d768 =
	      CASE_guard6901_0b0_sfd___36365_BITS_30_TO_8_0b_ETC__q25;
      default: IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d768 =
		   23'd0;
    endcase
  end
  always@(guard__h16901 or
	  sfd___3__h16365 or out_sfd__h17344 or _theResult___sfd__h17341)
  begin
    case (guard__h16901)
      2'b0, 2'b01:
	  CASE_guard6901_0b0_sfd___36365_BITS_30_TO_8_0b_ETC__q26 =
	      sfd___3__h16365[30:8];
      2'b10:
	  CASE_guard6901_0b0_sfd___36365_BITS_30_TO_8_0b_ETC__q26 =
	      out_sfd__h17344;
      2'b11:
	  CASE_guard6901_0b0_sfd___36365_BITS_30_TO_8_0b_ETC__q26 =
	      _theResult___sfd__h17341;
    endcase
  end
  always@(guard__h16375 or sfd___3__h16365 or _theResult___sfd__h16789)
  begin
    case (guard__h16375)
      2'b0:
	  CASE_guard6375_0b0_sfd___36365_BITS_31_TO_9_0b_ETC__q27 =
	      sfd___3__h16365[31:9];
      2'b01, 2'b10, 2'b11:
	  CASE_guard6375_0b0_sfd___36365_BITS_31_TO_9_0b_ETC__q27 =
	      _theResult___sfd__h16789;
    endcase
  end
  always@(requestR or
	  sfd___3__h16365 or
	  guard__h16375 or
	  _theResult___sfd__h16789 or
	  CASE_guard6375_0b0_sfd___36365_BITS_31_TO_9_0b_ETC__q27)
  begin
    case (requestR[194:192])
      3'h1, 3'h2:
	  IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d753 =
	      sfd___3__h16365[31:9];
      3'h3:
	  IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d753 =
	      (guard__h16375 == 2'b0) ?
		sfd___3__h16365[31:9] :
		_theResult___sfd__h16789;
      3'h4:
	  IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d753 =
	      CASE_guard6375_0b0_sfd___36365_BITS_31_TO_9_0b_ETC__q27;
      default: IF_IF_requestR_3_BIT_214_4_THEN_requestR_3_BIT_ETC___d753 =
		   23'd0;
    endcase
  end
  always@(guard__h16375 or
	  sfd___3__h16365 or out_sfd__h16792 or _theResult___sfd__h16789)
  begin
    case (guard__h16375)
      2'b0, 2'b01:
	  CASE_guard6375_0b0_sfd___36365_BITS_31_TO_9_0b_ETC__q28 =
	      sfd___3__h16365[31:9];
      2'b10:
	  CASE_guard6375_0b0_sfd___36365_BITS_31_TO_9_0b_ETC__q28 =
	      out_sfd__h16792;
      2'b11:
	  CASE_guard6375_0b0_sfd___36365_BITS_31_TO_9_0b_ETC__q28 =
	      _theResult___sfd__h16789;
    endcase
  end

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        stateR <= `BSV_ASSIGNMENT_DELAY 2'd0;
      end
    else
      begin
        if (stateR_EN) stateR <= `BSV_ASSIGNMENT_DELAY stateR_D_IN;
      end
    if (requestR_EN) requestR <= `BSV_ASSIGNMENT_DELAY requestR_D_IN;
    if (resultR_EN) resultR <= `BSV_ASSIGNMENT_DELAY resultR_D_IN;
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    requestR = 215'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    resultR = 70'h2AAAAAAAAAAAAAAAAA;
    stateR = 2'h2;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFADD_S && NOT_verbosity_ULE_1_6___d27)
	begin
	  v__h1190 = $stime;
	  #0;
	end
    v__h1184 = v__h1190 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFADD_S && NOT_verbosity_ULE_1_6___d27)
	$display("%0d: FBox_Core.doFADD: ", v__h1184);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFSUB_S && NOT_verbosity_ULE_1_6___d27)
	begin
	  v__h1673 = $stime;
	  #0;
	end
    v__h1667 = v__h1673 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFSUB_S && NOT_verbosity_ULE_1_6___d27)
	$display("%0d: FBox_Core.doFSUB: ", v__h1667);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFMUL_S && NOT_verbosity_ULE_1_6___d27)
	begin
	  v__h1860 = $stime;
	  #0;
	end
    v__h1854 = v__h1860 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFMUL_S && NOT_verbosity_ULE_1_6___d27)
	$display("%0d: FBox_Core.doFMUL: ", v__h1854);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFMADD_S && NOT_verbosity_ULE_1_6___d27)
	begin
	  v__h2060 = $stime;
	  #0;
	end
    v__h2054 = v__h2060 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFMADD_S && NOT_verbosity_ULE_1_6___d27)
	$display("%0d: FBox_Core.doFMADD_S ", v__h2054);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFMSUB_S && NOT_verbosity_ULE_1_6___d27)
	begin
	  v__h2274 = $stime;
	  #0;
	end
    v__h2268 = v__h2274 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFMSUB_S && NOT_verbosity_ULE_1_6___d27)
	$display("%0d: FBox_Core.doFMSUB_S ", v__h2268);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFNMADD_S && NOT_verbosity_ULE_1_6___d27)
	begin
	  v__h2446 = $stime;
	  #0;
	end
    v__h2440 = v__h2446 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFNMADD_S && NOT_verbosity_ULE_1_6___d27)
	$display("%0d: FBox_Core.doFNMADD_S ", v__h2440);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFNMSUB_S && NOT_verbosity_ULE_1_6___d27)
	begin
	  v__h2618 = $stime;
	  #0;
	end
    v__h2612 = v__h2618 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFNMSUB_S && NOT_verbosity_ULE_1_6___d27)
	$display("%0d: FBox_Core.doFNMSUB_S ", v__h2612);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFDIV_S && NOT_verbosity_ULE_1_6___d27)
	begin
	  v__h2797 = $stime;
	  #0;
	end
    v__h2791 = v__h2797 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFDIV_S && NOT_verbosity_ULE_1_6___d27)
	$display("%0d: FBox_Core.doFDIV_S ", v__h2791);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFSQRT_S && NOT_verbosity_ULE_1_6___d27)
	begin
	  v__h2984 = $stime;
	  #0;
	end
    v__h2978 = v__h2984 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFSQRT_S && NOT_verbosity_ULE_1_6___d27)
	$display("%0d: FBox_Core.doFSQRT_S ", v__h2978);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFSGNJ_S && NOT_verbosity_ULE_1_6___d27)
	begin
	  v__h3181 = $stime;
	  #0;
	end
    v__h3175 = v__h3181 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFSGNJ_S && NOT_verbosity_ULE_1_6___d27)
	$display("%0d: FBox_Core.doFSGNJ_S ", v__h3175);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFSGNJN_S && NOT_verbosity_ULE_1_6___d27)
	begin
	  v__h3364 = $stime;
	  #0;
	end
    v__h3358 = v__h3364 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFSGNJN_S && NOT_verbosity_ULE_1_6___d27)
	$display("%0d: FBox_Core.doFSGNJN_S ", v__h3358);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFSGNJX_S && NOT_verbosity_ULE_1_6___d27)
	begin
	  v__h3537 = $stime;
	  #0;
	end
    v__h3531 = v__h3537 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFSGNJX_S && NOT_verbosity_ULE_1_6___d27)
	$display("%0d: FBox_Core.doFSGNJX_S ", v__h3531);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFCVT_S_W && NOT_verbosity_ULE_1_6___d27)
	begin
	  v__h3726 = $stime;
	  #0;
	end
    v__h3720 = v__h3726 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFCVT_S_W && NOT_verbosity_ULE_1_6___d27)
	$display("%0d: FBox_Core.doFCVT_S_W ", v__h3720);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFCVT_S_WU && NOT_verbosity_ULE_1_6___d27)
	begin
	  v__h10932 = $stime;
	  #0;
	end
    v__h10926 = v__h10932 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFCVT_S_WU && NOT_verbosity_ULE_1_6___d27)
	$display("%0d: FBox_Core.doFCVT_S_WU ", v__h10926);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFCVT_W_S && NOT_verbosity_ULE_1_6___d27)
	begin
	  v__h17820 = $stime;
	  #0;
	end
    v__h17814 = v__h17820 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFCVT_W_S && NOT_verbosity_ULE_1_6___d27)
	$display("%0d: FBox_Core.doFCVT_W_S ", v__h17814);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFCVT_WU_S && NOT_verbosity_ULE_1_6___d27)
	begin
	  v__h19451 = $stime;
	  #0;
	end
    v__h19445 = v__h19451 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFCVT_WU_S && NOT_verbosity_ULE_1_6___d27)
	$display("%0d: FBox_Core.doFCVT_WU_S ", v__h19445);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFMIN_S && NOT_verbosity_ULE_1_6___d27)
	begin
	  v__h20238 = $stime;
	  #0;
	end
    v__h20232 = v__h20238 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFMIN_S && NOT_verbosity_ULE_1_6___d27)
	$display("%0d: FBox_Core.doFMIN_S ", v__h20232);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFMAX_S && NOT_verbosity_ULE_1_6___d27)
	begin
	  v__h22902 = $stime;
	  #0;
	end
    v__h22896 = v__h22902 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFMAX_S && NOT_verbosity_ULE_1_6___d27)
	$display("%0d: FBox_Core.doFMAX_S ", v__h22896);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFMV_W_X && NOT_verbosity_ULE_1_6___d27)
	begin
	  v__h25463 = $stime;
	  #0;
	end
    v__h25457 = v__h25463 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFMV_W_X && NOT_verbosity_ULE_1_6___d27)
	$display("%0d: FBox_Core.doFMV_W_X ", v__h25457);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFMV_X_W && NOT_verbosity_ULE_1_6___d27)
	begin
	  v__h25623 = $stime;
	  #0;
	end
    v__h25617 = v__h25623 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFMV_X_W && NOT_verbosity_ULE_1_6___d27)
	$display("%0d: FBox_Core.doFMV_X_W ", v__h25617);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFEQ_S && NOT_verbosity_ULE_1_6___d27)
	begin
	  v__h25799 = $stime;
	  #0;
	end
    v__h25793 = v__h25799 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFEQ_S && NOT_verbosity_ULE_1_6___d27)
	$display("%0d: FBox_Core.doFEQ_S ", v__h25793);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFLT_S && NOT_verbosity_ULE_1_6___d27)
	begin
	  v__h27316 = $stime;
	  #0;
	end
    v__h27310 = v__h27316 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFLT_S && NOT_verbosity_ULE_1_6___d27)
	$display("%0d: FBox_Core.doFLT_S ", v__h27310);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFLE_S && NOT_verbosity_ULE_1_6___d27)
	begin
	  v__h28421 = $stime;
	  #0;
	end
    v__h28415 = v__h28421 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFLE_S && NOT_verbosity_ULE_1_6___d27)
	$display("%0d: FBox_Core.doFLE_S ", v__h28415);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFCLASS_S && NOT_verbosity_ULE_1_6___d27)
	begin
	  v__h29546 = $stime;
	  #0;
	end
    v__h29540 = v__h29546 / 32'd10;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_doFCLASS_S && NOT_verbosity_ULE_1_6___d27)
	$display("%0d: FBox_Core.doFCLASS_S ", v__h29540);
  end
  // synopsys translate_on
endmodule  // mkFBox_Core

